diff -urN nagios-3.2.3.orig/cgi/avail.c nagios-3.2.3/cgi/avail.c
--- nagios-3.2.3.orig/cgi/avail.c	2010-12-12 00:47:54.000000000 +0900
+++ nagios-3.2.3/cgi/avail.c	2010-12-12 19:59:07.000000000 +0900
@@ -385,19 +385,19 @@
 
 		switch(display_type){
 		case DISPLAY_HOST_AVAIL:
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Host Availability Report");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホストの稼働レポート");
 			break;
 		case DISPLAY_SERVICE_AVAIL:
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Service Availability Report");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"サービスの稼働レポート");
 			break;
 		case DISPLAY_HOSTGROUP_AVAIL:
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Hostgroup Availability Report");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホストグループの稼働レポート");
 			break;
 		case DISPLAY_SERVICEGROUP_AVAIL:
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Servicegroup Availability Report");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"サービスグループの稼働レポート");
 			break;
 		default:
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Availability Report");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"稼働レポート");
 			break;
 		        }
 		temp_buffer[sizeof(temp_buffer)-1]='\x0';
@@ -409,35 +409,35 @@
 			printf("<TR><TD CLASS='linkBox'>\n");
 
 			if(display_type==DISPLAY_HOST_AVAIL && show_all_hosts==FALSE){
-				host_report_url("all","View Availability Report For All Hosts");
+				host_report_url("all","全ホストの稼働レポート");
 				printf("<BR>\n");
 #ifdef USE_TRENDS
-				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&assumestateretention=%s&assumeinitialstates=%s&includesoftstates=%s&assumestatesduringnotrunning=%s&initialassumedhoststate=%d&backtrack=%d'>View Trends For This Host</a><BR>\n",TRENDS_CGI,url_encode(host_name),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_host_state,backtrack_archives);
+				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&assumestateretention=%s&assumeinitialstates=%s&includesoftstates=%s&assumestatesduringnotrunning=%s&initialassumedhoststate=%d&backtrack=%d'>このホストの傾向</a><BR>\n",TRENDS_CGI,url_encode(host_name),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_host_state,backtrack_archives);
 #endif
 #ifdef USE_HISTOGRAM
-				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&assumestateretention=%s'>View Alert Histogram For This Host</a><BR>\n",HISTOGRAM_CGI,url_encode(host_name),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
+				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&assumestateretention=%s'>このホストの警報ヒストグラム</a><BR>\n",HISTOGRAM_CGI,url_encode(host_name),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
 #endif
-				printf("<a href='%s?host=%s'>View Status Detail For This Host</a><BR>\n",STATUS_CGI,url_encode(host_name));
-				printf("<a href='%s?host=%s'>View Alert History For This Host</a><BR>\n",HISTORY_CGI,url_encode(host_name));
-				printf("<a href='%s?host=%s'>View Notifications For This Host</a><BR>\n",NOTIFICATIONS_CGI,url_encode(host_name));
+				printf("<a href='%s?host=%s'>このホストの詳細</a><BR>\n",STATUS_CGI,url_encode(host_name));
+				printf("<a href='%s?host=%s'>このホストの警報履歴</a><BR>\n",HISTORY_CGI,url_encode(host_name));
+				printf("<a href='%s?host=%s'>このホストの通知履歴</a><BR>\n",NOTIFICATIONS_CGI,url_encode(host_name));
 	                        }
 			else if(display_type==DISPLAY_SERVICE_AVAIL && show_all_services==FALSE){
-				host_report_url(host_name,"View Availability Report For This Host");
+				host_report_url(host_name,"このホストの稼働レポート");
 				printf("<BR>\n");
-				service_report_url("null","all","View Availability Report For All Services");
+				service_report_url("null","all","このホストで稼働中の全サービスの稼働レポート");
 				printf("<BR>\n");
 #ifdef USE_TRENDS
 				printf("<a href='%s?host=%s",TRENDS_CGI,url_encode(host_name));
-				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s&includesoftstates=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedservicestate=%d&backtrack=%d'>View Trends For This Service</a><BR>\n",url_encode(svc_description),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_service_state,backtrack_archives);
+				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s&includesoftstates=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedservicestate=%d&backtrack=%d'>このサービスの傾向</a><BR>\n",url_encode(svc_description),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_service_state,backtrack_archives);
 #endif
 #ifdef USE_HISTOGRAM
 				printf("<a href='%s?host=%s",HISTOGRAM_CGI,url_encode(host_name));
-				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s'>View Alert Histogram For This Service</a><BR>\n",url_encode(svc_description),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
+				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s'>このサービスの警報ヒストグラム</a><BR>\n",url_encode(svc_description),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
 #endif
 				printf("<A HREF='%s?host=%s&",HISTORY_CGI,url_encode(host_name));
-				printf("service=%s'>View Alert History For This Service</A><BR>\n",url_encode(svc_description));
+				printf("service=%s'>このサービスの警報履歴</A><BR>\n",url_encode(svc_description));
 				printf("<A HREF='%s?host=%s&",NOTIFICATIONS_CGI,url_encode(host_name));
-				printf("service=%s'>View Notifications For This Service</A><BR>\n",url_encode(svc_description));
+				printf("service=%s'>このサービスの通知履歴</A><BR>\n",url_encode(svc_description));
 	                        }
 
 			printf("</TD></TR>\n");
@@ -454,42 +454,42 @@
 			printf("<DIV ALIGN=CENTER CLASS='dataTitle'>\n");
 			if(display_type==DISPLAY_HOST_AVAIL){
 				if(show_all_hosts==TRUE)
-					printf("All Hosts");
+					printf("全てのホスト");
 				else
-					printf("Host '%s'",host_name);
+					printf("ホスト '%s'",host_name);
 			        }
 			else if(display_type==DISPLAY_SERVICE_AVAIL){
 				if(show_all_services==TRUE)
-					printf("All Services");
+					printf("全てのサービス");
 				else
-					printf("Service '%s' On Host '%s'",svc_description,host_name);
+					printf("ホスト '%s' 上の '%s' サービス",host_name,svc_description);
 		                }
 			else if(display_type==DISPLAY_HOSTGROUP_AVAIL){
 				if(show_all_hostgroups==TRUE)
-					printf("All Hostgroups");
+					printf("全てのホストグループ");
 				else
-					printf("Hostgroup '%s'",hostgroup_name);
+					printf("ホストグループ '%s'",hostgroup_name);
 		                }
 			else if(display_type==DISPLAY_SERVICEGROUP_AVAIL){
 				if(show_all_servicegroups==TRUE)
-					printf("All Servicegroups");
+					printf("全てのサービスグループ");
 				else
-					printf("Servicegroup '%s'",servicegroup_name);
+					printf("サービスグループ '%s'",servicegroup_name);
 		                }
 			printf("</DIV>\n");
 
 			printf("<BR>\n");
 
-			printf("<IMG SRC='%s%s' BORDER=0 ALT='Availability Report' TITLE='Availability Report'>\n",url_images_path,TRENDS_ICON);
+			printf("<IMG SRC='%s%s' BORDER=0 ALT='稼働レポート' TITLE='Availability Report'>\n",url_images_path,TRENDS_ICON);
 
 			printf("<BR CLEAR=ALL>\n");
 
 			get_time_string(&t1,start_timestring,sizeof(start_timestring)-1,SHORT_DATE_TIME);
 			get_time_string(&t2,end_timestring,sizeof(end_timestring)-1,SHORT_DATE_TIME);
-			printf("<div align=center class='reportRange'>%s to %s</div>\n",start_timestring,end_timestring);
+			printf("<div align=center class='reportRange'>%s から %s</div>\n",start_timestring,end_timestring);
 
 			get_time_breakdown((time_t)(t2-t1),&days,&hours,&minutes,&seconds);
-			printf("<div align=center class='reportDuration'>Duration: %dd %dh %dm %ds</div>\n",days,hours,minutes,seconds);
+			printf("<div align=center class='reportDuration'>期間: %d日間と %d時間 %d分 %d秒</div>\n",days,hours,minutes,seconds);
 		        }
 
 		printf("</td>\n");
@@ -523,60 +523,60 @@
 			printf("<input type='hidden' name='assumestatesduringnotrunning' value='%s'>\n",(assume_states_during_notrunning==TRUE)?"yes":"no");
 			printf("<input type='hidden' name='includesoftstates' value='%s'>\n",(include_soft_states==TRUE)?"yes":"no");
 
-			printf("<tr><td valign=top align=left class='optBoxItem'>First assumed %s state:</td><td valign=top align=left class='optBoxItem'>%s</td></tr>\n",(display_type==DISPLAY_SERVICE_AVAIL)?"service":"host",(display_type==DISPLAY_HOST_AVAIL || display_type==DISPLAY_HOSTGROUP_AVAIL || display_type==DISPLAY_SERVICEGROUP_AVAIL)?"First assumed service state":"");
+			printf("<tr><td valign=top align=left class='optBoxItem'>考慮する%sの初期状態:</td><td valign=top align=left class='optBoxItem'>%s</td></tr>\n",(display_type==DISPLAY_SERVICE_AVAIL)?"サービス":"ホスト",(display_type==DISPLAY_HOST_AVAIL || display_type==DISPLAY_HOSTGROUP_AVAIL || display_type==DISPLAY_SERVICEGROUP_AVAIL)?"考慮するサービスの初期状態":"");
 			printf("<tr>\n");
 			printf("<td valign=top align=left class='optBoxItem'>\n");
 			if(display_type==DISPLAY_HOST_AVAIL || display_type==DISPLAY_HOSTGROUP_AVAIL || display_type==DISPLAY_SERVICEGROUP_AVAIL){
 				printf("<select name='initialassumedhoststate'>\n");
-				printf("<option value=%d %s>Unspecified\n",AS_NO_DATA,(initial_assumed_host_state==AS_NO_DATA)?"SELECTED":"");
-				printf("<option value=%d %s>Current State\n",AS_CURRENT_STATE,(initial_assumed_host_state==AS_CURRENT_STATE)?"SELECTED":"");
-				printf("<option value=%d %s>Host Up\n",AS_HOST_UP,(initial_assumed_host_state==AS_HOST_UP)?"SELECTED":"");
-				printf("<option value=%d %s>Host Down\n",AS_HOST_DOWN,(initial_assumed_host_state==AS_HOST_DOWN)?"SELECTED":"");
-				printf("<option value=%d %s>Host Unreachable\n",AS_HOST_UNREACHABLE,(initial_assumed_host_state==AS_HOST_UNREACHABLE)?"SELECTED":"");
+				printf("<option value=%d %s>設定しない\n",AS_NO_DATA,(initial_assumed_host_state==AS_NO_DATA)?"SELECTED":"");
+				printf("<option value=%d %s>現在の状態\n",AS_CURRENT_STATE,(initial_assumed_host_state==AS_CURRENT_STATE)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの稼働状態(UP)\n",AS_HOST_UP,(initial_assumed_host_state==AS_HOST_UP)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの停止状態(DOWN)\n",AS_HOST_DOWN,(initial_assumed_host_state==AS_HOST_DOWN)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの未到達状態(UNREACHABLE)\n",AS_HOST_UNREACHABLE,(initial_assumed_host_state==AS_HOST_UNREACHABLE)?"SELECTED":"");
 				printf("</select>\n");
 			        }
 			else{
 				printf("<input type='hidden' name='initialassumedhoststate' value='%d'>",initial_assumed_host_state);
 				printf("<select name='initialassumedservicestate'>\n");
-				printf("<option value=%d %s>Unspecified\n",AS_NO_DATA,(initial_assumed_service_state==AS_NO_DATA)?"SELECTED":"");
-				printf("<option value=%d %s>Current State\n",AS_CURRENT_STATE,(initial_assumed_service_state==AS_CURRENT_STATE)?"SELECTED":"");
-				printf("<option value=%d %s>Service Ok\n",AS_SVC_OK,(initial_assumed_service_state==AS_SVC_OK)?"SELECTED":"");
-				printf("<option value=%d %s>Service Warning\n",AS_SVC_WARNING,(initial_assumed_service_state==AS_SVC_WARNING)?"SELECTED":"");
-				printf("<option value=%d %s>Service Unknown\n",AS_SVC_UNKNOWN,(initial_assumed_service_state==AS_SVC_UNKNOWN)?"SELECTED":"");
-				printf("<option value=%d %s>Service Critical\n",AS_SVC_CRITICAL,(initial_assumed_service_state==AS_SVC_CRITICAL)?"SELECTED":"");
+				printf("<option value=%d %s>設定しない\n",AS_NO_DATA,(initial_assumed_service_state==AS_NO_DATA)?"SELECTED":"");
+				printf("<option value=%d %s>現在の状態\n",AS_CURRENT_STATE,(initial_assumed_service_state==AS_CURRENT_STATE)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの正常状態(OK)\n",AS_SVC_OK,(initial_assumed_service_state==AS_SVC_OK)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの警告状態(WARNING)\n",AS_SVC_WARNING,(initial_assumed_service_state==AS_SVC_WARNING)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの不明状態(UNKNOWN)\n",AS_SVC_UNKNOWN,(initial_assumed_service_state==AS_SVC_UNKNOWN)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの異常状態(CRITICAL)\n",AS_SVC_CRITICAL,(initial_assumed_service_state==AS_SVC_CRITICAL)?"SELECTED":"");
 				printf("</select>\n");
 			        }
 			printf("</td>\n");
 			printf("<td CLASS='optBoxItem'>\n");
 			if(display_type==DISPLAY_HOST_AVAIL || display_type==DISPLAY_HOSTGROUP_AVAIL || display_type==DISPLAY_SERVICEGROUP_AVAIL){
 				printf("<select name='initialassumedservicestate'>\n");
-				printf("<option value=%d %s>Unspecified\n",AS_NO_DATA,(initial_assumed_service_state==AS_NO_DATA)?"SELECTED":"");
-				printf("<option value=%d %s>Current State\n",AS_CURRENT_STATE,(initial_assumed_service_state==AS_CURRENT_STATE)?"SELECTED":"");
-				printf("<option value=%d %s>Service Ok\n",AS_SVC_OK,(initial_assumed_service_state==AS_SVC_OK)?"SELECTED":"");
-				printf("<option value=%d %s>Service Warning\n",AS_SVC_WARNING,(initial_assumed_service_state==AS_SVC_WARNING)?"SELECTED":"");
-				printf("<option value=%d %s>Service Unknown\n",AS_SVC_UNKNOWN,(initial_assumed_service_state==AS_SVC_UNKNOWN)?"SELECTED":"");
-				printf("<option value=%d %s>Service Critical\n",AS_SVC_CRITICAL,(initial_assumed_service_state==AS_SVC_CRITICAL)?"SELECTED":"");
+				printf("<option value=%d %s>設定しない\n",AS_NO_DATA,(initial_assumed_service_state==AS_NO_DATA)?"SELECTED":"");
+				printf("<option value=%d %s>現在の状態\n",AS_CURRENT_STATE,(initial_assumed_service_state==AS_CURRENT_STATE)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの正常状態(OK)\n",AS_SVC_OK,(initial_assumed_service_state==AS_SVC_OK)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの警告状態(WARNING)\n",AS_SVC_WARNING,(initial_assumed_service_state==AS_SVC_WARNING)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの不明状態(UNKNOWN)\n",AS_SVC_UNKNOWN,(initial_assumed_service_state==AS_SVC_UNKNOWN)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの異常状態(CRITICAL)\n",AS_SVC_CRITICAL,(initial_assumed_service_state==AS_SVC_CRITICAL)?"SELECTED":"");
 				printf("</select>\n");
 			        }
 			printf("</td>\n");
 			printf("</tr>\n");
 
-			printf("<tr><td valign=top align=left class='optBoxItem'>Report period:</td><td valign=top align=left class='optBoxItem'>Backtracked archives:</td></tr>\n");
+			printf("<tr><td valign=top align=left class='optBoxItem'>レポートの期間:</td><td valign=top align=left class='optBoxItem'>過去のアーカイブ数:</td></tr>\n");
 			printf("<tr>\n");
 			printf("<td valign=top align=left class='optBoxItem'>\n");
 			printf("<select name='timeperiod'>\n");
-			printf("<option SELECTED>[ Current time range ]\n");
-			printf("<option value=today %s>Today\n",(timeperiod_type==TIMEPERIOD_TODAY)?"SELECTED":"");
-			printf("<option value=last24hours %s>Last 24 Hours\n",(timeperiod_type==TIMEPERIOD_LAST24HOURS)?"SELECTED":"");
-			printf("<option value=yesterday %s>Yesterday\n",(timeperiod_type==TIMEPERIOD_YESTERDAY)?"SELECTED":"");
-			printf("<option value=thisweek %s>This Week\n",(timeperiod_type==TIMEPERIOD_THISWEEK)?"SELECTED":"");
-			printf("<option value=last7days %s>Last 7 Days\n",(timeperiod_type==TIMEPERIOD_LAST7DAYS)?"SELECTED":"");
-			printf("<option value=lastweek %s>Last Week\n",(timeperiod_type==TIMEPERIOD_LASTWEEK)?"SELECTED":"");
-			printf("<option value=thismonth %s>This Month\n",(timeperiod_type==TIMEPERIOD_THISMONTH)?"SELECTED":"");
-			printf("<option value=last31days %s>Last 31 Days\n",(timeperiod_type==TIMEPERIOD_LAST31DAYS)?"SELECTED":"");
-			printf("<option value=lastmonth %s>Last Month\n",(timeperiod_type==TIMEPERIOD_LASTMONTH)?"SELECTED":"");
-			printf("<option value=thisyear %s>This Year\n",(timeperiod_type==TIMEPERIOD_THISYEAR)?"SELECTED":"");
-			printf("<option value=lastyear %s>Last Year\n",(timeperiod_type==TIMEPERIOD_LASTYEAR)?"SELECTED":"");
+			printf("<option SELECTED>[ 現在の期間 ]\n");
+			printf("<option value=today %s>今日\n",(timeperiod_type==TIMEPERIOD_TODAY)?"SELECTED":"");
+			printf("<option value=last24hours %s>過去24時間\n",(timeperiod_type==TIMEPERIOD_LAST24HOURS)?"SELECTED":"");
+			printf("<option value=yesterday %s>昨日\n",(timeperiod_type==TIMEPERIOD_YESTERDAY)?"SELECTED":"");
+			printf("<option value=thisweek %s>今週\n",(timeperiod_type==TIMEPERIOD_THISWEEK)?"SELECTED":"");
+			printf("<option value=last7days %s>過去7日間\n",(timeperiod_type==TIMEPERIOD_LAST7DAYS)?"SELECTED":"");
+			printf("<option value=lastweek %s>先週\n",(timeperiod_type==TIMEPERIOD_LASTWEEK)?"SELECTED":"");
+			printf("<option value=thismonth %s>今月\n",(timeperiod_type==TIMEPERIOD_THISMONTH)?"SELECTED":"");
+			printf("<option value=last31days %s>過去31日間\n",(timeperiod_type==TIMEPERIOD_LAST31DAYS)?"SELECTED":"");
+			printf("<option value=lastmonth %s>先月\n",(timeperiod_type==TIMEPERIOD_LASTMONTH)?"SELECTED":"");
+			printf("<option value=thisyear %s>今年\n",(timeperiod_type==TIMEPERIOD_THISYEAR)?"SELECTED":"");
+			printf("<option value=lastyear %s>去年\n",(timeperiod_type==TIMEPERIOD_LASTYEAR)?"SELECTED":"");
 			printf("</select>\n");
 			printf("</td>\n");
 			printf("<td valign=top align=left CLASS='optBoxItem'>\n");
@@ -586,7 +586,7 @@
 
 			printf("<tr><td valign=top align=left></td>\n");
 			printf("<td valign=top align=left CLASS='optBoxItem'>\n");
-			printf("<input type='submit' value='Update'>\n");
+			printf("<input type='submit' value='更新'>\n");
 			printf("</td>\n");
 			printf("</tr>\n");
 
@@ -638,7 +638,7 @@
 		end_day=t->tm_mday;
 		end_year=t->tm_year+1900;
 
-		printf("<P><DIV ALIGN=CENTER CLASS='dateSelectTitle'>Step 3: Select Report Options</DIV></p>\n");
+		printf("<P><DIV ALIGN=CENTER CLASS='dateSelectTitle'>ステップ３: レポートオプションの選択</DIV></p>\n");
 
 		printf("<P><DIV ALIGN=CENTER>\n");
 
@@ -656,46 +656,49 @@
 		printf("<table border=0 cellpadding=5>\n");
 
 		printf("<tr>");
-		printf("<td valign=top class='reportSelectSubTitle'>Report Period:</td>\n");
+		printf("<td valign=top class='reportSelectSubTitle'>レポート期間:</td>\n");
 		printf("<td valign=top align=left class='optBoxItem'>\n");
 		printf("<select name='timeperiod'>\n");
-		printf("<option value=today>Today\n");
-		printf("<option value=last24hours>Last 24 Hours\n");
-		printf("<option value=yesterday>Yesterday\n");
-		printf("<option value=thisweek>This Week\n");
-		printf("<option value=last7days SELECTED>Last 7 Days\n");
-		printf("<option value=lastweek>Last Week\n");
-		printf("<option value=thismonth>This Month\n");
-		printf("<option value=last31days>Last 31 Days\n");
-		printf("<option value=lastmonth>Last Month\n");
-		printf("<option value=thisyear>This Year\n");
-		printf("<option value=lastyear>Last Year\n");
-		printf("<option value=custom>* CUSTOM REPORT PERIOD *\n");
+		printf("<option value=today>今日\n");
+		printf("<option value=last24hours>過去24時間\n");
+		printf("<option value=yesterday>昨日\n");
+		printf("<option value=thisweek>今週\n");
+		printf("<option value=last7days SELECTED>過去7日間\n");
+		printf("<option value=lastweek>先週\n");
+		printf("<option value=thismonth>今月\n");
+		printf("<option value=last31days>過去31日間\n");
+		printf("<option value=lastmonth>先月\n");
+		printf("<option value=thisyear>今年\n");
+		printf("<option value=lastyear>去年\n");
+		printf("<option value=custom>* カスタム期間設定 *\n");
 		printf("</select>\n");
 		printf("</td>\n");
 		printf("</tr>\n");
 
-		printf("<tr><td valign=top class='reportSelectSubTitle'>If Custom Report Period...</td></tr>\n");
+		printf("<tr><td valign=top class='reportSelectSubTitle'>期間をカスタマイズ...</td></tr>\n");
 
 		printf("<tr>");
-		printf("<td valign=top class='reportSelectSubTitle'>Start Date (Inclusive):</td>\n");
+		printf("<td valign=top class='reportSelectSubTitle'>開始日(指定日を含む):</td>\n");
 		printf("<td align=left valign=top class='reportSelectItem'>");
+		printf("<input type='text' size='4' maxlength='4' name='syear' value='%d'>",start_year);
+		printf("年");
 		printf("<select name='smon'>\n");
-		printf("<option value='1' %s>January\n",(t->tm_mon==0)?"SELECTED":"");
-		printf("<option value='2' %s>February\n",(t->tm_mon==1)?"SELECTED":"");
-		printf("<option value='3' %s>March\n",(t->tm_mon==2)?"SELECTED":"");
-		printf("<option value='4' %s>April\n",(t->tm_mon==3)?"SELECTED":"");
-		printf("<option value='5' %s>May\n",(t->tm_mon==4)?"SELECTED":"");
-		printf("<option value='6' %s>June\n",(t->tm_mon==5)?"SELECTED":"");
-		printf("<option value='7' %s>July\n",(t->tm_mon==6)?"SELECTED":"");
-		printf("<option value='8' %s>August\n",(t->tm_mon==7)?"SELECTED":"");
-		printf("<option value='9' %s>September\n",(t->tm_mon==8)?"SELECTED":"");
-		printf("<option value='10' %s>October\n",(t->tm_mon==9)?"SELECTED":"");
-		printf("<option value='11' %s>November\n",(t->tm_mon==10)?"SELECTED":"");
-		printf("<option value='12' %s>December\n",(t->tm_mon==11)?"SELECTED":"");
+		printf("<option value='1' %s>1\n",(t->tm_mon==0)?"SELECTED":"");
+		printf("<option value='2' %s>2\n",(t->tm_mon==1)?"SELECTED":"");
+		printf("<option value='3' %s>3\n",(t->tm_mon==2)?"SELECTED":"");
+		printf("<option value='4' %s>4\n",(t->tm_mon==3)?"SELECTED":"");
+		printf("<option value='5' %s>5\n",(t->tm_mon==4)?"SELECTED":"");
+		printf("<option value='6' %s>6\n",(t->tm_mon==5)?"SELECTED":"");
+		printf("<option value='7' %s>7\n",(t->tm_mon==6)?"SELECTED":"");
+		printf("<option value='8' %s>8\n",(t->tm_mon==7)?"SELECTED":"");
+		printf("<option value='9' %s>9\n",(t->tm_mon==8)?"SELECTED":"");
+		printf("<option value='10' %s>10\n",(t->tm_mon==9)?"SELECTED":"");
+		printf("<option value='11' %s>11\n",(t->tm_mon==10)?"SELECTED":"");
+		printf("<option value='12' %s>12\n",(t->tm_mon==11)?"SELECTED":"");
 		printf("</select>\n ");
+		printf("月");
 		printf("<input type='text' size='2' maxlength='2' name='sday' value='%d'> ",start_day);
-		printf("<input type='text' size='4' maxlength='4' name='syear' value='%d'>",start_year);
+		printf("日");
 		printf("<input type='hidden' name='shour' value='0'>\n");
 		printf("<input type='hidden' name='smin' value='0'>\n");
 		printf("<input type='hidden' name='ssec' value='0'>\n");
@@ -703,24 +706,27 @@
 		printf("</tr>\n");
 
 		printf("<tr>");
-		printf("<td valign=top class='reportSelectSubTitle'>End Date (Inclusive):</td>\n");
+		printf("<td valign=top class='reportSelectSubTitle'>終了日(指定日を含む):</td>\n");
 		printf("<td align=left valign=top class='reportSelectItem'>");
+		printf("<input type='text' size='4' maxlength='4' name='eyear' value='%d'>",end_year);
+		printf("年");
 		printf("<select name='emon'>\n");
-		printf("<option value='1' %s>January\n",(t->tm_mon==0)?"SELECTED":"");
-		printf("<option value='2' %s>February\n",(t->tm_mon==1)?"SELECTED":"");
-		printf("<option value='3' %s>March\n",(t->tm_mon==2)?"SELECTED":"");
-		printf("<option value='4' %s>April\n",(t->tm_mon==3)?"SELECTED":"");
-		printf("<option value='5' %s>May\n",(t->tm_mon==4)?"SELECTED":"");
-		printf("<option value='6' %s>June\n",(t->tm_mon==5)?"SELECTED":"");
-		printf("<option value='7' %s>July\n",(t->tm_mon==6)?"SELECTED":"");
-		printf("<option value='8' %s>August\n",(t->tm_mon==7)?"SELECTED":"");
-		printf("<option value='9' %s>September\n",(t->tm_mon==8)?"SELECTED":"");
-		printf("<option value='10' %s>October\n",(t->tm_mon==9)?"SELECTED":"");
-		printf("<option value='11' %s>November\n",(t->tm_mon==10)?"SELECTED":"");
-		printf("<option value='12' %s>December\n",(t->tm_mon==11)?"SELECTED":"");
+		printf("<option value='1' %s>1\n",(t->tm_mon==0)?"SELECTED":"");
+		printf("<option value='2' %s>2\n",(t->tm_mon==1)?"SELECTED":"");
+		printf("<option value='3' %s>3\n",(t->tm_mon==2)?"SELECTED":"");
+		printf("<option value='4' %s>4\n",(t->tm_mon==3)?"SELECTED":"");
+		printf("<option value='5' %s>5\n",(t->tm_mon==4)?"SELECTED":"");
+		printf("<option value='6' %s>6\n",(t->tm_mon==5)?"SELECTED":"");
+		printf("<option value='7' %s>7\n",(t->tm_mon==6)?"SELECTED":"");
+		printf("<option value='8' %s>8\n",(t->tm_mon==7)?"SELECTED":"");
+		printf("<option value='9' %s>9\n",(t->tm_mon==8)?"SELECTED":"");
+		printf("<option value='10' %s>10\n",(t->tm_mon==9)?"SELECTED":"");
+		printf("<option value='11' %s>11\n",(t->tm_mon==10)?"SELECTED":"");
+		printf("<option value='12' %s>12\n",(t->tm_mon==11)?"SELECTED":"");
 		printf("</select>\n ");
+		printf("月");
 		printf("<input type='text' size='2' maxlength='2' name='eday' value='%d'> ",end_day);
-		printf("<input type='text' size='4' maxlength='4' name='eyear' value='%d'>",end_year);
+		printf("日");
 		printf("<input type='hidden' name='ehour' value='24'>\n");
 		printf("<input type='hidden' name='emin' value='0'>\n");
 		printf("<input type='hidden' name='esec' value='0'>\n");
@@ -730,10 +736,10 @@
 		printf("<tr><td colspan=2><br></td></tr>\n");
 
 		printf("<tr>");
-		printf("<td valign=top class='reportSelectSubTitle'>Report time Period:</td>\n");
+		printf("<td valign=top class='reportSelectSubTitle'>表示するレポートの時間と期間:</td>\n");
 		printf("<td valign=top align=left class='optBoxItem'>\n");
 		printf("<select name='rpttimeperiod'>\n");
-		printf("<option value=\"\">None\n");
+		printf("<option value=\"\">無し\n");
 		/* check all the time periods... */
 		for(temp_timeperiod=timeperiod_list;temp_timeperiod!=NULL;temp_timeperiod=temp_timeperiod->next)
 			printf("<option value=%s>%s\n",escape_string(temp_timeperiod->name),temp_timeperiod->name);
@@ -742,78 +748,78 @@
 		printf("</tr>\n");
 		printf("<tr><td colspan=2><br></td></tr>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Assume Initial States:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>初期状態を考慮:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='assumeinitialstates'>\n");
-		printf("<option value=yes>Yes\n");
-		printf("<option value=no>No\n");
+		printf("<option value=yes>する\n");
+		printf("<option value=no>しない\n");
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Assume State Retention:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>保存状態を考慮:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='assumestateretention'>\n");
-		printf("<option value=yes>Yes\n");
-		printf("<option value=no>No\n");
+		printf("<option value=yes>する\n");
+		printf("<option value=no>しない\n");
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Assume States During Program Downtime:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>プログラムのダウンタイム時間を考慮:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='assumestatesduringnotrunning'>\n");
-		printf("<option value=yes>Yes\n");
-		printf("<option value=no>No\n");
+		printf("<option value=yes>する\n");
+		printf("<option value=no>しない\n");
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Include Soft States:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>ソフトウェアの状態:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='includesoftstates'>\n");
-		printf("<option value=yes>Yes\n");
-		printf("<option value=no SELECTED>No\n");
+		printf("<option value=yes>はい\n");
+		printf("<option value=no SELECTED>いいえ\n");
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
 		if(display_type!=DISPLAY_SERVICE_AVAIL){
-			printf("<tr><td class='reportSelectSubTitle' align=right>First Assumed Host State:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>考慮するホストの初期状態:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='initialassumedhoststate'>\n");
-			printf("<option value=%d>Unspecified\n",AS_NO_DATA);
-			printf("<option value=%d>Current State\n",AS_CURRENT_STATE);
-			printf("<option value=%d>Host Up\n",AS_HOST_UP);
-			printf("<option value=%d>Host Down\n",AS_HOST_DOWN);
-			printf("<option value=%d>Host Unreachable\n",AS_HOST_UNREACHABLE);
+			printf("<option value=%d>設定しない\n",AS_NO_DATA);
+			printf("<option value=%d>現在の状態\n",AS_CURRENT_STATE);
+			printf("<option value=%d>ホスト稼働(UP)\n",AS_HOST_UP);
+			printf("<option value=%d>ホスト停止(DOWN)\n",AS_HOST_DOWN);
+			printf("<option value=%d>ホスト未到達(UNREACHABLE)\n",AS_HOST_UNREACHABLE);
 			printf("</select>\n");
 			printf("</td></tr>\n");
 		        }
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>First Assumed Service State:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>考慮するサービスの初期状態:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='initialassumedservicestate'>\n");
-		printf("<option value=%d>Unspecified\n",AS_NO_DATA);
-		printf("<option value=%d>Current State\n",AS_CURRENT_STATE);
-		printf("<option value=%d>Service Ok\n",AS_SVC_OK);
-		printf("<option value=%d>Service Warning\n",AS_SVC_WARNING);
-		printf("<option value=%d>Service Unknown\n",AS_SVC_UNKNOWN);
-		printf("<option value=%d>Service Critical\n",AS_SVC_CRITICAL);
+		printf("<option value=%d>設定しない\n",AS_NO_DATA);
+		printf("<option value=%d>現在の状態\n",AS_CURRENT_STATE);
+		printf("<option value=%d>サービス正常(OK)\n",AS_SVC_OK);
+		printf("<option value=%d>サービス警告(WARNING)\n",AS_SVC_WARNING);
+		printf("<option value=%d>サービス不明(UNKNOWN)\n",AS_SVC_UNKNOWN);
+		printf("<option value=%d>サービス異常(CRITICAL)\n",AS_SVC_CRITICAL);
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Backtracked Archives (To Scan For Initial States):</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>過去のアーカイブ数(初期状態を調べるためのもの):</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<input type='text' name='backtrack' size='2' maxlength='2' value='%d'>\n",backtrack_archives);
 		printf("</td></tr>\n");
 
 		if((display_type==DISPLAY_HOST_AVAIL && show_all_hosts==TRUE) || (display_type==DISPLAY_SERVICE_AVAIL && show_all_services==TRUE)){
 			printf("<tr>");
-			printf("<td valign=top class='reportSelectSubTitle'>Output in CSV Format:</td>\n");
+			printf("<td valign=top class='reportSelectSubTitle'>CSV形式で出力する:</td>\n");
 			printf("<td valign=top class='reportSelectItem'>");
 			printf("<input type='checkbox' name='csvoutput' value=''>\n");
 			printf("</td>\n");
 			printf("</tr>\n");
 		        }
 
-		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='Create Availability Report!'></td></tr>\n");
+		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='稼働レポートを作成'></td></tr>\n");
 
 		printf("</table>\n");
 
@@ -824,7 +830,7 @@
 
 	/* step 2 - the user wants to select a hostgroup */
 	else if(select_hostgroups==TRUE){
-		printf("<p><div align=center class='reportSelectTitle'>Step 2: Select Hostgroup</div></p>\n");
+		printf("<p><div align=center class='reportSelectTitle'>ステップ２: ホストグループの選択</div></p>\n");
 
 		printf("<p><div align=center>\n");
 
@@ -833,9 +839,9 @@
 
 		printf("<table border=0 cellpadding=5>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' valign=center>Hostgroup(s):</td><td align=left valign=center class='reportSelectItem'>\n");
+		printf("<tr><td class='reportSelectSubTitle' valign=center>ホストグループ:</td><td align=left valign=center class='reportSelectItem'>\n");
 		printf("<select name='hostgroup'>\n");
-		printf("<option value='all'>** ALL HOSTGROUPS **\n");
+		printf("<option value='all'>** 全てのホストグループ **\n");
 		for(temp_hostgroup=hostgroup_list;temp_hostgroup!=NULL;temp_hostgroup=temp_hostgroup->next){
 			if(is_authorized_for_hostgroup(temp_hostgroup,&current_authdata)==TRUE)
 				printf("<option value='%s'>%s\n",escape_string(temp_hostgroup->group_name),temp_hostgroup->group_name);
@@ -843,7 +849,7 @@
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='Continue to Step 3'></td></tr>\n");
+		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='ステップ３へ'></td></tr>\n");
 
 		printf("</table>\n");
 
@@ -854,7 +860,7 @@
 
 	/* step 2 - the user wants to select a host */
 	else if(select_hosts==TRUE){
-		printf("<p><div align=center class='reportSelectTitle'>Step 2: Select Host</div></p>\n");
+		printf("<p><div align=center class='reportSelectTitle'>ステップ２: ホストの選択</div></p>\n");
 
 		printf("<p><div align=center>\n");
 
@@ -863,9 +869,9 @@
 
 		printf("<table border=0 cellpadding=5>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' valign=center>Host(s):</td><td align=left valign=center class='reportSelectItem'>\n");
+		printf("<tr><td class='reportSelectSubTitle' valign=center>ホスト:</td><td align=left valign=center class='reportSelectItem'>\n");
 		printf("<select name='host'>\n");
-		printf("<option value='all'>** ALL HOSTS **\n");
+		printf("<option value='all'>** 全てのホスト **\n");
 		for(temp_host=host_list;temp_host!=NULL;temp_host=temp_host->next){
 			if(is_authorized_for_host(temp_host,&current_authdata)==TRUE)
 				printf("<option value='%s'>%s\n",escape_string(temp_host->name),temp_host->name);
@@ -873,7 +879,7 @@
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='Continue to Step 3'></td></tr>\n");
+		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='ステップ３へ'></td></tr>\n");
 
 		printf("</table>\n");
 
@@ -881,12 +887,12 @@
 
 		printf("</div></p>\n");
 
-		printf("<div align=center class='helpfulHint'>Tip: If you want to have the option of getting the availability data in CSV format, select '<b>** ALL HOSTS **</b>' from the pull-down menu.\n");
+		printf("<div align=center class='helpfulHint'>ヒント:稼働レポートをCSV形式で取得する場合は、プルダウンメニューから'<b>** 全てのホスト**</b>'を選択します。<br>\n");
 	        }
 
 	/* step 2 - the user wants to select a servicegroup */
 	else if(select_servicegroups==TRUE){
-		printf("<p><div align=center class='reportSelectTitle'>Step 2: Select Servicegroup</div></p>\n");
+		printf("<p><div align=center class='reportSelectTitle'>ステップ２: サービスグループの選択</div></p>\n");
 
 		printf("<p><div align=center>\n");
 
@@ -895,9 +901,9 @@
 
 		printf("<table border=0 cellpadding=5>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' valign=center>Servicegroup(s):</td><td align=left valign=center class='reportSelectItem'>\n");
+		printf("<tr><td class='reportSelectSubTitle' valign=center>サービスグループ:</td><td align=left valign=center class='reportSelectItem'>\n");
 		printf("<select name='servicegroup'>\n");
-		printf("<option value='all'>** ALL SERVICEGROUPS **\n");
+		printf("<option value='all'>** 全てのサービスグループ **\n");
 		for(temp_servicegroup=servicegroup_list;temp_servicegroup!=NULL;temp_servicegroup=temp_servicegroup->next){
 			if(is_authorized_for_servicegroup(temp_servicegroup,&current_authdata)==TRUE)
 				printf("<option value='%s'>%s\n",escape_string(temp_servicegroup->group_name),temp_servicegroup->group_name);
@@ -905,7 +911,7 @@
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='Continue to Step 3'></td></tr>\n");
+		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='ステップ３へ'></td></tr>\n");
 
 		printf("</table>\n");
 
@@ -935,19 +941,19 @@
 		printf("}\n");
 		printf("</SCRIPT>\n");
 
-		printf("<p><div align=center class='reportSelectTitle'>Step 2: Select Service</div></p>\n");
+		printf("<p><div align=center class='reportSelectTitle'>ステップ２: サービスの選択</div></p>\n");
 
 		printf("<p><div align=center>\n");
 
 	        printf("<form method=\"get\" action=\"%s\" name='serviceform'>\n",AVAIL_CGI);
 		printf("<input type='hidden' name='get_date_parts'>\n");
-		printf("<input type='hidden' name='host' value='%s'>\n",(firsthostpointer==NULL)?"unknown":(char *)escape_string(firsthostpointer));
+		printf("<input type='hidden' name='host' value='%s'>\n",(firsthostpointer==NULL)?"不明":(char *)escape_string(firsthostpointer));
 
 		printf("<table border=0 cellpadding=5>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' valign=center>Service(s):</td><td align=left valign=center class='reportSelectItem'>\n");
+		printf("<tr><td class='reportSelectSubTitle' valign=center>サービス:</td><td align=left valign=center class='reportSelectItem'>\n");
 		printf("<select name='service' onFocus='document.serviceform.host.value=gethostname(this.selectedIndex);' onChange='document.serviceform.host.value=gethostname(this.selectedIndex);'>\n");
-		printf("<option value='all'>** ALL SERVICES **\n");
+		printf("<option value='all'>** 全てのサービス **\n");
 		for(temp_service=service_list;temp_service!=NULL;temp_service=temp_service->next){
 			if(is_authorized_for_service(temp_service,&current_authdata)==TRUE)
 				printf("<option value='%s'>%s;%s\n",escape_string(temp_service->description),temp_service->host_name,temp_service->description);
@@ -956,7 +962,7 @@
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='Continue to Step 3'></td></tr>\n");
+		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='ステップ３へ'></td></tr>\n");
 
 		printf("</table>\n");
 
@@ -964,7 +970,7 @@
 
 		printf("</div></p>\n");
 
-		printf("<div align=center class='helpfulHint'>Tip: If you want to have the option of getting the availability data in CSV format, select '<b>** ALL SERVICES **</b>' from the pull-down menu.\n");
+		printf("<div align=center class='helpfulHint'>ヒント:稼働レポートをCSV形式で取得する場合は、プルダウンメニューから'<b>** 全てのホスト**</b>'を選択します。<br>\n");
 	        }
 
 
@@ -982,7 +988,7 @@
 		        }
 
 		if(is_authorized==FALSE)
-			printf("<P><DIV ALIGN=CENTER CLASS='errorMessage'>It appears as though you are not authorized to view information for the specified %s...</DIV></P>\n",(display_type==DISPLAY_HOST_AVAIL)?"host":"service");
+			printf("<P><DIV ALIGN=CENTER CLASS='errorMessage'>%s情報を閲覧するための権限がありません。</DIV></P>\n",(display_type==DISPLAY_HOST_AVAIL)?"ホスト":"サービス");
 
 		else{
 
@@ -1001,7 +1007,7 @@
 
 			if(output_format==HTML_OUTPUT){
 				get_time_breakdown((time_t)(report_end_time-report_start_time),&days,&hours,&minutes,&seconds);
-				printf("<div align=center class='reportTime'>[ Availability report completed in %d min %d sec ]</div>\n",minutes,seconds);
+				printf("<div align=center class='reportTime'>[ このページを生成するのにかかった時間： %d分 %d秒 ]</div>\n",minutes,seconds);
 				printf("<BR><BR>\n");
 			        }
 
@@ -1024,7 +1030,7 @@
 	/* step 1 - ask the user what kind of report they want */
 	else{
 
-		printf("<p><div align=center class='reportSelectTitle'>Step 1: Select Report Type</div></p>\n");
+		printf("<p><div align=center class='reportSelectTitle'>ステップ１: 稼働レポートの種類選択</div></p>\n");
 
 		printf("<p><div align=center>\n");
 
@@ -1032,18 +1038,18 @@
 
 		printf("<table border=0 cellpadding=5>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Type:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>種類:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='report_type'>\n");
-		printf("<option value=hostgroups>Hostgroup(s)\n");
-		printf("<option value=hosts>Host(s)\n");
+		printf("<option value=hostgroups>ホストグループ\n");
+		printf("<option value=hosts>ホスト\n");
 		/* Opsera patch: Remove servicegroups */
-		//printf("<option value=servicegroups>Servicegroup(s)\n");
-		printf("<option value=services>Service(s)\n");
+		//printf("<option value=servicegroups>サービスグループ\n");
+		printf("<option value=services>サービス\n");
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='Continue to Step 2'></td></tr>\n");
+		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='ステップ２へ'></td></tr>\n");
 
 		printf("</table>\n");
 
@@ -1092,8 +1098,9 @@
 	printf("<html>\n");
 	printf("<head>\n");
 	printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
+	printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
 	printf("<title>\n");
-	printf("Nagios Availability\n");
+	printf("Nagios::稼働レポート -Nagios Availability-\n");
 	printf("</title>\n");
 
 	if(use_stylesheet==TRUE){
@@ -1879,14 +1886,14 @@
 		if((temp_as->time_stamp<=t1 || temp_as==subject->as_list) && (temp_as->entry_type!=AS_NO_DATA && temp_as->entry_type!=AS_PROGRAM_END && temp_as->entry_type!=AS_PROGRAM_START)){
 			subject->last_known_state=temp_as->entry_type;
 #ifdef DEBUG
-			printf("SETTING LAST KNOWN STATE=%d<br>\n",subject->last_known_state);
+			printf("最後の状態を設定=%d<br>\n",subject->last_known_state);
 #endif
 		        }
 
 		/* skip this entry if it occurs before the starting point of the graph */
 		if(temp_as->time_stamp<=t1){
 #ifdef DEBUG
-			printf("SKIPPING PRE-EVENT: %d @ %lu<br>\n",temp_as->entry_type,temp_as->time_stamp);
+			printf("前イベントをスキップ: %d @ %lu<br>\n",temp_as->entry_type,temp_as->time_stamp);
 #endif
 			last_as=temp_as;
 			continue;
@@ -1997,11 +2004,11 @@
 
 #ifdef DEBUG
 	if(subject->type==HOST_SUBJECT)
-		printf("HOST '%s'...\n",subject->host_name);
+		printf("ホスト '%s'\n",subject->host_name);
 	else
-		printf("SERVICE '%s' ON HOST '%s'...\n",subject->service_description,subject->host_name);
+		printf("ホスト '%s' 上の '%s' サービス\n",subject->host_name,subject->service_description);
 
-	printf("COMPUTING %d->%d FROM %lu to %lu (%lu seconds) FOR %s<br>\n",first_state,last_state,start_time,end_time,(end_time-start_time),(subject->type==HOST_SUBJECT)?"HOST":"SERVICE");
+	printf("%s の %lu から %lu (%lu 秒間)までの %d->%d を計算します。<br>\n",(subject->type==HOST_SUBJECT)?"ホスト":"サービス",start_time,end_time,(end_time-start_time),first_state,last_state);
 #endif
 
 	/* clip times if necessary */
@@ -2036,13 +2043,13 @@
 			if(start_time>midnight_today)
 				temp_start=start_time-midnight_today;
 #ifdef DEBUG
-			printf("<b>Matching: %ld -> %ld. (%ld -> %ld)</b><br>\n",temp_start, temp_end, midnight_today+temp_start, midnight_today+temp_end);
+			printf("<b>一致しました: %ld -> %ld. (%ld -> %ld)</b><br>\n",temp_start, temp_end, midnight_today+temp_start, midnight_today+temp_end);
 #endif
 			/* check all time ranges for this day of the week */
 			for(temp_timerange=current_timeperiod->days[weekday];temp_timerange!=NULL;temp_timerange=temp_timerange->next){
 					
 #ifdef DEBUG
-				printf("<li>Matching in timerange[%d]: %d -> %d (%ld -> %ld)<br>\n",weekday,temp_timerange->range_start,temp_timerange->range_end,temp_start,temp_end);
+				printf("<li>一致した期間[%d]: %d -> %d (%ld -> %ld)<br>\n",weekday,temp_timerange->range_start,temp_timerange->range_end,temp_start,temp_end);
 #endif
 				start=max(temp_timerange->range_start,temp_start);
 				end=min(temp_timerange->range_end,temp_end);
@@ -2050,12 +2057,12 @@
 				if(start<end){
 					temp_duration+=end-start;
 #ifdef DEBUG
-					printf("<li>Matched time: %ld -> %ld = %d<br>\n",start, end, temp_duration);
+					printf("<li>一致した時間: %ld -> %ld = %d<br>\n",start, end, temp_duration);
 #endif
 				        } 
 #ifdef DEBUG
 				else
-					printf("<li>Ignored time: %ld -> %ld<br>\n",start, end);
+					printf("<li>一致しなかった時間: %ld -> %ld<br>\n",start, end);
 #endif
 			        }
 			state_duration+=temp_duration;
@@ -2128,7 +2135,7 @@
 	as->processed_state=start_state;
 
 #ifdef DEBUG
-	printf("PASSED TIME CHECKS, CLIPPED VALUES: START=%lu, END=%lu\n",start_time,end_time);
+	printf("無視する時間: 開始=%lu, 終了=%lu\n",start_time,end_time);
 #endif
 
 
@@ -2427,7 +2434,7 @@
 	        }
 
 #ifdef DEBUG2
-	printf("\tSUBJECT DOWNTIME: Host '%s', Service '%s', State=%d, Duration=%lu, Start=%lu\n",subject->host_name,(subject->service_description==NULL)?"NULL":subject->service_description,subject_state,state_duration,start_time);
+	printf("\tダウンタイム: ホスト '%s', サービス '%s', ステータス=%d, 期間=%lu, 開始時間=%lu\n",subject->host_name,(subject->service_description==NULL)?"NULL":subject->service_description,subject_state,state_duration,start_time);
 #endif
 
 	return;
@@ -2861,14 +2868,14 @@
 	for(current_archive=newest_archive;current_archive<=oldest_archive;current_archive++){
 
 #ifdef DEBUG
-		printf("Reading archive #%d\n",current_archive);
+		printf("読み込んだアーカイブ #%d\n",current_archive);
 #endif
 
 		/* get the name of the log file that contains this archive */
 		get_log_archive_to_use(current_archive,filename,sizeof(filename)-1);
 
 #ifdef DEBUG
-		printf("Archive name: '%s'\n",filename);
+		printf("アーカイブ名: '%s'\n",filename);
 #endif
 
 		/* scan the log file for archived state data */
@@ -3285,23 +3292,23 @@
 
 	printf("<BR><BR>\n");
 
-	printf("<DIV ALIGN=CENTER CLASS='dataTitle'>%s Log Entries:</DIV>\n",(subject->type==HOST_SUBJECT)?"Host":"Service");
+	printf("<DIV ALIGN=CENTER CLASS='dataTitle'>%sログの内容:</DIV>\n",(subject->type==HOST_SUBJECT)?"ホスト":"サービス");
 
 	printf("<DIV ALIGN=CENTER CLASS='infoMessage'>");
 	if(full_log_entries==TRUE){
 		full_log_entries=FALSE;
 		if(subject->type==HOST_SUBJECT)
-			host_report_url(subject->host_name,"[ View condensed log entries ]");
+			host_report_url(subject->host_name,"[ 簡略表示 ]");
 		else
-			service_report_url(subject->host_name,subject->service_description,"[ View condensed log entries ]");
+			service_report_url(subject->host_name,subject->service_description,"[ 簡略表示 ]");
 		full_log_entries=TRUE;
 	        }
 	else{
 		full_log_entries=TRUE;
 		if(subject->type==HOST_SUBJECT)
-			host_report_url(subject->host_name,"[ View full log entries ]");
+			host_report_url(subject->host_name,"[ 完全表示 ]");
 		else
-			service_report_url(subject->host_name,subject->service_description,"[ View full log entries ]");
+			service_report_url(subject->host_name,subject->service_description,"[ 完全表示 ]");
 		full_log_entries=FALSE;
 	        }
 	printf("</DIV>\n");
@@ -3309,15 +3316,15 @@
 	printf("<DIV ALIGN=CENTER>\n");
 
 	printf("<table border=1 cellspacing=0 cellpadding=3 class='logEntries'>\n");
-	printf("<tr><th class='logEntries'>Event Start Time</th><th class='logEntries'>Event End Time</th><th class='logEntries'>Event Duration</th><th class='logEntries'>Event/State Type</th><th class='logEntries'>Event/State Information</th></tr>\n");
+	printf("<tr><th class='logEntries'>イベント開始時間</th><th class='logEntries'>イベント終了時刻</th><th class='logEntries'>イベント継続期間</th><th class='logEntries'>イベント／状態の種類</th><th class='logEntries'>イベント／状態の情報</th></tr>\n");
 
 	/* write all archived state entries */
 	for(temp_as=subject->as_list;temp_as!=NULL;temp_as=temp_as->next){
 
 		if(temp_as->state_type==AS_HARD_STATE)
-			state_type=" (HARD)";
+			state_type=" (ハード)";
 		else if(temp_as->state_type==AS_SOFT_STATE)
-			state_type=" (SOFT)";
+			state_type=" (ソフト)";
 		else
 			state_type="";
 
@@ -3325,63 +3332,63 @@
 		case AS_NO_DATA:
 			if(full_log_entries==FALSE)
 				continue;
-			entry_type="NO DATA";
+			entry_type="データ無し";
 			ebgclass="INDETERMINATE";
 			break;
 		case AS_PROGRAM_END:
 			if(full_log_entries==FALSE)
 				continue;
-			entry_type="PROGRAM END";
+			entry_type="プログラム終了";
 			ebgclass="INDETERMINATE";
 			break;
 		case AS_PROGRAM_START:
 			if(full_log_entries==FALSE)
 				continue;
-			entry_type="PROGRAM (RE)START";
+			entry_type="プログラム(再)起動";
 			ebgclass="INDETERMINATE";
 			break;
 		case AS_HOST_UP:
-			entry_type="HOST UP";
+			entry_type="ホスト稼働(UP)";
 			ebgclass="UP";
 			break;
 		case AS_HOST_DOWN:
-			entry_type="HOST DOWN";
+			entry_type="ホスト停止(DOWN)";
 			ebgclass="DOWN";
 			break;
 		case AS_HOST_UNREACHABLE:
-			entry_type="HOST UNREACHABLE";
+			entry_type="ホスト未到達(UNREACHABLE)";
 			ebgclass="UNREACHABLE";
 			break;
 		case AS_SVC_OK:
-			entry_type="SERVICE OK";
+			entry_type="サービス正常(OK)";
 			ebgclass="OK";
 			break;
 		case AS_SVC_UNKNOWN:
-			entry_type="SERVICE UNKNOWN";
+			entry_type="サービス不明(UNKNOWN)";
 			ebgclass="UNKNOWN";
 			break;
 		case AS_SVC_WARNING:
-			entry_type="SERVICE WARNING";
+			entry_type="サービス警告(WARNING)";
 			ebgclass="WARNING";
 			break;
 		case AS_SVC_CRITICAL:
-			entry_type="SERVICE CRITICAL";
+			entry_type="サービス異常(CRITICAL)";
 			ebgclass="CRITICAL";
 			break;
 		case AS_SVC_DOWNTIME_START:
-			entry_type="SERVICE DOWNTIME START";
+			entry_type="サービス停止時間(ダウンタイム)の開始時間";
 			ebgclass="INDETERMINATE";
 			break;
 		case AS_SVC_DOWNTIME_END:
-			entry_type="SERVICE DOWNTIME END";
+			entry_type="サービス停止時間(ダウンタイム)の終了時間";
 			ebgclass="INDETERMINATE";
 			break;
 		case AS_HOST_DOWNTIME_START:
-			entry_type="HOST DOWNTIME START";
+			entry_type="ホスト停止時間(ダウンタイム)の開始時間";
 			ebgclass="INDETERMINATE";
 			break;
 		case AS_HOST_DOWNTIME_END:
-			entry_type="HOST DOWNTIME END";
+			entry_type="ホスト停止時間(ダウンタイム)の終了時間";
 			ebgclass="INDETERMINATE";
 			break;
 		default:
@@ -3395,12 +3402,12 @@
 		if(temp_as->next==NULL){
 			get_time_string(&t2,end_date_time,sizeof(end_date_time)-1,SHORT_DATE_TIME);
 			get_time_breakdown((time_t)(t2-temp_as->time_stamp),&days,&hours,&minutes,&seconds);
-			snprintf(duration,sizeof(duration)-1,"%dd %dh %dm %ds+",days,hours,minutes,seconds);
+			snprintf(duration,sizeof(duration)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		        }
 		else{
 			get_time_string(&(temp_as->next->time_stamp),end_date_time,sizeof(end_date_time)-1,SHORT_DATE_TIME);
 			get_time_breakdown((time_t)(temp_as->next->time_stamp-temp_as->time_stamp),&days,&hours,&minutes,&seconds);
-			snprintf(duration,sizeof(duration)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+			snprintf(duration,sizeof(duration)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		        }
 
 		if(odd){
@@ -3490,11 +3497,11 @@
 	total_time=calculate_total_time(t1,t2);
 
 	printf("<BR><BR>\n");
-	printf("<DIV ALIGN=CENTER CLASS='dataTitle'>Hostgroup '%s' Host State Breakdowns:</DIV>\n",hg->group_name);
+	printf("<DIV ALIGN=CENTER CLASS='dataTitle'>ホストグループ '%s' のホスト稼働状況:</DIV>\n",hg->group_name);
 
 	printf("<DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
-	printf("<TR><TH CLASS='data'>Host</TH><TH CLASS='data'>%% Time Up</TH><TH CLASS='data'>%% Time Down</TH><TH CLASS='data'>%% Time Unreachable</TH><TH CLASS='data'>%% Time Undetermined</TH></TR>\n");
+	printf("<TR><TH CLASS='data'>ホスト名</TH><TH CLASS='data'> 稼働率<BR>(UP)</TH><TH CLASS='data'> 停止率<BR>(DOWN)</TH><TH CLASS='data'> 未到達率<BR>(UNREACHABLE)</TH><TH CLASS='data'> 未確定率<BR>(UNDETERMINED)</TH></TR>\n");
 
 	for(temp_subject=subject_list;temp_subject!=NULL;temp_subject=temp_subject->next){
 
@@ -3565,7 +3572,7 @@
 		odd=1;
 		bgclass="Even";
       	        }
-	printf("<tr CLASS='data%s'><td CLASS='data%s'>Average</td><td CLASS='hostUP'>%2.3f%% (%2.3f%%)</td><td CLASS='hostDOWN'>%2.3f%% (%2.3f%%)</td><td CLASS='hostUNREACHABLE'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>",bgclass,bgclass,average_percent_time_up,average_percent_time_up_known,average_percent_time_down,average_percent_time_down_known,average_percent_time_unreachable,average_percent_time_unreachable_known,bgclass,average_percent_time_indeterminate);
+	printf("<tr CLASS='data%s'><td CLASS='data%s'>平均値</td><td CLASS='hostUP'>%2.3f%% (%2.3f%%)</td><td CLASS='hostDOWN'>%2.3f%% (%2.3f%%)</td><td CLASS='hostUNREACHABLE'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>",bgclass,bgclass,average_percent_time_up,average_percent_time_up_known,average_percent_time_down,average_percent_time_down_known,average_percent_time_unreachable,average_percent_time_unreachable_known,bgclass,average_percent_time_indeterminate);
 
 	printf("</table>\n");
 	printf("</DIV>\n");
@@ -3652,11 +3659,11 @@
 	total_time=calculate_total_time(t1,t2);
 
 	printf("<BR><BR>\n");
-	printf("<DIV ALIGN=CENTER CLASS='dataTitle'>Servicegroup '%s' Host State Breakdowns:</DIV>\n",sg->group_name);
+	printf("<DIV ALIGN=CENTER CLASS='dataTitle'>ホストグループ '%s' のホスト稼働状況:</DIV>\n",sg->group_name);
 
 	printf("<DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
-	printf("<TR><TH CLASS='data'>Host</TH><TH CLASS='data'>%% Time Up</TH><TH CLASS='data'>%% Time Down</TH><TH CLASS='data'>%% Time Unreachable</TH><TH CLASS='data'>%% Time Undetermined</TH></TR>\n");
+	printf("<TR><TH CLASS='data'>ホスト名</TH><TH CLASS='data'> 稼働率<BR>(UP)</TH><TH CLASS='data'> 停止率<BR>(DOWN)</TH><TH CLASS='data'> 未到達率<BR>(UNREACHABLE)</TH><TH CLASS='data'> 未確定率<BR>(UNDETERMINED)</TH></TR>\n");
 
 	for(temp_subject=subject_list;temp_subject!=NULL;temp_subject=temp_subject->next){
 
@@ -3727,17 +3734,17 @@
 		odd=1;
 		bgclass="Even";
       	        }
-	printf("<tr CLASS='data%s'><td CLASS='data%s'>Average</td><td CLASS='hostUP'>%2.3f%% (%2.3f%%)</td><td CLASS='hostDOWN'>%2.3f%% (%2.3f%%)</td><td CLASS='hostUNREACHABLE'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>",bgclass,bgclass,average_percent_time_up,average_percent_time_up_known,average_percent_time_down,average_percent_time_down_known,average_percent_time_unreachable,average_percent_time_unreachable_known,bgclass,average_percent_time_indeterminate);
+	printf("<tr CLASS='data%s'><td CLASS='data%s'>平均値</td><td CLASS='hostUP'>%2.3f%% (%2.3f%%)</td><td CLASS='hostDOWN'>%2.3f%% (%2.3f%%)</td><td CLASS='hostUNREACHABLE'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>",bgclass,bgclass,average_percent_time_up,average_percent_time_up_known,average_percent_time_down,average_percent_time_down_known,average_percent_time_unreachable,average_percent_time_unreachable_known,bgclass,average_percent_time_indeterminate);
 
 	printf("</table>\n");
 	printf("</DIV>\n");
 
 	printf("<BR>\n");
-	printf("<DIV ALIGN=CENTER CLASS='dataTitle'>Servicegroup '%s' Service State Breakdowns:</DIV>\n",sg->group_name);
+	printf("<DIV ALIGN=CENTER CLASS='dataTitle'>サービスグループ '%s' のサービス稼働状況:</DIV>\n",sg->group_name);
 
 	printf("<DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
-	printf("<TR><TH CLASS='data'>Host</TH><TH CLASS='data'>Service</TH><TH CLASS='data'>%% Time OK</TH><TH CLASS='data'>%% Time Warning</TH><TH CLASS='data'>%% Time Unknown</TH><TH CLASS='data'>%% Time Critical</TH><TH CLASS='data'>%% Time Undetermined</TH></TR>\n");
+	printf("<TR><TH CLASS='data'>ホスト名</TH><TH CLASS='data'>サービス名</TH><TH CLASS='data'> 正常率<BR>(OK)</TH><TH CLASS='data'> 警告率<BR>(WARNING)</TH><TH CLASS='data'> 不明率<BR>(UNKNOWN)</TH><TH CLASS='data'> 停止率<BR>(CRITICAL)</TH><TH CLASS='data'> 未確定率<BR>(UNDETERMINED)</TH></TR>\n");
 
 	current_subject=0;
 	average_percent_time_indeterminate=0.0;
@@ -3827,7 +3834,7 @@
 		bgclass="Even";
 	        }
 
-	printf("<tr CLASS='data%s'><td CLASS='data%s' colspan='2'>Average</td><td CLASS='serviceOK'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceWARNING'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceUNKNOWN'>%2.3f%% (%2.3f%%)</td><td class='serviceCRITICAL'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>\n",bgclass,bgclass,average_percent_time_ok,average_percent_time_ok_known,average_percent_time_warning,average_percent_time_warning_known,average_percent_time_unknown,average_percent_time_unknown_known,average_percent_time_critical,average_percent_time_critical_known,bgclass,average_percent_time_indeterminate);
+	printf("<tr CLASS='data%s'><td CLASS='data%s' colspan='2'>平均値</td><td CLASS='serviceOK'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceWARNING'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceUNKNOWN'>%2.3f%% (%2.3f%%)</td><td class='serviceCRITICAL'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>\n",bgclass,bgclass,average_percent_time_ok,average_percent_time_ok_known,average_percent_time_warning,average_percent_time_warning_known,average_percent_time_unknown,average_percent_time_unknown_known,average_percent_time_critical,average_percent_time_critical_known,bgclass,average_percent_time_indeterminate);
 
 	printf("</table>\n");
 	printf("</DIV>\n");
@@ -3921,7 +3928,7 @@
 	total_time=calculate_total_time(t1,t2);
 
 #ifdef DEBUG
-	printf("Total time: '%ld' seconds<br>\n",total_time);
+	printf("合計時間: '%ld' 秒<br>\n",total_time);
 #endif
 
 	/* show data for a specific host */
@@ -3947,45 +3954,45 @@
 
 		/* up times */
 		get_time_breakdown(temp_subject->time_up,&days,&hours,&minutes,&seconds);
-		snprintf(time_up_string,sizeof(time_up_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_up_string,sizeof(time_up_string)-1,"%d日と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->scheduled_time_up,&days,&hours,&minutes,&seconds);
-		snprintf(time_up_scheduled_string,sizeof(time_up_scheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_up_scheduled_string,sizeof(time_up_scheduled_string)-1,"%d日間と %d時間%d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->time_up-temp_subject->scheduled_time_up,&days,&hours,&minutes,&seconds);
-		snprintf(time_up_unscheduled_string,sizeof(time_up_unscheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_up_unscheduled_string,sizeof(time_up_unscheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		/* down times */
 		get_time_breakdown(temp_subject->time_down,&days,&hours,&minutes,&seconds);
-		snprintf(time_down_string,sizeof(time_down_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_down_string,sizeof(time_down_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->scheduled_time_down,&days,&hours,&minutes,&seconds);
-		snprintf(time_down_scheduled_string,sizeof(time_down_scheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_down_scheduled_string,sizeof(time_down_scheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->time_down-temp_subject->scheduled_time_down,&days,&hours,&minutes,&seconds);
-		snprintf(time_down_unscheduled_string,sizeof(time_down_unscheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_down_unscheduled_string,sizeof(time_down_unscheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		/* unreachable times */
 		get_time_breakdown(temp_subject->time_unreachable,&days,&hours,&minutes,&seconds);
-		snprintf(time_unreachable_string,sizeof(time_unreachable_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_unreachable_string,sizeof(time_unreachable_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->scheduled_time_unreachable,&days,&hours,&minutes,&seconds);
-		snprintf(time_unreachable_scheduled_string,sizeof(time_unreachable_scheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_unreachable_scheduled_string,sizeof(time_unreachable_scheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->time_unreachable-temp_subject->scheduled_time_unreachable,&days,&hours,&minutes,&seconds);
-		snprintf(time_unreachable_unscheduled_string,sizeof(time_unreachable_unscheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_unreachable_unscheduled_string,sizeof(time_unreachable_unscheduled_string)-1,"%d日間 と%d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		/* indeterminate times */
 		get_time_breakdown(time_indeterminate,&days,&hours,&minutes,&seconds);
-		snprintf(time_indeterminate_string,sizeof(time_indeterminate_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_indeterminate_string,sizeof(time_indeterminate_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->scheduled_time_indeterminate,&days,&hours,&minutes,&seconds);
-		snprintf(time_indeterminate_scheduled_string,sizeof(time_indeterminate_scheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_indeterminate_scheduled_string,sizeof(time_indeterminate_scheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(time_indeterminate-temp_subject->scheduled_time_indeterminate,&days,&hours,&minutes,&seconds);
-		snprintf(time_indeterminate_unscheduled_string,sizeof(time_indeterminate_unscheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_indeterminate_unscheduled_string,sizeof(time_indeterminate_unscheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->time_indeterminate_notrunning,&days,&hours,&minutes,&seconds);
-		snprintf(time_indeterminate_notrunning_string,sizeof(time_indeterminate_notrunning_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_indeterminate_notrunning_string,sizeof(time_indeterminate_notrunning_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->time_indeterminate_nodata,&days,&hours,&minutes,&seconds);
-		snprintf(time_indeterminate_nodata_string,sizeof(time_indeterminate_nodata_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_indeterminate_nodata_string,sizeof(time_indeterminate_nodata_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		get_time_breakdown(time_determinate,&days,&hours,&minutes,&seconds);
-		snprintf(time_determinate_string,sizeof(time_determinate_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_determinate_string,sizeof(time_determinate_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		get_time_breakdown(total_time,&days,&hours,&minutes,&seconds);
-		snprintf(total_time_string,sizeof(total_time_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(total_time_string,sizeof(total_time_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		if(total_time>0){
 			percent_time_up=(double)(((double)temp_subject->time_up*100.0)/(double)total_time);
@@ -4015,48 +4022,48 @@
 		                }
 	                }
 
-		printf("<DIV ALIGN=CENTER CLASS='dataTitle'>Host State Breakdowns:</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataTitle'>ホスト稼働状況:</DIV>\n");
 
 #ifdef USE_TRENDS
 		printf("<p align='center'>\n");
 		printf("<a href='%s?host=%s",TRENDS_CGI,url_encode(host_name));
 		printf("&t1=%lu&t2=%lu&includesoftstates=%s&assumestateretention=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedhoststate=%d&backtrack=%d'>",t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_host_state,backtrack_archives);
 		printf("<img src='%s?createimage&smallimage&host=%s",TRENDS_CGI,url_encode(host_name));
-		printf("&t1=%lu&t2=%lu&includesoftstates=%s&assumestateretention=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedhoststate=%d&backtrack=%d' border=1 alt='Host State Trends' title='Host State Trends' width='500' height='20'>",t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_host_state,backtrack_archives);
+		printf("&t1=%lu&t2=%lu&includesoftstates=%s&assumestateretention=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedhoststate=%d&backtrack=%d' border=1 alt='ホスト状態の傾向' title='Host State Trends' width='500' height='20'>",t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_host_state,backtrack_archives);
 		printf("</a><br>\n");
 		printf("</p>\n");
 #endif
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>State</TH><TH CLASS='data'>Type / Reason</TH><TH CLASS='data'>Time</TH><TH CLASS='data'>%% Total Time</TH><TH CLASS='data'>%% Known Time</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>状態</TH><TH CLASS='data'>内容</TH><TH CLASS='data'>時間</TH><TH CLASS='data'>割合</TH><TH CLASS='data'>認知率</TH></TR>\n");
 
 		/* up times */
-		printf("<tr CLASS='dataEven'><td CLASS='hostUP' rowspan=3>UP</td>");
-		printf("<td CLASS='dataEven'>Unscheduled</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td class='dataEven'>%2.3f%%</td></tr>\n",time_up_unscheduled_string,percent_time_up,percent_time_up_known);
-		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>Scheduled</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td class='dataEven'>%2.3f%%</td></tr>\n",time_up_scheduled_string,percent_time_up_scheduled,percent_time_up_scheduled_known);
-		printf("<tr CLASS='hostUP'><td CLASS='hostUP'>Total</td><td CLASS='hostUP'>%s</td><td CLASS='hostUP'>%2.3f%%</td><td class='hostUP'>%2.3f%%</td></tr>\n",time_up_string,percent_time_up,percent_time_up_known);
+		printf("<tr CLASS='dataEven'><td CLASS='hostUP' rowspan=3>稼働<br>(UP)</td>");
+		printf("<td CLASS='dataEven'>非計画</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td class='dataEven'>%2.3f%%</td></tr>\n",time_up_unscheduled_string,percent_time_up,percent_time_up_known);
+		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>計画</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td class='dataEven'>%2.3f%%</td></tr>\n",time_up_scheduled_string,percent_time_up_scheduled,percent_time_up_scheduled_known);
+		printf("<tr CLASS='hostUP'><td CLASS='hostUP'>合計</td><td CLASS='hostUP'>%s</td><td CLASS='hostUP'>%2.3f%%</td><td class='hostUP'>%2.3f%%</td></tr>\n",time_up_string,percent_time_up,percent_time_up_known);
 
 		/* down times */
-		printf("<tr CLASS='dataOdd'><td CLASS='hostDOWN' rowspan=3>DOWN</td>");
-		printf("<td CLASS='dataOdd'>Unscheduled</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td class='dataOdd'>%2.3f%%</td></tr>\n",time_down_unscheduled_string,percent_time_down_unscheduled,percent_time_down_unscheduled_known);
-		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>Scheduled</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td class='dataOdd'>%2.3f%%</td></tr>\n",time_down_scheduled_string,percent_time_down_scheduled,percent_time_down_scheduled_known);
-		printf("<tr CLASS='hostDOWN'><td CLASS='hostDOWN'>Total</td><td CLASS='hostDOWN'>%s</td><td CLASS='hostDOWN'>%2.3f%%</td><td class='hostDOWN'>%2.3f%%</td></tr>\n",time_down_string,percent_time_down,percent_time_down_known);
+		printf("<tr CLASS='dataOdd'><td CLASS='hostDOWN' rowspan=3>停止<br>(DOWN)</td>");
+		printf("<td CLASS='dataOdd'>非計画</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td class='dataOdd'>%2.3f%%</td></tr>\n",time_down_unscheduled_string,percent_time_down_unscheduled,percent_time_down_unscheduled_known);
+		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>計画</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td class='dataOdd'>%2.3f%%</td></tr>\n",time_down_scheduled_string,percent_time_down_scheduled,percent_time_down_scheduled_known);
+		printf("<tr CLASS='hostDOWN'><td CLASS='hostDOWN'>合計</td><td CLASS='hostDOWN'>%s</td><td CLASS='hostDOWN'>%2.3f%%</td><td class='hostDOWN'>%2.3f%%</td></tr>\n",time_down_string,percent_time_down,percent_time_down_known);
 
 		/* unreachable times */
-		printf("<tr CLASS='dataEven'><td CLASS='hostUNREACHABLE' rowspan=3>UNREACHABLE</td>");
-		printf("<td CLASS='dataEven'>Unscheduled</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td class='dataEven'>%2.3f%%</td></tr>\n",time_unreachable_unscheduled_string,percent_time_unreachable,percent_time_unreachable_known);
-		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>Scheduled</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td class='dataEven'>%2.3f%%</td></tr>\n",time_unreachable_scheduled_string,percent_time_unreachable_scheduled,percent_time_unreachable_scheduled_known);
-		printf("<tr CLASS='hostUNREACHABLE'><td CLASS='hostUNREACHABLE'>Total</td><td CLASS='hostUNREACHABLE'>%s</td><td CLASS='hostUNREACHABLE'>%2.3f%%</td><td class='hostUNREACHABLE'>%2.3f%%</td></tr>\n",time_unreachable_string,percent_time_unreachable,percent_time_unreachable_known);
+		printf("<tr CLASS='dataEven'><td CLASS='hostUNREACHABLE' rowspan=3>未到達<br>(UNREACHABLE)</td>");
+		printf("<td CLASS='dataEven'>非計画</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td class='dataEven'>%2.3f%%</td></tr>\n",time_unreachable_unscheduled_string,percent_time_unreachable,percent_time_unreachable_known);
+		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>計画</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td class='dataEven'>%2.3f%%</td></tr>\n",time_unreachable_scheduled_string,percent_time_unreachable_scheduled,percent_time_unreachable_scheduled_known);
+		printf("<tr CLASS='hostUNREACHABLE'><td CLASS='hostUNREACHABLE'>合計</td><td CLASS='hostUNREACHABLE'>%s</td><td CLASS='hostUNREACHABLE'>%2.3f%%</td><td class='hostUNREACHABLE'>%2.3f%%</td></tr>\n",time_unreachable_string,percent_time_unreachable,percent_time_unreachable_known);
 
 		/* indeterminate times */
-		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd' rowspan=3>Undetermined</td>");
-		printf("<td CLASS='dataOdd'>Nagios Not Running</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'></td></tr>\n",time_indeterminate_notrunning_string,percent_time_indeterminate_notrunning);
-		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>Insufficient Data</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'></td></tr>\n",time_indeterminate_nodata_string,percent_time_indeterminate_nodata);
-		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>Total</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'></td></tr>\n",time_indeterminate_string,percent_time_indeterminate);
+		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd' rowspan=3>不明<br>(UNDETERMINED)</td>");
+		printf("<td CLASS='dataOdd'>Nagios非稼働</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'></td></tr>\n",time_indeterminate_notrunning_string,percent_time_indeterminate_notrunning);
+		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>データ不足</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'></td></tr>\n",time_indeterminate_nodata_string,percent_time_indeterminate_nodata);
+		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>合計</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'></td></tr>\n",time_indeterminate_string,percent_time_indeterminate);
 
 		printf("<tr><td colspan=3></td></tr>\n");
 
-		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>All</td><td class='dataEven'>Total</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>100.000%%</td><td CLASS='dataEven'>100.000%%</td></tr>\n",total_time_string);
+		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>すべて</td><td class='dataEven'>合計</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>100.000%%</td><td CLASS='dataEven'>100.000%%</td></tr>\n",total_time_string);
 		printf("</table>\n");
 		printf("</DIV>\n");
 
@@ -4065,11 +4072,11 @@
 		/* display state breakdowns for all services on this host */
 
 		printf("<BR><BR>\n");
-		printf("<DIV ALIGN=CENTER CLASS='dataTitle'>State Breakdowns For Host Services:</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataTitle'>このホストのサービスの稼働状況:</DIV>\n");
 
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>Service</TH><TH CLASS='data'>%% Time OK</TH><TH CLASS='data'>%% Time Warning</TH><TH CLASS='data'>%% Time Unknown</TH><TH CLASS='data'>%% Time Critical</TH><TH CLASS='data'>%% Time Undetermined</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>サービス名</TH><TH CLASS='data'> 稼働率<BR>(OK)</TH><TH CLASS='data'> 警告率<BR>(WARNING)</TH><TH CLASS='data'> 不明率<BR>(UNKNOWN)</TH><TH CLASS='data'> 障害率<BR>(CRITICAL)</TH><TH CLASS='data'> 不確定率<BR>(UNDETERMINED)</TH></TR>\n");
 
 		for(temp_subject=subject_list;temp_subject!=NULL;temp_subject=temp_subject->next){
 
@@ -4148,7 +4155,7 @@
 			bgclass="Even";
 	                }
 
-		printf("<tr CLASS='data%s'><td CLASS='data%s'>Average</td><td CLASS='serviceOK'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceWARNING'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceUNKNOWN'>%2.3f%% (%2.3f%%)</td><td class='serviceCRITICAL'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>\n",bgclass,bgclass,average_percent_time_ok,average_percent_time_ok_known,average_percent_time_warning,average_percent_time_warning_known,average_percent_time_unknown,average_percent_time_unknown_known,average_percent_time_critical,average_percent_time_critical_known,bgclass,average_percent_time_indeterminate);
+		printf("<tr CLASS='data%s'><td CLASS='data%s'>平均値</td><td CLASS='serviceOK'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceWARNING'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceUNKNOWN'>%2.3f%% (%2.3f%%)</td><td class='serviceCRITICAL'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>\n",bgclass,bgclass,average_percent_time_ok,average_percent_time_ok_known,average_percent_time_warning,average_percent_time_warning_known,average_percent_time_unknown,average_percent_time_unknown_known,average_percent_time_critical,average_percent_time_critical_known,bgclass,average_percent_time_indeterminate);
 
 		printf("</table>\n");
 		printf("</DIV>\n");
@@ -4166,11 +4173,11 @@
 		if(output_format==HTML_OUTPUT){
 
 			printf("<BR><BR>\n");
-			printf("<DIV ALIGN=CENTER CLASS='dataTitle'>Host State Breakdowns:</DIV>\n");
+			printf("<DIV ALIGN=CENTER CLASS='dataTitle'>ホスト稼働状況:</DIV>\n");
 
 			printf("<DIV ALIGN=CENTER>\n");
 			printf("<TABLE BORDER=0 CLASS='data'>\n");
-			printf("<TR><TH CLASS='data'>Host</TH><TH CLASS='data'>%% Time Up</TH><TH CLASS='data'>%% Time Down</TH><TH CLASS='data'>%% Time Unreachable</TH><TH CLASS='data'>%% Time Undetermined</TH></TR>\n");
+			printf("<TR><TH CLASS='data'>ホスト名</TH><TH CLASS='data'> 稼働率<BR>(OK)</TH><TH CLASS='data'> 停止率<BR>(DOWN)</TH><TH CLASS='data'> 未到達率<BR>(UNREACHABLE)</TH><TH CLASS='data'> 未確定率<BR>(UNDETERMINED)</TH></TR>\n");
 		        }
 
 		else if(output_format==CSV_OUTPUT){
@@ -4313,7 +4320,7 @@
 				odd=1;
 				bgclass="Even";
 		      	        }
-			printf("<tr CLASS='data%s'><td CLASS='data%s'>Average</td><td CLASS='hostUP'>%2.3f%% (%2.3f%%)</td><td CLASS='hostDOWN'>%2.3f%% (%2.3f%%)</td><td CLASS='hostUNREACHABLE'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>",bgclass,bgclass,average_percent_time_up,average_percent_time_up_known,average_percent_time_down,average_percent_time_down_known,average_percent_time_unreachable,average_percent_time_unreachable_known,bgclass,average_percent_time_indeterminate);
+			printf("<tr CLASS='data%s'><td CLASS='data%s'>平均値</td><td CLASS='hostUP'>%2.3f%% (%2.3f%%)</td><td CLASS='hostDOWN'>%2.3f%% (%2.3f%%)</td><td CLASS='hostUNREACHABLE'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>",bgclass,bgclass,average_percent_time_up,average_percent_time_up_known,average_percent_time_down,average_percent_time_down_known,average_percent_time_unreachable,average_percent_time_unreachable_known,bgclass,average_percent_time_indeterminate);
 
 				printf("</table>\n");
 				printf("</DIV>\n");
@@ -4426,53 +4433,53 @@
 
 		/* ok states */
 		get_time_breakdown(temp_subject->time_ok,&days,&hours,&minutes,&seconds);
-		snprintf(time_ok_string,sizeof(time_ok_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_ok_string,sizeof(time_ok_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->scheduled_time_ok,&days,&hours,&minutes,&seconds);
-		snprintf(time_ok_scheduled_string,sizeof(time_ok_scheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_ok_scheduled_string,sizeof(time_ok_scheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->time_ok-temp_subject->scheduled_time_ok,&days,&hours,&minutes,&seconds);
-		snprintf(time_ok_unscheduled_string,sizeof(time_ok_unscheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_ok_unscheduled_string,sizeof(time_ok_unscheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		/* warning states */
 		get_time_breakdown(temp_subject->time_warning,&days,&hours,&minutes,&seconds);
-		snprintf(time_warning_string,sizeof(time_warning_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_warning_string,sizeof(time_warning_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->scheduled_time_warning,&days,&hours,&minutes,&seconds);
-		snprintf(time_warning_scheduled_string,sizeof(time_warning_scheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_warning_scheduled_string,sizeof(time_warning_scheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->time_warning-temp_subject->scheduled_time_warning,&days,&hours,&minutes,&seconds);
-		snprintf(time_warning_unscheduled_string,sizeof(time_warning_unscheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_warning_unscheduled_string,sizeof(time_warning_unscheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		/* unknown states */
 		get_time_breakdown(temp_subject->time_unknown,&days,&hours,&minutes,&seconds);
-		snprintf(time_unknown_string,sizeof(time_unknown_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_unknown_string,sizeof(time_unknown_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->scheduled_time_unknown,&days,&hours,&minutes,&seconds);
-		snprintf(time_unknown_scheduled_string,sizeof(time_unknown_scheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_unknown_scheduled_string,sizeof(time_unknown_scheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->time_unknown-temp_subject->scheduled_time_unknown,&days,&hours,&minutes,&seconds);
-		snprintf(time_unknown_unscheduled_string,sizeof(time_unknown_unscheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_unknown_unscheduled_string,sizeof(time_unknown_unscheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		/* critical states */
 		get_time_breakdown(temp_subject->time_critical,&days,&hours,&minutes,&seconds);
-		snprintf(time_critical_string,sizeof(time_critical_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_critical_string,sizeof(time_critical_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->scheduled_time_critical,&days,&hours,&minutes,&seconds);
-		snprintf(time_critical_scheduled_string,sizeof(time_critical_scheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_critical_scheduled_string,sizeof(time_critical_scheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->time_critical-temp_subject->scheduled_time_critical,&days,&hours,&minutes,&seconds);
-		snprintf(time_critical_unscheduled_string,sizeof(time_critical_unscheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_critical_unscheduled_string,sizeof(time_critical_unscheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		/* indeterminate time */
 		get_time_breakdown(time_indeterminate,&days,&hours,&minutes,&seconds);
-		snprintf(time_indeterminate_string,sizeof(time_indeterminate_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_indeterminate_string,sizeof(time_indeterminate_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->scheduled_time_indeterminate,&days,&hours,&minutes,&seconds);
-		snprintf(time_indeterminate_scheduled_string,sizeof(time_indeterminate_scheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_indeterminate_scheduled_string,sizeof(time_indeterminate_scheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(time_indeterminate-temp_subject->scheduled_time_indeterminate,&days,&hours,&minutes,&seconds);
-		snprintf(time_indeterminate_unscheduled_string,sizeof(time_indeterminate_unscheduled_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_indeterminate_unscheduled_string,sizeof(time_indeterminate_unscheduled_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->time_indeterminate_notrunning,&days,&hours,&minutes,&seconds);
-		snprintf(time_indeterminate_notrunning_string,sizeof(time_indeterminate_notrunning_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_indeterminate_notrunning_string,sizeof(time_indeterminate_notrunning_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 		get_time_breakdown(temp_subject->time_indeterminate_nodata,&days,&hours,&minutes,&seconds);
-		snprintf(time_indeterminate_nodata_string,sizeof(time_indeterminate_nodata_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_indeterminate_nodata_string,sizeof(time_indeterminate_nodata_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		get_time_breakdown(time_determinate,&days,&hours,&minutes,&seconds);
-		snprintf(time_determinate_string,sizeof(time_determinate_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(time_determinate_string,sizeof(time_determinate_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		get_time_breakdown(total_time,&days,&hours,&minutes,&seconds);
-		snprintf(total_time_string,sizeof(total_time_string)-1,"%dd %dh %dm %ds",days,hours,minutes,seconds);
+		snprintf(total_time_string,sizeof(total_time_string)-1,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
 
 		if(total_time>0){
 			percent_time_ok=(double)(((double)temp_subject->time_ok*100.0)/(double)total_time);
@@ -4508,57 +4515,57 @@
 		                }
 	                }
 
-		printf("<DIV ALIGN=CENTER CLASS='dataTitle'>Service State Breakdowns:</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataTitle'>サービス稼働状況:</DIV>\n");
 #ifdef USE_TRENDS
 		printf("<p align='center'>\n");
 		printf("<a href='%s?host=%s",TRENDS_CGI,url_encode(host_name));
 		printf("&service=%s&t1=%lu&t2=%lu&includesoftstates=%s&assumestateretention=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedservicestate=%d&backtrack=%d'>",url_encode(svc_description),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_service_state,backtrack_archives);
 		printf("<img src='%s?createimage&smallimage&host=%s",TRENDS_CGI,url_encode(host_name));
-		printf("&service=%s&t1=%lu&t2=%lu&includesoftstates=%s&assumestateretention=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedservicestate=%d&backtrack=%d' border=1 alt='Service State Trends' title='Service State Trends' width='500' height='20'>",url_encode(svc_description),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_service_state,backtrack_archives);
+		printf("&service=%s&t1=%lu&t2=%lu&includesoftstates=%s&assumestateretention=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedservicestate=%d&backtrack=%d' border=1 alt='サービス状態の傾向' title='Service State Trends' width='500' height='20'>",url_encode(svc_description),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_service_state,backtrack_archives);
 		printf("</a><br>\n");
 		printf("</p>\n");
 #endif
 
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>State</TH><TH CLASS='data'>Type / Reason</TH><TH CLASS='data'>Time</TH><TH CLASS='data'>%% Total Time</TH><TH CLASS='data'>%% Known Time</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>状態</TH><TH CLASS='data'>内容</TH><TH CLASS='data'>時間</TH><TH CLASS='data'> 割合</TH><TH CLASS='data'> 認知率</TH></TR>\n");
 
 		/* ok states */
-		printf("<tr CLASS='dataEven'><td CLASS='serviceOK' rowspan=3>OK</td>");
-		printf("<td CLASS='dataEven'>Unscheduled</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'>%2.3f%%</td></tr>\n",time_ok_unscheduled_string,percent_time_ok_unscheduled,percent_time_ok_unscheduled_known);
-		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>Scheduled</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'>%2.3f%%</td></tr>\n",time_ok_scheduled_string,percent_time_ok_scheduled,percent_time_ok_scheduled_known);
-		printf("<tr CLASS='serviceOK'><td CLASS='serviceOK'>Total</td><td CLASS='serviceOK'>%s</td><td CLASS='serviceOK'>%2.3f%%</td><td CLASS='serviceOK'>%2.3f%%</td></tr>\n",time_ok_string,percent_time_ok,percent_time_ok_known);
+		printf("<tr CLASS='dataEven'><td CLASS='serviceOK' rowspan=3>正常<br>(OK)</td>");
+		printf("<td CLASS='dataEven'>非計画</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'>%2.3f%%</td></tr>\n",time_ok_unscheduled_string,percent_time_ok_unscheduled,percent_time_ok_unscheduled_known);
+		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>計画</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'>%2.3f%%</td></tr>\n",time_ok_scheduled_string,percent_time_ok_scheduled,percent_time_ok_scheduled_known);
+		printf("<tr CLASS='serviceOK'><td CLASS='serviceOK'>合計</td><td CLASS='serviceOK'>%s</td><td CLASS='serviceOK'>%2.3f%%</td><td CLASS='serviceOK'>%2.3f%%</td></tr>\n",time_ok_string,percent_time_ok,percent_time_ok_known);
 
 		/* warning states */
-		printf("<tr CLASS='dataOdd'><td CLASS='serviceWARNING' rowspan=3>WARNING</td>");
-		printf("<td CLASS='dataOdd'>Unscheduled</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'>%2.3f%%</td></tr>\n",time_warning_unscheduled_string,percent_time_warning_unscheduled,percent_time_warning_unscheduled_known);
-		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>Scheduled</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'>%2.3f%%</td></tr>\n",time_warning_scheduled_string,percent_time_warning_scheduled,percent_time_warning_scheduled_known);
-		printf("<tr CLASS='serviceWARNING'><td CLASS='serviceWARNING'>Total</td><td CLASS='serviceWARNING'>%s</td><td CLASS='serviceWARNING'>%2.3f%%</td><td CLASS='serviceWARNING'>%2.3f%%</td></tr>\n",time_warning_string,percent_time_warning,percent_time_warning_known);
+		printf("<tr CLASS='dataOdd'><td CLASS='serviceWARNING' rowspan=3>警告<BR>(WARNING)</td>");
+		printf("<td CLASS='dataOdd'>非計画</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'>%2.3f%%</td></tr>\n",time_warning_unscheduled_string,percent_time_warning_unscheduled,percent_time_warning_unscheduled_known);
+		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>計画</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'>%2.3f%%</td></tr>\n",time_warning_scheduled_string,percent_time_warning_scheduled,percent_time_warning_scheduled_known);
+		printf("<tr CLASS='serviceWARNING'><td CLASS='serviceWARNING'>合計</td><td CLASS='serviceWARNING'>%s</td><td CLASS='serviceWARNING'>%2.3f%%</td><td CLASS='serviceWARNING'>%2.3f%%</td></tr>\n",time_warning_string,percent_time_warning,percent_time_warning_known);
 
 		/* unknown states */
-		printf("<tr CLASS='dataEven'><td CLASS='serviceUNKNOWN' rowspan=3>UNKNOWN</td>");
-		printf("<td CLASS='dataEven'>Unscheduled</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'>%2.3f%%</td></tr>\n",time_unknown_unscheduled_string,percent_time_unknown_unscheduled,percent_time_unknown_unscheduled_known);
-		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>Scheduled</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'>%2.3f%%</td></tr>\n",time_unknown_scheduled_string,percent_time_unknown_scheduled,percent_time_unknown_scheduled_known);
-		printf("<tr CLASS='serviceUNKNOWN'><td CLASS='serviceUNKNOWN'>Total</td><td CLASS='serviceUNKNOWN'>%s</td><td CLASS='serviceUNKNOWN'>%2.3f%%</td><td CLASS='serviceUNKNOWN'>%2.3f%%</td></tr>\n",time_unknown_string,percent_time_unknown,percent_time_unknown_known);
+		printf("<tr CLASS='dataEven'><td CLASS='serviceUNKNOWN' rowspan=3>不明<br>(UNKNOWN)</td>");
+		printf("<td CLASS='dataEven'>非計画</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'>%2.3f%%</td></tr>\n",time_unknown_unscheduled_string,percent_time_unknown_unscheduled,percent_time_unknown_unscheduled_known);
+		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>計画</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'>%2.3f%%</td></tr>\n",time_unknown_scheduled_string,percent_time_unknown_scheduled,percent_time_unknown_scheduled_known);
+		printf("<tr CLASS='serviceUNKNOWN'><td CLASS='serviceUNKNOWN'>合計</td><td CLASS='serviceUNKNOWN'>%s</td><td CLASS='serviceUNKNOWN'>%2.3f%%</td><td CLASS='serviceUNKNOWN'>%2.3f%%</td></tr>\n",time_unknown_string,percent_time_unknown,percent_time_unknown_known);
 
 		/* critical states */
-		printf("<tr CLASS='dataOdd'><td CLASS='serviceCRITICAL' rowspan=3>CRITICAL</td>");
-		printf("<td CLASS='dataOdd'>Unscheduled</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'>%2.3f%%</td></tr>\n",time_critical_unscheduled_string,percent_time_critical_unscheduled,percent_time_critical_unscheduled_known);
-		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>Scheduled</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'>%2.3f%%</td></tr>\n",time_critical_scheduled_string,percent_time_critical_scheduled,percent_time_critical_scheduled_known);
-		printf("<tr CLASS='serviceCRITICAL'><td CLASS='serviceCRITICAL'>Total</td><td CLASS='serviceCRITICAL'>%s</td><td CLASS='serviceCRITICAL'>%2.3f%%</td><td CLASS='serviceCRITICAL'>%2.3f%%</td></tr>\n",time_critical_string,percent_time_critical,percent_time_critical_known);
+		printf("<tr CLASS='dataOdd'><td CLASS='serviceCRITICAL' rowspan=3>異常<br>(CRITICAL)</td>");
+		printf("<td CLASS='dataOdd'>非計画</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'>%2.3f%%</td></tr>\n",time_critical_unscheduled_string,percent_time_critical_unscheduled,percent_time_critical_unscheduled_known);
+		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>計画</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>%2.3f%%</td><td CLASS='dataOdd'>%2.3f%%</td></tr>\n",time_critical_scheduled_string,percent_time_critical_scheduled,percent_time_critical_scheduled_known);
+		printf("<tr CLASS='serviceCRITICAL'><td CLASS='serviceCRITICAL'>合計</td><td CLASS='serviceCRITICAL'>%s</td><td CLASS='serviceCRITICAL'>%2.3f%%</td><td CLASS='serviceCRITICAL'>%2.3f%%</td></tr>\n",time_critical_string,percent_time_critical,percent_time_critical_known);
 
 
-		printf("<tr CLASS='dataEven'><td CLASS='dataEven' rowspan=3>Undetermined</td>");
+		printf("<tr CLASS='dataEven'><td CLASS='dataEven' rowspan=3>未確定<BR>(UNDETERMINED)</td>");
 		/*
-		printf("<td CLASS='dataEven'>Unscheduled</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'></td></tr>\n",time_indeterminate_unscheduled_string,percent_time_indeterminate_unscheduled);
-		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>Scheduled</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'></td></tr>\n",time_indeterminate_scheduled_string,percent_time_indeterminate_scheduled);
+		printf("<td CLASS='dataEven'>非計画</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'></td></tr>\n",time_indeterminate_unscheduled_string,percent_time_indeterminate_unscheduled);
+		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>計画</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'></td></tr>\n",time_indeterminate_scheduled_string,percent_time_indeterminate_scheduled);
 		*/
-		printf("<td CLASS='dataEven'>Nagios Not Running</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'></td></tr>\n",time_indeterminate_notrunning_string,percent_time_indeterminate_notrunning);
-		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>Insufficient Data</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'></td></tr>\n",time_indeterminate_nodata_string,percent_time_indeterminate_nodata);
-		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>Total</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'></td></tr>\n",time_indeterminate_string,percent_time_indeterminate);
+		printf("<td CLASS='dataEven'>Nagios未稼働</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'></td></tr>\n",time_indeterminate_notrunning_string,percent_time_indeterminate_notrunning);
+		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>データ不足</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'></td></tr>\n",time_indeterminate_nodata_string,percent_time_indeterminate_nodata);
+		printf("<tr CLASS='dataEven'><td CLASS='dataEven'>合計</td><td CLASS='dataEven'>%s</td><td CLASS='dataEven'>%2.3f%%</td><td CLASS='dataEven'></td></tr>\n",time_indeterminate_string,percent_time_indeterminate);
 
 		printf("<tr><td colspan=3></td></tr>\n");
-		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>All</td><td CLASS='dataOdd'>Total</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>100.000%%</td><td CLASS='dataOdd'>100.000%%</td></tr>\n",total_time_string);
+		printf("<tr CLASS='dataOdd'><td CLASS='dataOdd'>すべて</td><td CLASS='dataOdd'>合計</td><td CLASS='dataOdd'>%s</td><td CLASS='dataOdd'>100.000%%</td><td CLASS='dataOdd'>100.000%%</td></tr>\n",total_time_string);
 		printf("</table>\n");
 		printf("</DIV>\n");
 
@@ -4572,11 +4579,11 @@
 
 		if(output_format==HTML_OUTPUT){
 
-			printf("<DIV ALIGN=CENTER CLASS='dataTitle'>Service State Breakdowns:</DIV>\n");
+			printf("<DIV ALIGN=CENTER CLASS='dataTitle'>サービス稼働状況:</DIV>\n");
 
 			printf("<DIV ALIGN=CENTER>\n");
 			printf("<TABLE BORDER=0 CLASS='data'>\n");
-			printf("<TR><TH CLASS='data'>Host</TH><TH CLASS='data'>Service</TH><TH CLASS='data'>%% Time OK</TH><TH CLASS='data'>%% Time Warning</TH><TH CLASS='data'>%% Time Unknown</TH><TH CLASS='data'>%% Time Critical</TH><TH CLASS='data'>%% Time Undetermined</TH></TR>\n");
+			printf("<TR><TH CLASS='data'>ホスト名</TH><TH CLASS='data'>サービス名</TH><TH CLASS='data'> 稼働率<BR>(OK)</TH><TH CLASS='data'> 警告率<BR>(WARNING)</TH><TH CLASS='data'> 不明率<BR>(UNKNOWN)</TH><TH CLASS='data'> 障害率<BR>(CRITICAL)</TH><TH CLASS='data'> 不確定<BR>(UNDETERMINED)率</TH></TR>\n");
 		        }
 		else if(output_format==CSV_OUTPUT){
 			printf("HOST_NAME, SERVICE_DESCRIPTION,");
@@ -4743,7 +4750,7 @@
 				odd=1;
 				bgclass="Even";
       	                        }
-			printf("<tr CLASS='data%s'><td CLASS='data%s' colspan='2'>Average</td><td CLASS='serviceOK'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceWARNING'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceUNKNOWN'>%2.3f%% (%2.3f%%)</td><td class='serviceCRITICAL'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>\n",bgclass,bgclass,average_percent_time_ok,average_percent_time_ok_known,average_percent_time_warning,average_percent_time_warning_known,average_percent_time_unknown,average_percent_time_unknown_known,average_percent_time_critical,average_percent_time_critical_known,bgclass,average_percent_time_indeterminate);
+			printf("<tr CLASS='data%s'><td CLASS='data%s' colspan='2'>平均値</td><td CLASS='serviceOK'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceWARNING'>%2.3f%% (%2.3f%%)</td><td CLASS='serviceUNKNOWN'>%2.3f%% (%2.3f%%)</td><td class='serviceCRITICAL'>%2.3f%% (%2.3f%%)</td><td class='data%s'>%2.3f%%</td></tr>\n",bgclass,bgclass,average_percent_time_ok,average_percent_time_ok_known,average_percent_time_warning,average_percent_time_warning_known,average_percent_time_unknown,average_percent_time_unknown_known,average_percent_time_critical,average_percent_time_critical_known,bgclass,average_percent_time_indeterminate);
 
 			printf("</table>\n");
 			printf("</DIV>\n");
@@ -4853,7 +4860,7 @@
 				start=max(temp_timerange->range_start,temp_start);
 				end=min(temp_timerange->range_end,temp_end);
 #ifdef DEBUG
-				printf("<li>Matching in timerange[%d]: %d -> %d (%ld -> %ld) %d -> %d = %ld<br>\n",weekday,temp_timerange->range_start,temp_timerange->range_end,temp_start,temp_end,start,end,end-start);
+				printf("<li>一致した期間[%d]: %d -> %d (%ld -> %ld) %d -> %d = %ld<br>\n",weekday,temp_timerange->range_start,temp_timerange->range_end,temp_start,temp_end,start,end,end-start);
 #endif
 				if(end>start)
 					temp_duration += end-start;
diff -urN nagios-3.2.3.orig/cgi/cgiutils.c nagios-3.2.3/cgi/cgiutils.c
--- nagios-3.2.3.orig/cgi/cgiutils.c	2010-12-12 00:47:55.000000000 +0900
+++ nagios-3.2.3/cgi/cgiutils.c	2010-12-12 19:59:07.000000000 +0900
@@ -144,6 +144,7 @@
 #endif
 #endif
 
+char            ttf_file[MAX_FILENAME_LENGTH];
 
 
 
@@ -206,6 +207,8 @@
 	my_strtok_buffer=NULL;
 	original_my_strtok_buffer=NULL;
 
+	strcpy(ttf_file,"");
+
 	return;
         }
 
@@ -427,6 +430,12 @@
 
 		else if(!strcmp(var,"use_ssl_authentication"))
 			use_ssl_authentication=(atoi(val)>0)?TRUE:FALSE;
+
+		else if(!strcmp(var,"ttf_file")){
+			strncpy(ttf_file,val,sizeof(ttf_file));
+			ttf_file[sizeof(ttf_file)-1]='\x0';
+			strip(ttf_file);
+				}
  	        }
 
 	/* free memory and close the file */
@@ -894,6 +903,7 @@
 	int month=0;
 	int day=0;
 	int year=0;
+	char *weekdays_mb[7]={"日","月","火","水","木","金","土"};
 	char *weekdays[7]={"Sun","Mon","Tue","Wed","Thu","Fri","Sat"};
 	char *months[12]={"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"};
 	char *tzone="";
@@ -923,7 +933,7 @@
 
 	/* ctime() style */
 	if(type==LONG_DATE_TIME)
-		snprintf(buffer,buffer_length,"%s %s %d %02d:%02d:%02d %s %d",weekdays[tm_ptr->tm_wday],months[tm_ptr->tm_mon],day,hour,minute,second,tzone,year);
+		snprintf(buffer,buffer_length,"%d年%d月%d日(%s) %02d:%02d:%02d",year,tm_ptr->tm_mon+1,day,weekdays_mb[tm_ptr->tm_wday],hour,minute,second);
 
 	/* short style */
 	else if(type==SHORT_DATE_TIME){
@@ -1043,7 +1053,7 @@
 	minutes=(int)total_seconds/60;
 	total_seconds%=60;
 	seconds=(int)total_seconds;
-	snprintf(buffer,buffer_length,"%dh %dm %ds",hours,minutes,seconds);
+	snprintf(buffer,buffer_length,"%d時間と %d分 %d秒",hours,minutes,seconds);
 	buffer[buffer_length-1]='\x0';
 
 	return;
@@ -1128,10 +1138,11 @@
 	}
 
 
+
 #ifdef REMOVED_10182007
 /* my wrapper for free() */
 int my_free(void **ptr){
-
+ 
 	if(ptr==NULL)
 		return ERROR;
 
@@ -1480,7 +1491,31 @@
 					}
 				}
 		        }
-
+        /*****  UTF-8 MultiByte *****/
+        // 2 Byte charactor
+        else if( ( (unsigned char)input[x] >= 0xC0 && (unsigned char)input[x] <= 0xDF ) && ( (unsigned char)input[x+1] >= 0x80 && (unsigned char)input[x+1] <= 0xBF ) ){
+            encoded_html_string[y++]=input[x++];
+            encoded_html_string[y++]=input[x];
+        }
+        // 3 Byte charactor(BOM) : 0xEF 0xBB 0xBF
+        else if ( ( (unsigned char)input[x] == 0xEF ) && ( (unsigned char)input[x+1] == 0xBB ) && ( (unsigned char)input[x+2] == 0xBF ) ){
+            encoded_html_string[y++]=input[x++];
+            encoded_html_string[y++]=input[x++];
+            encoded_html_string[y++]=input[x];
+        }
+        // 3 Byte charactor
+        else if ( ( (unsigned char)input[x] >= 0xE0 ) && ( (unsigned char)input[x] <= 0xEF ) && ( (unsigned char)input[x+1] >= 0x80 ) && ( (unsigned char)input[x+1] <= 0xBF ) && ( (unsigned char)input[x+2] >= 0x80 ) && ( (unsigned char)input[x+2] <= 0xBF ) ){
+            encoded_html_string[y++]=input[x++];
+            encoded_html_string[y++]=input[x++];
+            encoded_html_string[y++]=input[x];
+        }
+        // 4 Byte charactor
+        else if ( ( (unsigned char)input[x] >= 0xF0 ) && ( (unsigned char)input[x] <= 0xF7 ) && ( (unsigned char)input[x+1] >= 0x80 ) && ( (unsigned char)input[x+1] <= 0xBF ) && ( (unsigned char)input[x+2] >= 0x80 ) && ( (unsigned char)input[x+2] <= 0xBF ) && ( (unsigned char)input[x+3] >= 0x80 ) && ( (unsigned char)input[x+3] <= 0xBF ) ){
+            encoded_html_string[y++]=input[x++];
+            encoded_html_string[y++]=input[x++];
+            encoded_html_string[y++]=input[x++];
+            encoded_html_string[y++]=input[x];
+        }
 		/* for simplicity, all other chars represented by their numeric value */
 		else{
 			if(escape_html_tags==FALSE)
@@ -1750,27 +1785,28 @@
 	time(&current_time);
 	get_time_string(&current_time,date_time,(int)sizeof(date_time),LONG_DATE_TIME);
 
-	printf("Last Updated: %s<BR>\n",date_time);
+	printf("最終更新: %s<BR>\n",date_time);
 	if(refresh==TRUE)
-		printf("Updated every %d seconds<br>\n",refresh_rate);
-
-	printf("Nagios&reg; Core&trade; %s - <A HREF='http://www.nagios.org' TARGET='_new' CLASS='homepageURL'>www.nagios.org</A><BR>\n",PROGRAM_VERSION);
+		printf("更新間隔：%d秒毎<br>\n",refresh_rate);
 
 	if(current_authdata!=NULL)
-		printf("Logged in as <i>%s</i><BR>\n",(!strcmp(current_authdata->username,""))?"?":current_authdata->username);
+		printf("ログイン名: <i>%s</i><BR>\n",(!strcmp(current_authdata->username,""))?"?":current_authdata->username);
+
+	printf("<BR>\n");
+	printf("Nagios&reg; %s - <A HREF='http://www.nagios.org' TARGET='_new' CLASS='homepageURL'>www.nagios.org</A><BR>\n",PROGRAM_VERSION);
 
 	if(nagios_process_state!=STATE_OK)
-		printf("<DIV CLASS='infoBoxBadProcStatus'>Warning: Monitoring process may not be running!<BR>Click <A HREF='%s?type=%d'>here</A> for more info.</DIV>",EXTINFO_CGI,DISPLAY_PROCESS_INFO);
+		printf("<DIV CLASS='infoBoxBadProcStatus'>警告: 監視プロセスが稼働してないようです。<br><A HREF='%s?type=%d'>ここ</A>をクリックして確認してください。</DIV>",EXTINFO_CGI,DISPLAY_PROCESS_INFO);
 
 	if(result==ERROR)
-		printf("<DIV CLASS='infoBoxBadProcStatus'>Warning: Could not read program status information!</DIV>");
+		printf("<DIV CLASS='infoBoxBadProcStatus'>警告: プログラムのステータス情報が読み込めません。</DIV>");
 
 	else{
 		if(enable_notifications==FALSE)
-			printf("<DIV CLASS='infoBoxBadProcStatus'>- Notifications are disabled</DIV>");
+			printf("<DIV CLASS='infoBoxBadProcStatus'>- 通知機能は無効になっています。</DIV>");
 
 		if(execute_service_checks==FALSE)
-			printf("<DIV CLASS='infoBoxBadProcStatus'>- Service checks are disabled</DIV>");
+			printf("<DIV CLASS='infoBoxBadProcStatus'>- サービスチェックは無効になっています。</DIV>");
 	        }
 
 	printf("</TD></TR>\n");
@@ -1791,24 +1827,24 @@
 		printf("<tr>\n");
 		printf("<td align=center valign=center CLASS='navBoxItem'>\n");
 		if(archive==0){
-			printf("Latest Archive<br>");
-			printf("<a href='%sarchive=1'><img src='%s%s' border=0 alt='Latest Archive' title='Latest Archive'></a>",url,url_images_path,LEFT_ARROW_ICON);
+			printf("過去ログ<br>");
+			printf("<a href='%sarchive=1'><img src='%s%s' border=0 alt='過去ログ' title='過去ログ'></a>",url,url_images_path,LEFT_ARROW_ICON);
 		        }
 		else{
-			printf("Earlier Archive<br>");
-			printf("<a href='%sarchive=%d'><img src='%s%s' border=0 alt='Earlier Archive' title='Earlier Archive'></a>",url,archive+1,url_images_path,LEFT_ARROW_ICON);
+			printf("過去ログ<br>");
+			printf("<a href='%sarchive=%d'><img src='%s%s' border=0 alt='過去ログ' title='過去ログ'></a>",url,archive+1,url_images_path,LEFT_ARROW_ICON);
 		        }
 		printf("</td>\n");
 
 		printf("<td width=15></td>\n");
 
 		printf("<td align=center CLASS='navBoxDate'>\n");
-		printf("<DIV CLASS='navBoxTitle'>Log File Navigation</DIV>\n");
+		printf("<DIV CLASS='navBoxTitle'>ログファイルナビ</DIV>\n");
 		get_time_string(&last_scheduled_log_rotation,date_time,(int)sizeof(date_time),LONG_DATE_TIME);
 		printf("%s",date_time);
-		printf("<br>to<br>");
+		printf("<br>から<br>");
 		if(archive==0)
-			printf("Present..");
+			printf("現在...");
 		else{
 			get_time_string(&this_scheduled_log_rotation,date_time,(int)sizeof(date_time),LONG_DATE_TIME);
 			printf("%s",date_time);
@@ -1820,12 +1856,12 @@
 
 			printf("<td align=center valign=center CLASS='navBoxItem'>\n");
 			if(archive==1){
-				printf("Current Log<br>");
-				printf("<a href='%s'><img src='%s%s' border=0 alt='Current Log' title='Current Log'></a>",url,url_images_path,RIGHT_ARROW_ICON);
+				printf("現在のログ<br>");
+				printf("<a href='%s'><img src='%s%s' border=0 alt='現在のログ' title='現在のログ'></a>",url,url_images_path,RIGHT_ARROW_ICON);
 			        }
 			else{
-				printf("More Recent Archive<br>");
-				printf("<a href='%sarchive=%d'><img src='%s%s' border=0 alt='More Recent Archive' title='More Recent Archive'></a>",url,archive-1,url_images_path,RIGHT_ARROW_ICON);
+				printf("最近の過去ログ<br>");
+				printf("<a href='%sarchive=%d'><img src='%s%s' border=0 alt='最近の過去ログ' title='最近の過去ログ'></a>",url,archive-1,url_images_path,RIGHT_ARROW_ICON);
 			        }
 			printf("</td>\n");
 		        }
@@ -1846,7 +1882,7 @@
 		archive_basename=strrchr((char *)&archive_file,'/')+1;
 
 	/* now it's safe to print the filename */
-	printf("<BR><DIV CLASS='navBoxFile'>File: %s</DIV>\n",archive_basename);
+	printf("<BR><DIV CLASS='navBoxFile'>ファイル: %s</DIV>\n",archive_basename);
 
 	return;
         }
@@ -2022,10 +2058,10 @@
 		case EFAULT: /* Bad address. */
 		case ENOMEM: /* Out of memory (i.e. kernel memory). */
 		case ENAMETOOLONG: /* File name too long. */
-			printf("<br /> A stat call returned %d while looking for the file %s.<br />", errno, filename);
+			printf("<br /> -%d: %s のファイル名が長すぎます<br />", errno, filename);
 			return;
 		case EACCES: /* Permission denied. -- The file should be accessible by nagios. */
-			printf("<br /> A stat call returned a permissions error(%d) while looking for the file %s.<br />", errno, filename);
+			printf("<br /> -%d: %s のパーミッションが正しくありません。<br />", errno, filename);
 			return;
 		case ENOENT: /* A component of the path file_name does not exist, or the path is an empty string. Just return if the file doesn't exist. */
 			return;
@@ -2051,25 +2087,25 @@
 /* displays an error if CGI config file could not be read */
 void cgi_config_file_error(char *config_file){
 
-	printf("<H1>Whoops!</H1>\n");
+	printf("<H1>エラーが発生しました。</H1>\n");
 
-	printf("<P><STRONG><FONT COLOR='RED'>Error: Could not open CGI config file '%s' for reading!</FONT></STRONG></P>\n",config_file);
+	printf("<P><STRONG><FONT COLOR='RED'>エラー: CGI設定ファイル '%s' が読めません</FONT></STRONG></P>\n",config_file);
 
 	printf("<P>\n");
-	printf("Here are some things you should check in order to resolve this error:\n");
+	printf("この問題を解決するためにチェックする項目:\n");
 	printf("</P>\n");
 
 	printf("<P>\n");
 	printf("<OL>\n");
 
-	printf("<LI>Make sure you've installed a CGI config file in its proper location.  See the error message about for details on where the CGI is expecting to find the configuration file.  A sample CGI configuration file (named <b>cgi.cfg</b>) can be found in the <b>sample-config/</b> subdirectory of the Nagios source code distribution.\n");
-	printf("<LI>Make sure the user your web server is running as has permission to read the CGI config file.\n");
+	printf("<LI>NagiosのCGI設定ファイルが正しい位置にあるか確認してください。CGIがどこに設定ファイルがあると想定しているか確認するために詳細のエラーメッセージを見てください。サンプルのCGI設定ファイル(<b>cgi.cfg</b>)はNagiosのソースディレクトリ内の<b>sample-config/</b>サブディレクトリにあります。\n");
+	printf("<LI>WebサーバがNagiosのCGI設定ファイルを読むことが出来るようになっているかパーミッションを確認してください。\n");
 
 	printf("</OL>\n");
 	printf("</P>\n");
 
 	printf("<P>\n");
-	printf("Make sure you read the documentation on installing and configuring Nagios thoroughly before continuing.  If all else fails, try sending a message to one of the mailing lists.  More information can be found at <a href='http://www.nagios.org'>http://www.nagios.org</a>.\n");
+	printf("作業を続ける前に徹底的にNagiosのドキュメントの\"Installing and configuration\"を読んでください。もし熟読してもわからない場合、メーリングリストを活用してみてください。詳しい情報は<a href='http://www.nagios.org'>http://www.nagios.org</a>へどうぞ。\n");
 	printf("</P>\n");
 
 	return;
@@ -2080,25 +2116,25 @@
 /* displays an error if main config file could not be read */
 void main_config_file_error(char *config_file){
 
-	printf("<H1>Whoops!</H1>\n");
+	printf("<H1>エラーが発生しました。</H1>\n");
 
-	printf("<P><STRONG><FONT COLOR='RED'>Error: Could not open main config file '%s' for reading!</FONT></STRONG></P>\n",config_file);
+	printf("<P><STRONG><FONT COLOR='RED'>エラー: 設定ファイル'%s' が読み込めません</FONT></STRONG></P>\n",config_file);
 
 	printf("<P>\n");
-	printf("Here are some things you should check in order to resolve this error:\n");
+	printf("この問題を解決するためにチェックする項目:\n");
 	printf("</P>\n");
 
 	printf("<P>\n");
 	printf("<OL>\n");
 
-	printf("<LI>Make sure you've installed a main config file in its proper location.  See the error message about for details on where the CGI is expecting to find the configuration file.  A sample main configuration file (named <b>nagios.cfg</b>) can be found in the <b>sample-config/</b> subdirectory of the Nagios source code distribution.\n");
-	printf("<LI>Make sure the user your web server is running as has permission to read the main config file.\n");
+	printf("<LI>メインの設定ファイルが正しい位置にあるか確認してください。CGIがどこに設定ファイルがあると想定しているか確認するために詳細のエラーメッセージを見てください。サンプルのCGIコンフィグファイル(<b>nagiso.cfg</b>)はNagiosのソースディレクトリ内の<b>sample-config/</b>サブディレクトリにありますよ。\n");
+	printf("<LI>Webサーバが設定ファイルを読むことが出来るようになっているかパーミッションを確認してください。\n");
 
 	printf("</OL>\n");
 	printf("</P>\n");
 
 	printf("<P>\n");
-	printf("Make sure you read the documentation on installing and configuring Nagios thoroughly before continuing.  If all else fails, try sending a message to one of the mailing lists.  More information can be found at <a href='http://www.nagios.org'>http://www.nagios.org</a>.\n");
+	printf("作業を続ける前に徹底的にNagiosのドキュメントの\"Installing and configuration\"を読んでください。もし熟読してもわからない場合、メーリングリストを活用してみてください。詳しい情報は<a href='http://www.nagios.org'>http://www.nagios.org</a>へどうぞ。\n");
 	printf("</P>\n");
 
 	return;
@@ -2108,25 +2144,25 @@
 /* displays an error if object data could not be read */
 void object_data_error(void){
 
-	printf("<H1>Whoops!</H1>\n");
+	printf("<H1>エラーが発生しました。</H1>\n");
 
-	printf("<P><STRONG><FONT COLOR='RED'>Error: Could not read object configuration data!</FONT></STRONG></P>\n");
+	printf("<P><STRONG><FONT COLOR='RED'>エラー: オブジェクト設定ファイルが読み込めません</FONT></STRONG></P>\n");
 
 	printf("<P>\n");
-	printf("Here are some things you should check in order to resolve this error:\n");
+	printf("この問題を解決するためにチェックする項目:\n");
 	printf("</P>\n");
 
 	printf("<P>\n");
 	printf("<OL>\n");
 
-	printf("<LI>Verify configuration options using the <b>-v</b> command-line option to check for errors.\n");
-	printf("<LI>Check the Nagios log file for messages relating to startup or status data errors.\n");
+	printf("<LI>設定内容が正しいかどうかコマンドライン上で<b>-v</b>オプションをつけてコマンドを実行して確認してください。(例:nagios -v nagios.config\n");
+	printf("<LI>Nagiosのログファイルを見て何がエラーを起こしてるのかチェックしてください。\n");
 
 	printf("</OL>\n");
 	printf("</P>\n");
 
 	printf("<P>\n");
-	printf("Make sure you read the documentation on installing, configuring and running Nagios thoroughly before continuing.  If all else fails, try sending a message to one of the mailing lists.  More information can be found at <a href='http://www.nagios.org'>http://www.nagios.org</a>.\n");
+	printf("作業を続ける前に徹底的にNagiosのドキュメントの\"Installing and configuration\"を読んでください。もし熟読してもわからない場合、メーリングリストを活用してみてください。詳しい情報は<a href='http://www.nagios.org'>http://www.nagios.org</a>へどうぞ。\n");
 	printf("</P>\n");
 
 	return;
@@ -2136,29 +2172,29 @@
 /* displays an error if status data could not be read */
 void status_data_error(void){
 
-	printf("<H1>Whoops!</H1>\n");
+	printf("<H1>エラーが発生しました。</H1>\n");
 
-	printf("<P><STRONG><FONT COLOR='RED'>Error: Could not read host and service status information!</FONT></STRONG></P>\n");
+	printf("<P><STRONG><FONT COLOR='RED'>エラー: ホストとサービス稼動状況の情報が読み込めません</FONT></STRONG></P>\n");
 
 	printf("<P>\n");
-	printf("The most common cause of this error message (especially for new users), is the fact that Nagios is not actually running.  If Nagios is indeed not running, this is a normal error message.  It simply indicates that the CGIs could not obtain the current status of hosts and services that are being monitored.  If you've just installed things, make sure you read the documentation on starting Nagios.\n");
+	printf("<P>このエラーが表示される最大の原因は正しくNagiosが稼動していないことが考えられます。もしNagiosが実際には動いてない場合、このメッセージは特に意味を持たない単なるエラーになります。これは単純にCGIがホストやサービスの状態をモニタリングできていないことになります。これを解決するにはNagiosのドキュメントの\"starting Nagios\"セクションを熟読してください。\n");
 	printf("</P>\n");
 
 	printf("<P>\n");
-	printf("Some other things you should check in order to resolve this error include:\n");
+	printf("このエラーを回避するためにチェックする箇所は:\n");
 	printf("</P>\n");
 
 	printf("<P>\n");
 	printf("<OL>\n");
 
-	printf("<LI>Check the Nagios log file for messages relating to startup or status data errors.\n");
-	printf("<LI>Always verify configuration options using the <b>-v</b> command-line option before starting or restarting Nagios!\n");
+	printf("<LI>Nagiosのログファイルを見てNagios起動時、もしくはステータスデータ取得時のエラーを確認してください。\n");
+	printf("<LI>起動前にコマンドオプション<b>-v</b>(e.g., nagios -v nagios.cfg)を付けて設定ファイルの記述に誤りがないか確認してください。\n");
 
 	printf("</OL>\n");
 	printf("</P>\n");
 
 	printf("<P>\n");
-	printf("Make sure you read the documentation on installing, configuring and running Nagios thoroughly before continuing.  If all else fails, try sending a message to one of the mailing lists.  More information can be found at <a href='http://www.nagios.org'>http://www.nagios.org</a>.\n");
+	printf("作業を続ける前に徹底的にNagiosのドキュメントの\"Installing and configuration\"を読んでください。もし熟読してもわからない場合、メーリングリストを活用してみてください。詳しい情報は<a href='http://www.nagios.org'>http://www.nagios.org</a>へどうぞ。\n");
 	printf("</P>\n");
 
 	return;
diff -urN nagios-3.2.3.orig/cgi/cmd.c nagios-3.2.3/cgi/cmd.c
--- nagios-3.2.3.orig/cgi/cmd.c	2010-12-12 00:47:55.000000000 +0900
+++ nagios-3.2.3/cgi/cmd.c	2010-12-12 19:59:07.000000000 +0900
@@ -131,7 +131,7 @@
 	if(result==ERROR){
 		document_header(FALSE);
 		if(content_type==WML_CONTENT)
-			printf("<p>Error: Could not open CGI config file!</p>\n");
+			printf("エラー: CGI設定ファイルが開けませんでした。</p>\n");
 		else
 			cgi_config_file_error(get_cgi_config_location());
 		document_footer();
@@ -143,7 +143,7 @@
 	if(result==ERROR){
 		document_header(FALSE);
 		if(content_type==WML_CONTENT)
-			printf("<p>Error: Could not open main config file!</p>\n");
+			printf("エラー: メインの設定ファイルが開けませんでした。</p>\n");
 		else
 			main_config_file_error(main_config_file);
 		document_footer();
@@ -163,7 +163,7 @@
 	if(result==ERROR){
 		document_header(FALSE);
 		if(content_type==WML_CONTENT)
-			printf("<p>Error: Could not read object config data!</p>\n");
+			printf("エラー: オブジェクトデータが読み取り出来ませんでした。</p>\n");
 		else
 			object_data_error();
 		document_footer();
@@ -183,7 +183,7 @@
 
 		/* left column of the first row */
 		printf("<td align=left valign=top width=33%%>\n");
-		display_info_table("External Command Interface",FALSE,&current_authdata);
+		display_info_table("外部コマンドインターフェース",FALSE,&current_authdata);
 		printf("</td>\n");
 
 		/* center column of the first row */
@@ -211,7 +211,7 @@
 		if(content_type==WML_CONTENT)
 			printf("<p>Error: No command specified!</p>\n");
 		else
-			printf("<P><DIV CLASS='errorMessage'>Error: No command was specified</DIV></P>\n");
+			printf("<P><DIV CLASS='errorMessage'>エラー: コマンドが選択されていません。</DIV></P>\n");
                 }
 
 	/* if this is the first request for a command, present option */
@@ -244,7 +244,7 @@
 
 		printf("<wml>\n");
 
-		printf("<card id='card1' title='Command Results'>\n");
+		printf("<card id='card1' title='コマンド結果'>\n");
 	        }
 
 	else{
@@ -254,8 +254,9 @@
 		printf("<html>\n");
 		printf("<head>\n");
 		printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
+		printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
 		printf("<title>\n");
-		printf("External Command Interface\n");
+		printf("外部コマンドインターフェース\n");
 		printf("</title>\n");
 
 		if(use_stylesheet==TRUE){
@@ -665,259 +666,259 @@
 		comment_author=current_authdata.username;
 
 
-	printf("<P><DIV ALIGN=CENTER CLASS='cmdType'>You are requesting to ");
+	printf("<P><DIV ALIGN=CENTER CLASS='cmdType'>リクエストしたコマンド:");
 
 	switch(cmd){
 
 	case CMD_ADD_HOST_COMMENT:
 	case CMD_ADD_SVC_COMMENT:
-		printf("add a %s comment",(cmd==CMD_ADD_HOST_COMMENT)?"host":"service");
+		printf(" %sにコメントを追加する",(cmd==CMD_ADD_HOST_COMMENT)?"ホスト":"サービス");
 		break;
 
 	case CMD_DEL_HOST_COMMENT:
 	case CMD_DEL_SVC_COMMENT:
-		printf("delete a %s comment",(cmd==CMD_DEL_HOST_COMMENT)?"host":"service");
+		printf("%sのコメントを削除する",(cmd==CMD_DEL_HOST_COMMENT)?"ホスト":"サービス");
 		break;
 		
 	case CMD_DELAY_HOST_NOTIFICATION:
 	case CMD_DELAY_SVC_NOTIFICATION:
-		printf("delay a %s notification",(cmd==CMD_DELAY_HOST_NOTIFICATION)?"host":"service");
+		printf("%sの通知を遅らせる",(cmd==CMD_DELAY_HOST_NOTIFICATION)?"ホスト":"サービス");
 		break;
 
 	case CMD_SCHEDULE_SVC_CHECK:
-		printf("schedule a service check");
+		printf("次回のサービスチェックを再スケジュール");
 		break;
 
 	case CMD_ENABLE_SVC_CHECK:
 	case CMD_DISABLE_SVC_CHECK:
-		printf("%s active checks of a particular service",(cmd==CMD_ENABLE_SVC_CHECK)?"enable":"disable");
+		printf("指定したサービスチェックを%sにする",(cmd==CMD_ENABLE_SVC_CHECK)?"有効":"無効");
 		break;
 		
 	case CMD_ENABLE_NOTIFICATIONS:
 	case CMD_DISABLE_NOTIFICATIONS:
-		printf("%s notifications",(cmd==CMD_ENABLE_NOTIFICATIONS)?"enable":"disable");
+		printf("通知を%sにする",(cmd==CMD_ENABLE_NOTIFICATIONS)?"有効":"無効");
 		break;
 		
 	case CMD_SHUTDOWN_PROCESS:
 	case CMD_RESTART_PROCESS:
-		printf("%s the Nagios process",(cmd==CMD_SHUTDOWN_PROCESS)?"shutdown":"restart");
+		printf("Nagiosの%s",(cmd==CMD_SHUTDOWN_PROCESS)?"停止":"再起動");
 		break;
 
 	case CMD_ENABLE_HOST_SVC_CHECKS:
 	case CMD_DISABLE_HOST_SVC_CHECKS:
-		printf("%s active checks of all services on a host",(cmd==CMD_ENABLE_HOST_SVC_CHECKS)?"enable":"disable");
+		printf("ホストの全サービスを%sにする",(cmd==CMD_ENABLE_HOST_SVC_CHECKS)?"有効":"無効");
 		break;
 
 	case CMD_SCHEDULE_HOST_SVC_CHECKS:
-		printf("schedule a check of all services for a host");
+		printf("ホストの全てのサービスチェックを遅らせる");
 		break;
 
 	case CMD_DEL_ALL_HOST_COMMENTS:
 	case CMD_DEL_ALL_SVC_COMMENTS:
-		printf("delete all comments for a %s",(cmd==CMD_DEL_ALL_HOST_COMMENTS)?"host":"service");
+		printf("%sの全てのコメントを削除する",(cmd==CMD_DEL_ALL_HOST_COMMENTS)?"ホスト":"サービス");
 		break;
 
 	case CMD_ENABLE_SVC_NOTIFICATIONS:
 	case CMD_DISABLE_SVC_NOTIFICATIONS:
-		printf("%s notifications for a service",(cmd==CMD_ENABLE_SVC_NOTIFICATIONS)?"enable":"disable");
+		printf("サービスの通知を%sにする",(cmd==CMD_ENABLE_SVC_NOTIFICATIONS)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_HOST_NOTIFICATIONS:
 	case CMD_DISABLE_HOST_NOTIFICATIONS:
-		printf("%s notifications for a host",(cmd==CMD_ENABLE_HOST_NOTIFICATIONS)?"enable":"disable");
+		printf("ホストの通知を%sにする",(cmd==CMD_ENABLE_HOST_NOTIFICATIONS)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_ALL_NOTIFICATIONS_BEYOND_HOST:
 	case CMD_DISABLE_ALL_NOTIFICATIONS_BEYOND_HOST:
-		printf("%s notifications for all hosts and services beyond a host",(cmd==CMD_ENABLE_ALL_NOTIFICATIONS_BEYOND_HOST)?"enable":"disable");
+		printf("ホストの向こう側にある全ホストとサービスの通知を%sにする",(cmd==CMD_ENABLE_ALL_NOTIFICATIONS_BEYOND_HOST)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_HOST_SVC_NOTIFICATIONS:
 	case CMD_DISABLE_HOST_SVC_NOTIFICATIONS:
-		printf("%s notifications for all services on a host",(cmd==CMD_ENABLE_HOST_SVC_NOTIFICATIONS)?"enable":"disable");
+		printf("ホスト上の全サービスの通知を%sにする",(cmd==CMD_ENABLE_HOST_SVC_NOTIFICATIONS)?"有効":"無効");
 		break;
 
 	case CMD_ACKNOWLEDGE_HOST_PROBLEM:
 	case CMD_ACKNOWLEDGE_SVC_PROBLEM:
-		printf("acknowledge a %s problem",(cmd==CMD_ACKNOWLEDGE_HOST_PROBLEM)?"host":"service");
+		printf("%sの問題を既知にする",(cmd==CMD_ACKNOWLEDGE_HOST_PROBLEM)?"ホスト":"サービス");
 		break;
 
 	case CMD_START_EXECUTING_SVC_CHECKS:
 	case CMD_STOP_EXECUTING_SVC_CHECKS:
-		printf("%s executing active service checks",(cmd==CMD_START_EXECUTING_SVC_CHECKS)?"start":"stop");
+		printf("サービスチェックを%sする",(cmd==CMD_START_EXECUTING_SVC_CHECKS)?"開始":"停止");
 		break;
 
 	case CMD_START_ACCEPTING_PASSIVE_SVC_CHECKS:
 	case CMD_STOP_ACCEPTING_PASSIVE_SVC_CHECKS:
-		printf("%s accepting passive service checks",(cmd==CMD_START_ACCEPTING_PASSIVE_SVC_CHECKS)?"start":"stop");
+		printf("パッシブサービスチェックを%sする",(cmd==CMD_START_ACCEPTING_PASSIVE_SVC_CHECKS)?"開始":"停止");
 		break;
 
 	case CMD_ENABLE_PASSIVE_SVC_CHECKS:
 	case CMD_DISABLE_PASSIVE_SVC_CHECKS:
-		printf("%s accepting passive service checks for a particular service",(cmd==CMD_ENABLE_PASSIVE_SVC_CHECKS)?"start":"stop");
+		printf("指定したサービスのパッシブチェックを%sする",(cmd==CMD_ENABLE_PASSIVE_SVC_CHECKS)?"開始":"停止");
 		break;
 
 	case CMD_ENABLE_EVENT_HANDLERS:
 	case CMD_DISABLE_EVENT_HANDLERS:
-		printf("%s event handlers",(cmd==CMD_ENABLE_EVENT_HANDLERS)?"enable":"disable");
+		printf("イベントハンドラを%sにする",(cmd==CMD_ENABLE_EVENT_HANDLERS)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_HOST_EVENT_HANDLER:
 	case CMD_DISABLE_HOST_EVENT_HANDLER:
-		printf("%s the event handler for a particular host",(cmd==CMD_ENABLE_HOST_EVENT_HANDLER)?"enable":"disable");
+		printf("指定したホストのイベントハンドラを%sにする",(cmd==CMD_ENABLE_HOST_EVENT_HANDLER)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_SVC_EVENT_HANDLER:
 	case CMD_DISABLE_SVC_EVENT_HANDLER:
-		printf("%s the event handler for a particular service",(cmd==CMD_ENABLE_SVC_EVENT_HANDLER)?"enable":"disable");
+		printf("指定したサービスのイベントハンドラを%sにする",(cmd==CMD_ENABLE_SVC_EVENT_HANDLER)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_HOST_CHECK:
 	case CMD_DISABLE_HOST_CHECK:
-		printf("%s active checks of a particular host",(cmd==CMD_ENABLE_HOST_CHECK)?"enable":"disable");
+		printf("ホストチェックを%sにする",(cmd==CMD_ENABLE_HOST_CHECK)?"有効":"無効");
 		break;
 
 	case CMD_STOP_OBSESSING_OVER_SVC_CHECKS:
 	case CMD_START_OBSESSING_OVER_SVC_CHECKS:
-		printf("%s obsessing over service checks",(cmd==CMD_STOP_OBSESSING_OVER_SVC_CHECKS)?"stop":"start");
+		printf("Obsessing Overサービスチェックを%sする",(cmd==CMD_STOP_OBSESSING_OVER_SVC_CHECKS)?"停止":"開始");
 		break;
 
 	case CMD_REMOVE_HOST_ACKNOWLEDGEMENT:
 	case CMD_REMOVE_SVC_ACKNOWLEDGEMENT:
-		printf("remove a %s acknowledgement",(cmd==CMD_REMOVE_HOST_ACKNOWLEDGEMENT)?"host":"service");
+		printf("%sの既知の問題を削除する",(cmd==CMD_REMOVE_HOST_ACKNOWLEDGEMENT)?"ホスト":"サービス");
 		break;
 
 	case CMD_SCHEDULE_HOST_DOWNTIME:
 	case CMD_SCHEDULE_SVC_DOWNTIME:
-		printf("schedule downtime for a particular %s",(cmd==CMD_SCHEDULE_HOST_DOWNTIME)?"host":"service");
+		printf("%sのダウンタイムをスケジュールに追加する",(cmd==CMD_SCHEDULE_HOST_DOWNTIME)?"ホスト":"サービス");
 		break;
 
 	case CMD_SCHEDULE_HOST_SVC_DOWNTIME:
-		printf("schedule downtime for all services for a particular host");
+		printf("ホストの全サービスのダウンタイムをスケジュールに追加する");
 		break;
 
 	case CMD_PROCESS_HOST_CHECK_RESULT:
 	case CMD_PROCESS_SERVICE_CHECK_RESULT:
-		printf("submit a passive check result for a particular %s",(cmd==CMD_PROCESS_HOST_CHECK_RESULT)?"host":"service");
+		printf("指定した%sのパッシブチェックの結果を登録する",(cmd==CMD_PROCESS_HOST_CHECK_RESULT)?"ホスト":"サービス");
 		break;
 
 	case CMD_ENABLE_HOST_FLAP_DETECTION:
 	case CMD_DISABLE_HOST_FLAP_DETECTION:
-		printf("%s flap detection for a particular host",(cmd==CMD_ENABLE_HOST_FLAP_DETECTION)?"enable":"disable");
+		printf("ホストのフラップ検知を%sにする",(cmd==CMD_ENABLE_HOST_FLAP_DETECTION)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_SVC_FLAP_DETECTION:
 	case CMD_DISABLE_SVC_FLAP_DETECTION:
-		printf("%s flap detection for a particular service",(cmd==CMD_ENABLE_SVC_FLAP_DETECTION)?"enable":"disable");
+		printf("サービスのフラップ検知を%sにする",(cmd==CMD_ENABLE_SVC_FLAP_DETECTION)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_FLAP_DETECTION:
 	case CMD_DISABLE_FLAP_DETECTION:
-		printf("%s flap detection for hosts and services",(cmd==CMD_ENABLE_FLAP_DETECTION)?"enable":"disable");
+		printf("ホストとサービスのフラップ検知を%sにする",(cmd==CMD_ENABLE_FLAP_DETECTION)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_HOSTGROUP_SVC_NOTIFICATIONS:
 	case CMD_DISABLE_HOSTGROUP_SVC_NOTIFICATIONS:
-		printf("%s notifications for all services in a particular hostgroup",(cmd==CMD_ENABLE_HOSTGROUP_SVC_NOTIFICATIONS)?"enable":"disable");
+		printf("指定したホストグループ上の全サービスの通知を%sにする",(cmd==CMD_ENABLE_HOSTGROUP_SVC_NOTIFICATIONS)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_HOSTGROUP_HOST_NOTIFICATIONS:
 	case CMD_DISABLE_HOSTGROUP_HOST_NOTIFICATIONS:
-		printf("%s notifications for all hosts in a particular hostgroup",(cmd==CMD_ENABLE_HOSTGROUP_HOST_NOTIFICATIONS)?"enable":"disable");
+		printf("指定したホストグループ上の全ホストの通知を%sにする",(cmd==CMD_ENABLE_HOSTGROUP_HOST_NOTIFICATIONS)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_HOSTGROUP_SVC_CHECKS:
 	case CMD_DISABLE_HOSTGROUP_SVC_CHECKS:
-		printf("%s active checks of all services in a particular hostgroup",(cmd==CMD_ENABLE_HOSTGROUP_SVC_CHECKS)?"enable":"disable");
+		printf("指定したホストグループ上の全てのサービスチェックを%sにする",(cmd==CMD_ENABLE_HOSTGROUP_SVC_CHECKS)?"有効":"無効");
 		break;
 
 	case CMD_DEL_HOST_DOWNTIME:
 	case CMD_DEL_SVC_DOWNTIME:
-		printf("cancel scheduled downtime for a particular %s",(cmd==CMD_DEL_HOST_DOWNTIME)?"host":"service");
+		printf("%sのダウンタイムをキャンセルする",(cmd==CMD_DEL_HOST_DOWNTIME)?"ホスト":"サービス");
 		break;
 
 	case CMD_ENABLE_FAILURE_PREDICTION:
 	case CMD_DISABLE_FAILURE_PREDICTION:
-		printf("%s failure prediction for hosts and service",(cmd==CMD_ENABLE_FAILURE_PREDICTION)?"enable":"disable");
+		printf("ホストとサービスの予測機能を%sにする",(cmd==CMD_ENABLE_FAILURE_PREDICTION)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_PERFORMANCE_DATA:
 	case CMD_DISABLE_PERFORMANCE_DATA:
-		printf("%s performance data processing for hosts and services",(cmd==CMD_ENABLE_PERFORMANCE_DATA)?"enable":"disable");
+		printf("ホストとサービスのパフォーマンスデータを%sにする",(cmd==CMD_ENABLE_PERFORMANCE_DATA)?"有効":"無効");
 		break;
 
 	case CMD_SCHEDULE_HOSTGROUP_HOST_DOWNTIME:
-		printf("schedule downtime for all hosts in a particular hostgroup");
+		printf("指定したホストグループ上のホストのダウンタイムをスケジュールに追加する");
 		break;
 
 	case CMD_SCHEDULE_HOSTGROUP_SVC_DOWNTIME:
-		printf("schedule downtime for all services in a particular hostgroup");
+		printf("指定したホストグループ上のサービスのダウンタイムをスケジュールに追加する");
 		break;
 
 	case CMD_START_EXECUTING_HOST_CHECKS:
 	case CMD_STOP_EXECUTING_HOST_CHECKS:
-		printf("%s executing host checks",(cmd==CMD_START_EXECUTING_HOST_CHECKS)?"start":"stop");
+		printf("ホストチェックを%sする",(cmd==CMD_START_EXECUTING_HOST_CHECKS)?"開始":"停止");
 		break;
 
 	case CMD_START_ACCEPTING_PASSIVE_HOST_CHECKS:
 	case CMD_STOP_ACCEPTING_PASSIVE_HOST_CHECKS:
-		printf("%s accepting passive host checks",(cmd==CMD_START_ACCEPTING_PASSIVE_HOST_CHECKS)?"start":"stop");
+		printf("パッシブホストのチェックを%sする",(cmd==CMD_START_ACCEPTING_PASSIVE_HOST_CHECKS)?"開始":"停止");
 		break;
 
 	case CMD_ENABLE_PASSIVE_HOST_CHECKS:
 	case CMD_DISABLE_PASSIVE_HOST_CHECKS:
-		printf("%s accepting passive checks for a particular host",(cmd==CMD_ENABLE_PASSIVE_HOST_CHECKS)?"start":"stop");
+		printf("指定したホストのパッシブチェックを%sする",(cmd==CMD_ENABLE_PASSIVE_HOST_CHECKS)?"開始":"停止");
 		break;
 
 	case CMD_START_OBSESSING_OVER_HOST_CHECKS:
 	case CMD_STOP_OBSESSING_OVER_HOST_CHECKS:
-		printf("%s obsessing over host checks",(cmd==CMD_START_OBSESSING_OVER_HOST_CHECKS)?"start":"stop");
+		printf("Obsessing Overホストのチェックを%sする",(cmd==CMD_START_OBSESSING_OVER_HOST_CHECKS)?"開始":"停止");
 		break;
 
 	case CMD_SCHEDULE_HOST_CHECK:
-		printf("schedule a host check");
+		printf("ホストチェックをスケジュールに追加する");
 		break;
 
 	case CMD_START_OBSESSING_OVER_SVC:
 	case CMD_STOP_OBSESSING_OVER_SVC:
-		printf("%s obsessing over a particular service",(cmd==CMD_START_OBSESSING_OVER_SVC)?"start":"stop");
+		printf("指定したサービスのObsessing Overを%sする",(cmd==CMD_START_OBSESSING_OVER_SVC)?"開始":"停止");
 		break;
 
 	case CMD_START_OBSESSING_OVER_HOST:
 	case CMD_STOP_OBSESSING_OVER_HOST:
-		printf("%s obsessing over a particular host",(cmd==CMD_START_OBSESSING_OVER_HOST)?"start":"stop");
+		printf("指定したホストのObsessing Overを%sする",(cmd==CMD_START_OBSESSING_OVER_HOST)?"開始":"停止");
 		break;
 
 	case CMD_ENABLE_SERVICEGROUP_SVC_NOTIFICATIONS:
 	case CMD_DISABLE_SERVICEGROUP_SVC_NOTIFICATIONS:
-		printf("%s notifications for all services in a particular servicegroup",(cmd==CMD_ENABLE_SERVICEGROUP_SVC_NOTIFICATIONS)?"enable":"disable");
+		printf("指定したサービスグループ上の全サービスの通知を%sにする",(cmd==CMD_ENABLE_SERVICEGROUP_SVC_NOTIFICATIONS)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_SERVICEGROUP_HOST_NOTIFICATIONS:
 	case CMD_DISABLE_SERVICEGROUP_HOST_NOTIFICATIONS:
-		printf("%s notifications for all hosts in a particular servicegroup",(cmd==CMD_ENABLE_SERVICEGROUP_HOST_NOTIFICATIONS)?"enable":"disable");
+		printf("指定したサービスグループ上の全ホストの通知を%sにする",(cmd==CMD_ENABLE_SERVICEGROUP_HOST_NOTIFICATIONS)?"有効":"無効");
 		break;
 
 	case CMD_ENABLE_SERVICEGROUP_SVC_CHECKS:
 	case CMD_DISABLE_SERVICEGROUP_SVC_CHECKS:
-		printf("%s active checks of all services in a particular servicegroup",(cmd==CMD_ENABLE_SERVICEGROUP_SVC_CHECKS)?"enable":"disable");
+		printf("指定したサービスグループ上の全てのサービスチェックを%sにする",(cmd==CMD_ENABLE_SERVICEGROUP_SVC_CHECKS)?"有効":"無効");
 		break;
 
 	case CMD_SCHEDULE_SERVICEGROUP_HOST_DOWNTIME:
-		printf("schedule downtime for all hosts in a particular servicegroup");
+		printf("指定したサービスグループ上のホストのダウンタイムをスケジュールに追加する");
 		break;
 
 	case CMD_SCHEDULE_SERVICEGROUP_SVC_DOWNTIME:
-		printf("schedule downtime for all services in a particular servicegroup");
+		printf("指定したサービスグループ上のサービスのダウンタイムをスケジュールに追加する");
 		break;
 
 	case CMD_SEND_CUSTOM_HOST_NOTIFICATION:
 	case CMD_SEND_CUSTOM_SVC_NOTIFICATION:
-		printf("send a custom %s notification",(cmd==CMD_SEND_CUSTOM_HOST_NOTIFICATION)?"host":"service");
+		printf("\"%s\"へ今すぐ通知する",(cmd==CMD_SEND_CUSTOM_HOST_NOTIFICATION)?"host":"service");
 		break;
 
 	default:
-		printf("execute an unknown command.  Shame on you!</DIV>");
+		printf("不明なコマンドを実行しました。</DIV>");
 		return;
 	        }
 
@@ -930,7 +931,7 @@
 	printf("<tr>\n");
 	printf("<td align=center valign=top>\n");
 
-	printf("<DIV ALIGN=CENTER CLASS='optBoxTitle'>Command Options</DIV>\n");
+	printf("<DIV ALIGN=CENTER CLASS='optBoxTitle'>コマンドオプション</DIV>\n");
 
 	printf("<TABLE CELLSPACING=0 CELLPADDING=0 BORDER=1 CLASS='optBox'>\n");
 	printf("<TR><TD CLASS='optBoxItem'>\n");
@@ -943,77 +944,77 @@
 
 	case CMD_ADD_HOST_COMMENT:
 	case CMD_ACKNOWLEDGE_HOST_PROBLEM:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Host Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ホスト名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='host' VALUE='%s'>",escape_string(host_name));
 		printf("</b></td></tr>\n");
 		if(cmd==CMD_ACKNOWLEDGE_HOST_PROBLEM){
-			printf("<tr><td CLASS='optBoxItem'>Sticky Acknowledgement:</td><td><b>");
+			printf("<tr><td CLASS='optBoxItem'>スティッキー:</td><td><b>");
 			printf("<INPUT TYPE='checkbox' NAME='sticky_ack'>");
 			printf("</b></td></tr>\n");
-			printf("<tr><td CLASS='optBoxItem'>Send Notification:</td><td><b>");
+			printf("<tr><td CLASS='optBoxItem'>警報を通知:</td><td><b>");
 			printf("<INPUT TYPE='checkbox' NAME='send_notification' CHECKED>");
 			printf("</b></td></tr>\n");
 		        }
-		printf("<tr><td CLASS='optBoxItem'>Persistent%s:</td><td><b>",(cmd==CMD_ACKNOWLEDGE_HOST_PROBLEM)?" Comment":"");
+		printf("<tr><td CLASS='optBoxItem'>再起動後も%s保持させる:</td><td><b>",(cmd==CMD_ACKNOWLEDGE_HOST_PROBLEM)?" Comment":"");
 		printf("<INPUT TYPE='checkbox' NAME='persistent' %s>",(cmd==CMD_ACKNOWLEDGE_HOST_PROBLEM)?"":"CHECKED");
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Author (Your Name):</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>作成者:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='com_author' VALUE='%s' %s>",escape_string(comment_author),(lock_author_names==TRUE)?"READONLY DISABLED":"");
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Comment:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>コメント:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='com_data' VALUE='%s' SIZE=40>",escape_string(comment_data));
 		printf("</b></td></tr>\n");
 		break;
 		
 	case CMD_ADD_SVC_COMMENT:
 	case CMD_ACKNOWLEDGE_SVC_PROBLEM:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Host Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ホスト名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='host' VALUE='%s'>",escape_string(host_name));
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Service:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>サービス名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='service' VALUE='%s'>",escape_string(service_desc));
 		if(cmd==CMD_ACKNOWLEDGE_SVC_PROBLEM){
-			printf("<tr><td CLASS='optBoxItem'>Sticky Acknowledgement:</td><td><b>");
+			printf("<tr><td CLASS='optBoxItem'>スティッキー:</td><td><b>");
 			printf("<INPUT TYPE='checkbox' NAME='sticky_ack'>");
 			printf("</b></td></tr>\n");
-			printf("<tr><td CLASS='optBoxItem'>Send Notification:</td><td><b>");
+			printf("<tr><td CLASS='optBoxItem'>警報を通知:</td><td><b>");
 			printf("<INPUT TYPE='checkbox' NAME='send_notification' CHECKED>");
 			printf("</b></td></tr>\n");
 		        }
-		printf("<tr><td CLASS='optBoxItem'>Persistent%s:</td><td><b>",(cmd==CMD_ACKNOWLEDGE_SVC_PROBLEM)?" Comment":"");
+		printf("<tr><td CLASS='optBoxItem'>再起動後も%s保持させる:</td><td><b>",(cmd==CMD_ACKNOWLEDGE_SVC_PROBLEM)?" Comment":"");
 		printf("<INPUT TYPE='checkbox' NAME='persistent' %s",(cmd==CMD_ACKNOWLEDGE_SVC_PROBLEM)?"":"CHECKED");
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Author (Your Name):</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>作成者:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='com_author' VALUE='%s' %s>",escape_string(comment_author),(lock_author_names==TRUE)?"READONLY DISABLED":"");
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Comment:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>コメント:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='com_data' VALUE='%s' SIZE=40>",escape_string(comment_data));
 		printf("</b></td></tr>\n");
 		break;
 
 	case CMD_DEL_HOST_COMMENT:
 	case CMD_DEL_SVC_COMMENT:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Comment ID:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>コメントID:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='com_id' VALUE='%lu'>",comment_id);
 		printf("</b></td></tr>\n");
 		break;
 		
 	case CMD_DELAY_HOST_NOTIFICATION:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Host Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ホスト名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='host' VALUE='%s'>",escape_string(host_name));
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Notification Delay (minutes from now):</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>通知を遅らせる時間(現在からの分数):</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='not_dly' VALUE='%d'>",notification_delay);
 		printf("</b></td></tr>\n");
 		break;
 
 	case CMD_DELAY_SVC_NOTIFICATION:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Host Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ホスト名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='host' VALUE='%s'>",escape_string(host_name));
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Service:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>サービス名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='service' VALUE='%s'>",escape_string(service_desc));
-		printf("<tr><td CLASS='optBoxRequiredItem'>Notification Delay (minutes from now):</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>通知を遅らせる時間(現在からの分数):</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='not_dly' VALUE='%d'>",notification_delay);
 		printf("</b></td></tr>\n");
 		break;
@@ -1021,20 +1022,20 @@
 	case CMD_SCHEDULE_SVC_CHECK:
 	case CMD_SCHEDULE_HOST_CHECK:
 	case CMD_SCHEDULE_HOST_SVC_CHECKS:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Host Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ホスト名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='host' VALUE='%s'>",escape_string(host_name));
 		printf("</b></td></tr>\n");
 		if(cmd==CMD_SCHEDULE_SVC_CHECK){
-			printf("<tr><td CLASS='optBoxRequiredItem'>Service:</td><td><b>");
+			printf("<tr><td CLASS='optBoxRequiredItem'>サービス名:</td><td><b>");
 			printf("<INPUT TYPE='TEXT' NAME='service' VALUE='%s'>",escape_string(service_desc));
 			printf("</b></td></tr>\n");
 		        }
 		time(&t);
 		get_time_string(&t,buffer,sizeof(buffer)-1,SHORT_DATE_TIME);
-		printf("<tr><td CLASS='optBoxRequiredItem'>Check Time:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>チェック時刻:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='start_time' VALUE='%s'>",buffer);
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxItem'>Force Check:</td><td><b>");
+		printf("<tr><td CLASS='optBoxItem'>強制的にチェック:</td><td><b>");
 		printf("<INPUT TYPE='checkbox' NAME='force_check' %s>",(force_check==TRUE)?"CHECKED":"");
 		printf("</b></td></tr>\n");
 		break;
@@ -1053,10 +1054,10 @@
 	case CMD_DISABLE_SVC_FLAP_DETECTION:
 	case CMD_START_OBSESSING_OVER_SVC:
 	case CMD_STOP_OBSESSING_OVER_SVC:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Host Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ホスト名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='host' VALUE='%s'>",escape_string(host_name));
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Service:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>サービス名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='service' VALUE='%s'>",escape_string(service_desc));
 		printf("</b></td></tr>\n");
 		break;
@@ -1081,16 +1082,16 @@
 	case CMD_DISABLE_PASSIVE_HOST_CHECKS:
 	case CMD_START_OBSESSING_OVER_HOST:
 	case CMD_STOP_OBSESSING_OVER_HOST:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Host Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ホスト名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='host' VALUE='%s'>",escape_string(host_name));
 		printf("</b></td></tr>\n");
 		if(cmd==CMD_ENABLE_HOST_SVC_CHECKS || cmd==CMD_DISABLE_HOST_SVC_CHECKS || cmd==CMD_ENABLE_HOST_SVC_NOTIFICATIONS || cmd==CMD_DISABLE_HOST_SVC_NOTIFICATIONS){
-			printf("<tr><td CLASS='optBoxItem'>%s For Host Too:</td><td><b>",(cmd==CMD_ENABLE_HOST_SVC_CHECKS || cmd==CMD_ENABLE_HOST_SVC_NOTIFICATIONS)?"Enable":"Disable");
+			printf("<tr><td CLASS='optBoxItem'>同時にホストも%sにする:</td><td><b>",(cmd==CMD_ENABLE_HOST_SVC_CHECKS || cmd==CMD_ENABLE_HOST_SVC_NOTIFICATIONS)?"有効":"無効");
 			printf("<INPUT TYPE='checkbox' NAME='ahas'>");
 			printf("</b></td></tr>\n");
 		        }
 		if(cmd==CMD_ENABLE_HOST_NOTIFICATIONS || cmd==CMD_DISABLE_HOST_NOTIFICATIONS){
-			printf("<tr><td CLASS='optBoxItem'>%s Notifications For Child Hosts Too:</td><td><b>",(cmd==CMD_ENABLE_HOST_NOTIFICATIONS)?"Enable":"Disable");
+			printf("<tr><td CLASS='optBoxItem'>同時に子ホストへの通知も%sにする:</td><td><b>",(cmd==CMD_ENABLE_HOST_NOTIFICATIONS)?"有効":"無効");
 			printf("<INPUT TYPE='checkbox' NAME='ptc'>");
 			printf("</b></td></tr>\n");
 		        }
@@ -1120,20 +1121,20 @@
 	case CMD_STOP_ACCEPTING_PASSIVE_HOST_CHECKS:
 	case CMD_START_OBSESSING_OVER_HOST_CHECKS:
 	case CMD_STOP_OBSESSING_OVER_HOST_CHECKS:
-		printf("<tr><td CLASS='optBoxItem' colspan=2>There are no options for this command.<br>Click the 'Commit' button to submit the command.</td></tr>");
+		printf("<tr><td CLASS='optBoxItem' colspan=2>このコマンドにはオプションはありません。<BR>'発行'ボタンを押してコマンドを送信してください</td></tr>");
 		break;
 		
 	case CMD_PROCESS_HOST_CHECK_RESULT:
 	case CMD_PROCESS_SERVICE_CHECK_RESULT:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Host Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ホスト名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='host' VALUE='%s'>",escape_string(host_name));
 		printf("</b></td></tr>\n");
 		if(cmd==CMD_PROCESS_SERVICE_CHECK_RESULT){
-			printf("<tr><td CLASS='optBoxRequiredItem'>Service:</td><td><b>");
+			printf("<tr><td CLASS='optBoxRequiredItem'>サービス:</td><td><b>");
 			printf("<INPUT TYPE='TEXT' NAME='service' VALUE='%s'>",escape_string(service_desc));
 			printf("</b></td></tr>\n");
 		        }
-		printf("<tr><td CLASS='optBoxRequiredItem'>Check Result:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>チェック結果:</td><td><b>");
 		printf("<SELECT NAME='plugin_state'>");
 		if(cmd==CMD_PROCESS_SERVICE_CHECK_RESULT){
 			printf("<OPTION VALUE=%d SELECTED>OK\n",STATE_OK);
@@ -1148,10 +1149,10 @@
 		        }
 		printf("</SELECT>\n");
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Check Output:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>チェック出力:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='plugin_output' VALUE=''>");
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxItem'>Performance Data:</td><td><b>");
+		printf("<tr><td CLASS='optBoxItem'>パフォーマンスデータ:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='performance_data' VALUE=''>");
 		printf("</b></td></tr>\n");
 		break;
@@ -1160,23 +1161,23 @@
 	case CMD_SCHEDULE_HOST_SVC_DOWNTIME:
 	case CMD_SCHEDULE_SVC_DOWNTIME:
 
-		printf("<tr><td CLASS='optBoxRequiredItem'>Host Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ホスト名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='host' VALUE='%s'>",escape_string(host_name));
 		printf("</b></td></tr>\n");
 		if(cmd==CMD_SCHEDULE_SVC_DOWNTIME){
-			printf("<tr><td CLASS='optBoxRequiredItem'>Service:</td><td><b>");
+			printf("<tr><td CLASS='optBoxRequiredItem'>サービス:</td><td><b>");
 			printf("<INPUT TYPE='TEXT' NAME='service' VALUE='%s'>",escape_string(service_desc));
 		        }
-		printf("<tr><td CLASS='optBoxRequiredItem'>Author (Your Name):</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>作成者:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='com_author' VALUE='%s' %s>",escape_string(comment_author),(lock_author_names==TRUE)?"READONLY DISABLED":"");
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Comment:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>コメント:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='com_data' VALUE='%s' SIZE=40>",escape_string(comment_data));
 		printf("</b></td></tr>\n");
 
 		printf("<tr><td CLASS='optBoxItem'><br></td></tr>\n");
 
-		printf("<tr><td CLASS='optBoxItem'>Triggered By:</td><td>\n");
+		printf("<tr><td CLASS='optBoxItem'>トリガー:</td><td>\n");
 		printf("<select name='trigger'>\n");
 		printf("<option value='0'>N/A\n");
 
@@ -1202,38 +1203,38 @@
 
 		time(&t);
 		get_time_string(&t,buffer,sizeof(buffer)-1,SHORT_DATE_TIME);
-		printf("<tr><td CLASS='optBoxRequiredItem'>Start Time:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>開始時刻:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='start_time' VALUE='%s'>",buffer);
 		printf("</b></td></tr>\n");
 		t+=(unsigned long)7200;
 		get_time_string(&t,buffer,sizeof(buffer)-1,SHORT_DATE_TIME);
-		printf("<tr><td CLASS='optBoxRequiredItem'>End Time:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>終了時刻:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='end_time' VALUE='%s'>",buffer);
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxItem'>Type:</td><td><b>");
+		printf("<tr><td CLASS='optBoxItem'>種類:</td><td><b>");
 		printf("<SELECT NAME='fixed'>");
-		printf("<OPTION VALUE=1>Fixed\n");
-		printf("<OPTION VALUE=0>Flexible\n");
+		printf("<OPTION VALUE=1>固定\n");
+		printf("<OPTION VALUE=0>フレキシブル\n");
 		printf("</SELECT>\n");
 		printf("</b></td></tr>\n");
 
-		printf("<tr><td CLASS='optBoxItem'>If Flexible, Duration:</td><td>");
+		printf("<tr><td CLASS='optBoxItem'>期間(「フレキシブル」を選択した場合のみ):</td><td>");
 		printf("<table border=0><tr>\n");
 		printf("<td align=right><INPUT TYPE='TEXT' NAME='hours' VALUE='2' SIZE=2 MAXLENGTH=2></td>\n");
-		printf("<td align=left>Hours</td>\n");
+		printf("<td align=left>時間</td>\n");
 		printf("<td align=right><INPUT TYPE='TEXT' NAME='minutes' VALUE='0' SIZE=2 MAXLENGTH=2></td>\n");
-		printf("<td align=left>Minutes</td>\n");
+		printf("<td align=left>分</td>\n");
 		printf("</tr></table>\n");
 		printf("</td></tr>\n");
 
 		printf("<tr><td CLASS='optBoxItem'><br></td></tr>\n");
 
 		if(cmd==CMD_SCHEDULE_HOST_DOWNTIME){
-			printf("<tr><td CLASS='optBoxItem'>Child Hosts:</td><td><b>");
+			printf("<tr><td CLASS='optBoxItem'>子ホスト:</td><td><b>");
 			printf("<SELECT name='childoptions'>");
-			printf("<option value='0'>Do nothing with child hosts\n");
-			printf("<option value='1'>Schedule triggered downtime for all child hosts\n");
-			printf("<option value='2'>Schedule non-triggered downtime for all child hosts\n");
+			printf("<option value='0'>何もしない\n");
+			printf("<option value='1'>このダウンタイムをトリガとして全ての子ホストにダウンタイムを設定する\n");
+			printf("<option value='2'>このダウンタイムを同じように子ホストに設定する\n");
 			printf("</SELECT>\n");
 			printf("</b></td></tr>\n");
 		        }
@@ -1248,11 +1249,11 @@
 	case CMD_DISABLE_HOSTGROUP_HOST_NOTIFICATIONS:
 	case CMD_ENABLE_HOSTGROUP_SVC_CHECKS:
 	case CMD_DISABLE_HOSTGROUP_SVC_CHECKS:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Hostgroup Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ホストグループ名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='hostgroup' VALUE='%s'>",escape_string(hostgroup_name));
 		printf("</b></td></tr>\n");
 		if(cmd==CMD_ENABLE_HOSTGROUP_SVC_CHECKS || cmd==CMD_DISABLE_HOSTGROUP_SVC_CHECKS || cmd==CMD_ENABLE_HOSTGROUP_SVC_NOTIFICATIONS || cmd==CMD_DISABLE_HOSTGROUP_SVC_NOTIFICATIONS){
-			printf("<tr><td CLASS='optBoxItem'>%s For Hosts Too:</td><td><b>",(cmd==CMD_ENABLE_HOSTGROUP_SVC_CHECKS || cmd==CMD_ENABLE_HOSTGROUP_SVC_NOTIFICATIONS)?"Enable":"Disable");
+			printf("<tr><td CLASS='optBoxItem'>同時にホストも%sにする:</td><td><b>",(cmd==CMD_ENABLE_HOSTGROUP_SVC_CHECKS || cmd==CMD_ENABLE_HOSTGROUP_SVC_NOTIFICATIONS)?"有効":"無効");
 			printf("<INPUT TYPE='checkbox' NAME='ahas'>");
 			printf("</b></td></tr>\n");
 		        }
@@ -1264,11 +1265,11 @@
 	case CMD_DISABLE_SERVICEGROUP_HOST_NOTIFICATIONS:
 	case CMD_ENABLE_SERVICEGROUP_SVC_CHECKS:
 	case CMD_DISABLE_SERVICEGROUP_SVC_CHECKS:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Servicegroup Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>サービスグループ名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='servicegroup' VALUE='%s'>",escape_string(servicegroup_name));
 		printf("</b></td></tr>\n");
 		if(cmd==CMD_ENABLE_SERVICEGROUP_SVC_CHECKS || cmd==CMD_DISABLE_SERVICEGROUP_SVC_CHECKS || cmd==CMD_ENABLE_SERVICEGROUP_SVC_NOTIFICATIONS || cmd==CMD_DISABLE_SERVICEGROUP_SVC_NOTIFICATIONS){
-			printf("<tr><td CLASS='optBoxItem'>%s For Hosts Too:</td><td><b>",(cmd==CMD_ENABLE_SERVICEGROUP_SVC_CHECKS || cmd==CMD_ENABLE_SERVICEGROUP_SVC_NOTIFICATIONS)?"Enable":"Disable");
+			printf("<tr><td CLASS='optBoxItem'>同時にホストも%sにする:</td><td><b>",(cmd==CMD_ENABLE_SERVICEGROUP_SVC_CHECKS || cmd==CMD_ENABLE_SERVICEGROUP_SVC_NOTIFICATIONS)?"有効":"無効");
 			printf("<INPUT TYPE='checkbox' NAME='ahas'>");
 			printf("</b></td></tr>\n");
 		        }
@@ -1276,7 +1277,7 @@
 		
 	case CMD_DEL_HOST_DOWNTIME:
 	case CMD_DEL_SVC_DOWNTIME:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Scheduled Downtime ID:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ダウンタイムID:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='down_id' VALUE='%lu'>",downtime_id);
 		printf("</b></td></tr>\n");
 		break;
@@ -1288,39 +1289,39 @@
 	case CMD_SCHEDULE_SERVICEGROUP_SVC_DOWNTIME:
 
 		if(cmd==CMD_SCHEDULE_HOSTGROUP_HOST_DOWNTIME || cmd==CMD_SCHEDULE_HOSTGROUP_SVC_DOWNTIME){
-			printf("<tr><td CLASS='optBoxRequiredItem'>Hostgroup Name:</td><td><b>");
+			printf("<tr><td CLASS='optBoxRequiredItem'>ホストグループ名:</td><td><b>");
 			printf("<INPUT TYPE='TEXT' NAME='hostgroup' VALUE='%s'>",escape_string(hostgroup_name));
 			printf("</b></td></tr>\n");
 		        }
 		else{
-			printf("<tr><td CLASS='optBoxRequiredItem'>Servicegroup Name:</td><td><b>");
+			printf("<tr><td CLASS='optBoxRequiredItem'>サービスグループ名:</td><td><b>");
 			printf("<INPUT TYPE='TEXT' NAME='servicegroup' VALUE='%s'>",escape_string(servicegroup_name));
 			printf("</b></td></tr>\n");
 		        }
-		printf("<tr><td CLASS='optBoxRequiredItem'>Author (Your Name):</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>作成者:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='com_author' VALUE='%s' %s>",escape_string(comment_author),(lock_author_names==TRUE)?"READONLY DISABLED":"");
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Comment:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>コメント:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='com_data' VALUE='%s' SIZE=40>",escape_string(comment_data));
 		printf("</b></td></tr>\n");
 		time(&t);
 		get_time_string(&t,buffer,sizeof(buffer)-1,SHORT_DATE_TIME);
-		printf("<tr><td CLASS='optBoxRequiredItem'>Start Time:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>開始時刻:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='start_time' VALUE='%s'>",buffer);
 		printf("</b></td></tr>\n");
 		t+=(unsigned long)7200;
 		get_time_string(&t,buffer,sizeof(buffer)-1,SHORT_DATE_TIME);
-		printf("<tr><td CLASS='optBoxRequiredItem'>End Time:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>終了時刻:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='end_time' VALUE='%s'>",buffer);
 		printf("</b></td></tr>\n");
 		printf("<tr><td CLASS='optBoxItem'>Type:</td><td><b>");
 		printf("<SELECT NAME='fixed'>");
-		printf("<OPTION VALUE=1>Fixed\n");
-		printf("<OPTION VALUE=0>Flexible\n");
+		printf("<OPTION VALUE=1>固定\n");
+		printf("<OPTION VALUE=0>フレキシブル\n");
 		printf("</SELECT>\n");
 		printf("</b></td></tr>\n");
 
-		printf("<tr><td CLASS='optBoxItem'>If Flexible, Duration:</td><td>");
+		printf("<tr><td CLASS='optBoxItem'>期間(「フレキシブル」を選択した場合のみ)</td><td>");
 		printf("<table border=0><tr>\n");
 		printf("<td align=right><INPUT TYPE='TEXT' NAME='hours' VALUE='2' SIZE=2 MAXLENGTH=2></td>\n");
 		printf("<td align=left>Hours</td>\n");
@@ -1329,7 +1330,7 @@
 		printf("</tr></table>\n");
 		printf("</td></tr>\n");
 		if(cmd==CMD_SCHEDULE_HOSTGROUP_SVC_DOWNTIME || cmd==CMD_SCHEDULE_SERVICEGROUP_SVC_DOWNTIME){
-			printf("<tr><td CLASS='optBoxItem'>Schedule Downtime For Hosts Too:</td><td><b>");
+			printf("<tr><td CLASS='optBoxItem'>同時にホストもダウンタイムをスケジュールする:</td><td><b>");
 			printf("<INPUT TYPE='checkbox' NAME='ahas'>");
 			printf("</b></td></tr>\n");
 		        }
@@ -1337,39 +1338,39 @@
 
 	case CMD_SEND_CUSTOM_HOST_NOTIFICATION:
 	case CMD_SEND_CUSTOM_SVC_NOTIFICATION:
-		printf("<tr><td CLASS='optBoxRequiredItem'>Host Name:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>ホスト名:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='host' VALUE='%s'>",escape_string(host_name));
 		printf("</b></td></tr>\n");
 
 		if(cmd==CMD_SEND_CUSTOM_SVC_NOTIFICATION){
-			printf("<tr><td CLASS='optBoxRequiredItem'>Service:</td><td><b>");
+			printf("<tr><td CLASS='optBoxRequiredItem'>サービス名:</td><td><b>");
 			printf("<INPUT TYPE='TEXT' NAME='service' VALUE='%s'>",escape_string(service_desc));
 			printf("</b></td></tr>\n");
 			}
 
-		printf("<tr><td CLASS='optBoxItem'>Forced:</td><td><b>");
+		printf("<tr><td CLASS='optBoxItem'>強制的に通知する:</td><td><b>");
 		printf("<INPUT TYPE='checkbox' NAME='force_notification' ");
 		printf("</b></td></tr>\n");
 
-		printf("<tr><td CLASS='optBoxItem'>Broadcast:</td><td><b>");
+		printf("<tr><td CLASS='optBoxItem'>全員に通知する:</td><td><b>");
 		printf("<INPUT TYPE='checkbox' NAME='broadcast_notification' ");
 		printf("</b></td></tr>\n");
 
-		printf("<tr><td CLASS='optBoxRequiredItem'>Author (Your Name):</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>作成者:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='com_author' VALUE='%s' %s>",escape_string(comment_author),(lock_author_names==TRUE)?"READONLY DISABLED":"");
 		printf("</b></td></tr>\n");
-		printf("<tr><td CLASS='optBoxRequiredItem'>Comment:</td><td><b>");
+		printf("<tr><td CLASS='optBoxRequiredItem'>コメント:</td><td><b>");
 		printf("<INPUT TYPE='TEXT' NAME='com_data' VALUE='%s' SIZE=40>",escape_string(comment_data));
 		printf("</b></td></tr>\n");
 		break;
 
 	default:
-		printf("<tr><td CLASS='optBoxItem'>This should not be happening... :-(</td><td></td></tr>\n");
+		printf("<tr><td CLASS='optBoxItem'>何かおかしいです....:-(</td><td></td></tr>\n");
 	        }
 
 
 	printf("<tr><td CLASS='optBoxItem' COLSPAN=2></td></tr>\n");
-	printf("<tr><td CLASS='optBoxItem'></td><td CLASS='optBoxItem'><INPUT TYPE='submit' NAME='btnSubmit' VALUE='Commit'> <INPUT TYPE='reset' VALUE='Reset'></td></tr>\n");
+	printf("<tr><td CLASS='optBoxItem'></td><td CLASS='optBoxItem'><INPUT TYPE='submit' NAME='btnSubmit' VALUE='発行'> <INPUT TYPE='reset' VALUE='リセット'></td></tr>\n");
 
 	printf("</table>\n");
 	printf("</form>\n");	
@@ -1390,7 +1391,7 @@
 	printf("</div>\n");
 	printf("</p>\n");
 
-	printf("<P><DIV CLASS='infoMessage'>Please enter all required information before committing the command.<br>Required fields are marked in red.<br>Failure to supply all required values will result in an error.</DIV></P>");
+	printf("<P><DIV CLASS='infoMessage'>コマンドを発行する前に必須項目(赤色)に入力してください。<br>入力されていない場合エラーになります。</DIV></P>");
 
 	return;
         }
@@ -1427,7 +1428,7 @@
 
 		/* make sure we have author name, and comment data... */
 		if(!strcmp(comment_author,"")){
-			if(!error_string)
+			if(!error_string) 
 				error_string=strdup("Author was not entered");
 			}
 		if(!strcmp(comment_data,"")){
@@ -1450,7 +1451,7 @@
 
 		/* make sure we have author name, and comment data... */
 		if(!strcmp(comment_author,"")){
-			if(!error_string) 
+			if(!error_string)
 				error_string=strdup("Author was not entered");
 			}
 		if(!strcmp(comment_data,"")){
@@ -1815,15 +1816,15 @@
 	/* to be safe, we are going to REQUIRE that the authentication functionality is enabled... */
 	if(use_authentication==FALSE){
 		if(content_type==WML_CONTENT)
-			printf("<p>Error: Authentication is not enabled!</p>\n");
+			printf("<p>エラー: CGIの認証機能が無効になっています。</p>\n");
 		else{
 			printf("<P>\n");
-			printf("<DIV CLASS='errorMessage'>Sorry Dave, I can't let you do that...</DIV><br>");
+			printf("<DIV CLASS='errorMessage'>実行できません。</DIV><br>");
 			printf("<DIV CLASS='errorDescription'>");
-			printf("It seems that you have chosen to not use the authentication functionality of the CGIs.<br><br>");
-			printf("I don't want to be personally responsible for what may happen as a result of allowing unauthorized users to issue commands to Nagios,");
-			printf("so you'll have to disable this safeguard if you are really stubborn and want to invite trouble.<br><br>");
-			printf("<strong>Read the section on CGI authentication in the HTML documentation to learn how you can enable authentication and why you should want to.</strong>\n");
+			printf("CGIの認証機能が無効になっています<br><br>");
+			printf("これは無許可のユーザがNagiosに対してコマンドを使用できてしまうためあまり望ましくありません。");
+			printf("それでもコマンドを使用出来るようにする場合は、Nagiosのセキュリティ機能を削除する必要があります。:-(<br><br>");
+			printf("<strong>HTMLドキュメントの CGI認証機能の項目を熟読してから認証機能の設定を行ってください。</strong>\n");
 			printf("</DIV>\n");
 			printf("</P>\n");
 		        }
@@ -1832,11 +1833,11 @@
 	/* the user is not authorized to issue the given command */
 	else if(authorized==FALSE){
 		if(content_type==WML_CONTENT)
-			printf("<p>Error: You're not authorized to commit that command!</p>\n");
+			printf("<p>エラー: このコマンドを発行する権限がありません。。</p>\n");
 		else{
-			printf("<P><DIV CLASS='errorMessage'>Sorry, but you are not authorized to commit the specified command.</DIV></P>\n");
-			printf("<P><DIV CLASS='errorDescription'>Read the section of the documentation that deals with authentication and authorization in the CGIs for more information.<BR><BR>\n");
-			printf("<A HREF='javascript:window.history.go(-2)'>Return from whence you came</A></DIV></P>\n");
+			printf("<P><DIV CLASS='errorMessage'>このコマンドを発行する権限がありません。</DIV></P>\n");
+			printf("<P><DIV CLASS='errorDescription'>HTMLドキュメントの CGI認証機能の項目を熟読してから認証機能の設定を行ってください。<BR><BR>\n");
+			printf("<A HREF='javascript:window.history.go(-2)'>元のページへ戻る</A></DIV></P>\n");
 		        }
 	        }
 
@@ -1847,19 +1848,19 @@
 		else{
 			printf("<P><DIV CLASS='errorMessage'>%s</DIV></P>\n", error_string);
 			free(error_string);
-			printf("<P><DIV CLASS='errorDescription'>Go <A HREF='javascript:window.history.go(-1)'>back</A> and verify that you entered all required information correctly.<BR>\n");
-			printf("<A HREF='javascript:window.history.go(-2)'>Return from whence you came</A></DIV></P>\n");
+			printf("<P><DIV CLASS='errorDescription'>入力に誤りが無いか<A HREF='javascript:window.history.go(-1)'>戻って</A>確認してください。<BR>\n");
+			printf("<A HREF='javascript:window.history.go(-2)'>元のページへ戻る</A></DIV></P>\n");
 		        }
 	        }
 
 	/* if Nagios isn't checking external commands, don't do anything... */
 	else if(check_external_commands==FALSE){
 		if(content_type==WML_CONTENT)
-			printf("<p>Error: Nagios is not checking external commands!</p>\n");
+			printf("<p>エラー: Nagiosが外部コマンドをチェックできないためコマンド発行できませんでした。</p>\n");
 		else{
-			printf("<P><DIV CLASS='errorMessage'>Sorry, but Nagios is currently not checking for external commands, so your command will not be committed!</DIV></P>\n");
-			printf("<P><DIV CLASS='errorDescription'>Read the documentation for information on how to enable external commands...<BR><BR>\n");
-			printf("<A HREF='javascript:window.history.go(-2)'>Return from whence you came</A></DIV></P>\n");
+			printf("<P><DIV CLASS='errorMessage'>Nagiosが外部コマンドをチェックできないためコマンド発行できませんでした。</DIV></P>\n");
+			printf("<P><DIV CLASS='errorDescription'>外部コマンド使い方についてドキュメントを読んでください。<BR><BR>\n");
+			printf("<A HREF='javascript:window.history.go(-2)'>元のページへ戻る</A></DIV></P>\n");
 		        }
 	        }
 	
@@ -1871,19 +1872,19 @@
 
 		if(result==OK){
 			if(content_type==WML_CONTENT)
-				printf("<p>Your command was submitted sucessfully...</p>\n");
+				printf("<p>コマンドを正常に受け付けました。</p>\n");
 			else{
-				printf("<P><DIV CLASS='infoMessage'>Your command request was successfully submitted to Nagios for processing.<BR><BR>\n");
-				printf("Note: It may take a while before the command is actually processed.<BR><BR>\n");
-				printf("<A HREF='javascript:window.history.go(-2)'>Done</A></DIV></P>");
+				printf("<P><DIV CLASS='infoMessage'>コマンドを正常に受け付けました。<BR><BR>\n");
+				printf("注)コマンドが実行されるまではしばらく時間がかかります。<BR><BR>\n");
+				printf("<A HREF='javascript:window.history.go(-2)'>了解</A></DIV></P>");
 			        }
 		        }
 		else{
 			if(content_type==WML_CONTENT)
-				printf("<p>An error occurred while committing your command!</p>\n");
+				printf("<p>コマンドを処理する際にエラーが発生しました</p>\n");
 			else{
-				printf("<P><DIV CLASS='errorMessage'>An error occurred while attempting to commit your command for processing.<BR><BR>\n");
-				printf("<A HREF='javascript:window.history.go(-2)'>Return from whence you came</A></DIV></P>\n");
+				printf("<P><DIV CLASS='errorMessage'>コマンドを処理する際にエラーが発生しました。<BR><BR>\n");
+				printf("<A HREF='javascript:window.history.go(-2)'>元のページへ戻る</A></DIV></P>\n");
 			        }
 		        }
 	        }
@@ -2257,11 +2258,11 @@
 	if(stat(command_file,&statbuf)){
 
 		if(content_type==WML_CONTENT)
-			printf("<p>Error: Could not stat() external command file!</p>\n");
+			printf("<p>エラー: 外部コマンドファイルをstat()できません。</p>\n");
 		else{
-			printf("<P><DIV CLASS='errorMessage'>Error: Could not stat() command file '%s'!</DIV></P>\n",command_file);
+			printf("<P><DIV CLASS='errorMessage'>エラー: 外部コマンドファイル'%s'をstat()できません。</DIV></P>\n",command_file);
 			printf("<P><DIV CLASS='errorDescription'>");
-			printf("The external command file may be missing, Nagios may not be running, and/or Nagios may not be checking external commands.\n");
+			printf("外部コマンドファイルが無いようです。Nagiosが動いてないか、Nagiosが外部コマンドをチェックできない状態の可能性があります。\n");
 			printf("</DIV></P>\n");
 			}
 
@@ -2273,11 +2274,11 @@
 	if(fp==NULL){
 
 		if(content_type==WML_CONTENT)
-			printf("<p>Error: Could not open command file for update!</p>\n");
+			printf("<p>エラー: コマンドファイルをアップデートできません。</p>\n");
 		else{
-			printf("<P><DIV CLASS='errorMessage'>Error: Could not open command file '%s' for update!</DIV></P>\n",command_file);
+			printf("<P><DIV CLASS='errorMessage'>エラー: コマンドファイル'%s'をアップデートできません。</DIV></P>\n",command_file);
 			printf("<P><DIV CLASS='errorDescription'>");
-			printf("The permissions on the external command file and/or directory may be incorrect.  Read the FAQs on how to setup proper permissions.\n");
+			printf("外部コマンドファイルもしくは、ディレクトリのパーミッションに誤りがある可能性があります。パーミッションが適切かどうか確認してください。\n");
 			printf("</DIV></P>\n");
 			}
 
@@ -2325,7 +2326,7 @@
 /* display information about a command */
 void show_command_help(cmd){
 
-	printf("<DIV ALIGN=CENTER CLASS='descriptionTitle'>Command Description</DIV>\n");
+	printf("<DIV ALIGN=CENTER CLASS='descriptionTitle'>コマンドの説明</DIV>\n");
 	printf("<TABLE BORDER=1 CELLSPACING=0 CELLPADDING=0 CLASS='commandDescription'>\n");
 	printf("<TR><TD CLASS='commandDescription'>\n");
 
@@ -2333,458 +2334,438 @@
 	switch(cmd){
 
 	case CMD_ADD_HOST_COMMENT:
-		printf("This command is used to add a comment for the specified host.  If you work with other administrators, you may find it useful to share information about a host\n");
-		printf("that is having problems if more than one of you may be working on it.  If you do not check the 'persistent' option, the comment will be automatically be deleted\n");
+		printf("このコマンドはこのホストにコメントを追加します。仕事中に起こったホストに関する様々な問題を記録すると他の管理者と共有が行え便利です。\n");
+		printf("「<b>再起動後も(コメントを)保持させる</b>」チェックボックスにチェックを入れないとNagiosが次に再起動したときにコメントは削除されます。\n");
 		printf("the next time Nagios is restarted.\n");
 		break;
 		
 	case CMD_ADD_SVC_COMMENT:
-		printf("This command is used to add a comment for the specified service.  If you work with other administrators, you may find it useful to share information about a host\n");
-		printf("or service that is having problems if more than one of you may be working on it.  If you do not check the 'persistent' option, the comment will automatically be\n");
-		printf("deleted the next time Nagios is restarted.\n");
+		printf("このコマンドはこのホストにコメントを追加します。仕事中に起こったホストに関する様々な問題を記録すると他の管理者と共有が行え便利です。\n");
+		printf("「<b>再起動後も(コメントを)保持させる</b>」チェックボックスにチェックを入れないとNagiosが次に再起動したときにコメントは削除されます。<BR>\n");
 		break;
 
 	case CMD_DEL_HOST_COMMENT:
-		printf("This command is used to delete a specific host comment.\n");
+		printf("このコマンドはこのホストのコメントを削除します。\n");
 		break;
 		
 	case CMD_DEL_SVC_COMMENT:
-		printf("This command is used to delete a specific service comment.\n");
+		printf("このコマンドはこのサービスのコメントを削除します。\n");
 		break;
 		
 	case CMD_DELAY_HOST_NOTIFICATION:
-		printf("This command is used to delay the next problem notification that is sent out for the specified host.  The notification delay will be disregarded if\n");
-		printf("the host changes state before the next notification is scheduled to be sent out.  This command has no effect if the host is currently UP.\n");
+		printf("このコマンドは障害を検出した時にこのホストの次回通知を遅らせます。ただし、遅らせた通知が作動する前にホストの状態が変化した場合は無視されます。\n");
+		printf("また、ホストが稼働状態の場合はこのコマンドは効果がありません\n");
 		break;
 
 	case CMD_DELAY_SVC_NOTIFICATION:
-		printf("This command is used to delay the next problem notification that is sent out for the specified service.  The notification delay will be disregarded if\n");
-		printf("the service changes state before the next notification is scheduled to be sent out.  This command has no effect if the service is currently in an OK state.\n");
+		printf("このコマンドは障害を検出した時にこのサービスの次回通知を遅らせます。ただし、遅らせた通知が作動する前にホストの状態が変化した場合は無視されます。\n");
+		printf("また、ホストが稼働状態の場合はこのコマンドは効果がありません\n");
 		break;
 
 	case CMD_SCHEDULE_SVC_CHECK:
-		printf("This command is used to schedule the next check of a particular service.  Nagios will re-queue the service to be checked at the time you specify.\n");
-		printf("If you select the <i>force check</i> option, Nagios will force a check of the service regardless of both what time the scheduled check occurs and whether or not checks are enabled for the service.\n");
+		printf("このコマンドは指定したサービスを次回からチェックするようにスケジュールするために使います。実行するとNagiosは指定する時にチェックされるサービスをキューに入れます。\n");
+		printf("また、「<b>強制的にチェック</b>」にチェックを入れるとNagiosは>他にチェックがスケジュールされていない場合やこのサービスのサービスチェックが無効になっていた場合であっても強制的にチェックを行います。パッシブサービスチェックのみのサービスであってもアクティブチェックされていますので注意してください。\n");
 		break;
 
 	case CMD_ENABLE_SVC_CHECK:
-		printf("This command is used to enable active checks of a service.\n");
+		printf("このコマンドはアクティブなサービスのチェックを有効にするために使います。\n");
 		break;
 		
 	case CMD_DISABLE_SVC_CHECK:
-		printf("This command is used to disable active checks of a service.\n");
+		printf("このコマンドはアクティブなサービスのチェックを無効にするために使います。\n");
 		break;
 		
 	case CMD_DISABLE_NOTIFICATIONS:
-		printf("This command is used to disable host and service notifications on a program-wide basis.\n");
+		printf("このコマンドはホストとサービスの通知機能をグローバル設定として無効にします。\n");
 		break;
 		
 	case CMD_ENABLE_NOTIFICATIONS:
-		printf("This command is used to enable host and service notifications on a program-wide basis.\n");
+		printf("このコマンドはホストとサービスの通知機能をグローバル設定として有効にします。\n");
 		break;
 		
 	case CMD_SHUTDOWN_PROCESS:
-		printf("This command is used to shutdown the Nagios process. Note: Once the Nagios has been shutdown, it cannot be restarted via the web interface!\n");
+		printf("このコマンドはNagiosを停止させます。注)一度このコマンドでNagiosを停止させると、WebインターフェースからNagiosを起動することはできないので注意してください。\n");
 		break;
 
 	case CMD_RESTART_PROCESS:
-		printf("This command is used to restart the Nagios process.   Executing a restart command is equivalent to sending the process a HUP signal.\n");
-		printf("All information will be flushed from memory, the configuration files will be re-read, and Nagios will start monitoring with the new configuration information.\n");
+		printf("このコマンドはNagiosを再起動させます。再起動コマンドはプロセスにHUPシグナルのを送るのと同じです。\n");
+		printf("メモリ上の全情報のクリア、設定ファイルを再読込したあとNagiosはモニタリングを開始します\n");
 		break;
 
 	case CMD_ENABLE_HOST_SVC_CHECKS:
-		printf("This command is used to enable active checks of all services associated with the specified host.  This <i>does not</i> enable checks of the host unless you check the 'Enable for host too' option.\n");
+		printf("このコマンドはこのホストの全サービスのチェックを有効にします。ただし、<B>ホストチェックは有効になりません</B>。ホストのチェックを有効にしたい場合は>、「同時にホストも有効にする」をチェックします。\n");
 		break;
 		
 	case CMD_DISABLE_HOST_SVC_CHECKS:
-		printf("This command is used to disable active checks of all services associated with the specified host.  When a service is disabled Nagios will not monitor the service.  Doing this will prevent any notifications being sent out for\n");
-		printf("the specified service while it is disabled.  In order to have Nagios check the service in the future you will have to re-enable the service.\n");
-		printf("Note that disabling service checks may not necessarily prevent notifications from being sent out about the host which those services are associated with.  This <i>does not</i> disable checks of the host unless you check the 'Disable for host too' option.\n");
+		printf("このコマンドはこのホストの全サービスのチェックを無効にします。サービスを無効にするとNagiosはモニターしなくなります。これは障害が起こっているときに通知を送るのを抑制することができます。再度サービスをチェックを行うには「有効」にすることで出来ます。ただし、<B>ホストチェックは無効になりません</B>。ホストのチェックも無効に>したい場合は、「同時にホストチェックも無効にする」をチェックします。\n");
 		break;
 		
 	case CMD_SCHEDULE_HOST_SVC_CHECKS:
-		printf("This command is used to scheduled the next check of all services on the specified host.  If you select the <i>force check</i> option, Nagios will force a check of all services on the host regardless of both what time the scheduled checks occur and whether or not checks are enabled for those services.\n");
+		printf("このコマンドは指定されたホスト上の全てのサービスを次回からチェックするようにスケジュールするために使います。「<b>強制的にチェック</b>」にチェックを入れるとNagiosは他にチェックがスケジュールされていても、このサービスのサービスチェックが無効になっていたとしても強制的にチェックを行います。パッシブサービスチェックのみのサービスであってもアクティブチェックされてますので注意してください。\n");
 		break;
 
 	case CMD_DEL_ALL_HOST_COMMENTS:
-		printf("This command is used to delete all comments associated with the specified host.\n");
+		printf("このコマンドは指定したホストの全コメントを削除します。\n");
 		break;
 		
 	case CMD_DEL_ALL_SVC_COMMENTS:
-		printf("This command is used to delete all comments associated with the specified service.\n");
+		printf("このコマンドは指定したサービスの全コメントを削除します。\n");
 		break;
 
 	case CMD_ENABLE_SVC_NOTIFICATIONS:
-		printf("This command is used to enable notifications for the specified service.  Notifications will only be sent out for the\n");
-		printf("service state types you defined in your service definition.\n");
+		printf("このコマンドは指定したサービスの通知機能を有効にします。通知は定義したサービス情報の状態が変わった際に送られます。\n");
 		break;
 
 	case CMD_DISABLE_SVC_NOTIFICATIONS:
-		printf("This command is used to prevent notifications from being sent out for the specified service.  You will have to re-enable notifications\n");
-		printf("for this service before any alerts can be sent out in the future.\n");
+		printf("このコマンドは指定したサービスの通知機能を無効にします。通知機能は再度有効にするまで一切機能しません\n");
 		break;
 
 	case CMD_ENABLE_HOST_NOTIFICATIONS:
-		printf("This command is used to enable notifications for the specified host.  Notifications will only be sent out for the\n");
-		printf("host state types you defined in your host definition.  Note that this command <i>does not</i> enable notifications\n");
-		printf("for services associated with this host.\n");
+		printf("このコマンドは指定したホストの通知機能を有効にします。通知は定義したホスト情報の状態が変わった際に送られます。\n");
+		printf("注)このコマンドではホストに付随するサービスの通知機能までは<B>有効になりません</B>。\n");
 		break;
 
 	case CMD_DISABLE_HOST_NOTIFICATIONS:
-		printf("This command is used to prevent notifications from being sent out for the specified host.  You will have to re-enable notifications for this host\n");
-		printf("before any alerts can be sent out in the future.  Note that this command <i>does not</i> disable notifications for services associated with this host.\n");
+		printf("このコマンドは指定したホストの通知機能を無効にします。通知機能は再度有効にするまで一切機能しません。\n");
+		printf("注)このコマンドではホストに付随するサービスの通知機能までは<B>無効になりません</B>。\n");
 		break;
 
 	case CMD_ENABLE_ALL_NOTIFICATIONS_BEYOND_HOST:
-		printf("This command is used to enable notifications for all hosts and services that lie \"beyond\" the specified host\n");
-		printf("(from the view of Nagios).\n");
+		printf("このコマンドは指定したホストの向こうにある全てのホストとサービスの通知機能を有効にします。\n");
 		break;
 
 	case CMD_DISABLE_ALL_NOTIFICATIONS_BEYOND_HOST:
-		printf("This command is used to temporarily prevent notifications from being sent out for all hosts and services that lie\n");
-		printf("\"beyone\" the specified host (from the view of Nagios).\n");
+		printf("このコマンドは指定したホストの向こうにある全てのホストとサービスの通知機能を無効にします。\n");
 		break;
 		
 	case CMD_ENABLE_HOST_SVC_NOTIFICATIONS:
-		printf("This command is used to enable notifications for all services on the specified host.  Notifications will only be sent out for the\n");
-		printf("service state types you defined in your service definition.  This <i>does not</i> enable notifications for the host unless you check the 'Enable for host too' option.\n");
+		printf("このコマンドは指定したホストの全サービスの通知機能を有効にします。通知は定義したサービス状態が変化した際に送られます。\n");
+		printf("このコマンドではホストの通知機能は<b>有効になりません</B>。ホストも同様に通知機能を有効にしたい場合は「<B>同時にホストも有効にする</B>」をチェックします。\n");
 		break;
 
 	case CMD_DISABLE_HOST_SVC_NOTIFICATIONS:
-		printf("This command is used to prevent notifications from being sent out for all services on the specified host.  You will have to re-enable notifications for\n");
-		printf("all services associated with this host before any alerts can be sent out in the future.  This <i>does not</i> prevent notifications from being sent out about the host unless you check the 'Disable for host too' option.\n");
+		printf("このコマンドは指定したホストの全サービスの通知機能を無効にします。通知機能は再度有効にするまで機能しません。\n");
+		printf("このコマンドではホストの通知機能は<b>無効になりません</B>。ホストも同様に通知機能を無効にしたい場合は「<B>同時にホストも無効にする</B>」をチェックします。\n");
 		break;
 
 	case CMD_ACKNOWLEDGE_HOST_PROBLEM:
-		printf("This command is used to acknowledge a host problem.  When a host problem is acknowledged, future notifications about problems are temporarily disabled until the host changes from its current state.\n");
-		printf("If you want this acknowledgement to remain until the host recovers, check the 'Sticky Acknowledgement' checkbox - otherwise any state change will remove the acknowledgement.\n");
-		printf("Contacts for this host will receive a notification about the acknowledgement, so they are aware that someone is working on the problem.  Additionally, a comment will also be added to the host.\n");
-		printf("Make sure to enter your name and fill in a brief description of what you are doing in the comment field.  If you would like the host comment to remain once the acknowledgement is removed, check\n");
-		printf("the 'Persistent Comment' checkbox.  If you do not want an acknowledgement notification sent out to the appropriate contacts, uncheck the 'Send Notification' checkbox.\n");
+		printf("このコマンドは指定したホストの問題を既知としてマークします。ホストの問題が既知としてマークされたら、今後この問題に関して状態が変わるまで(たとえば復旧するなど)通知を行わなくなります。\n");
+		printf("このコマンドが実行されるとホストの通知先に「問題を認知した」という通知が行われます。加えてコメントも追加されます。\n");
+		printf("名前とちょっとした説明を入れてください。もしこの問題を認知してもコメントを残したい場合は「保存する」にチェックを入れます。もし、この問題を認知した警報を通知したくなければ「警報を通知」のチェックをはずしてください\n");
 		break;
 
 	case CMD_ACKNOWLEDGE_SVC_PROBLEM:
-		printf("This command is used to acknowledge a service problem.  When a service problem is acknowledged, future notifications about problems are temporarily disabled until the service changes from its current state.\n");
-		printf("If you want this acknowledgement to remain until the service recovers, check the 'Sticky Acknowledgement' checkbox - otherwise any state change will remove the acknowledgement.\n");
-		printf("Contacts for this service will receive a notification about the acknowledgement, so they are aware that someone is working on the problem.  Additionally, a comment will also be added to the service.\n");
-		printf("Make sure to enter your name and fill in a brief description of what you are doing in the comment field.  If you would like the service comment to remain once the acknowledgement is removed, check\n");
-		printf("the 'Persistent Comment' checkbox.  If you do not want an acknowledgement notification sent out to the appropriate contacts, uncheck the 'Send Notification' checkbox.\n");
+		printf("このコマンドは指定したサービスの問題を既知としてマークします。ホストの問題が既知としてマークされたら、今後この問題に関して状態が変わるまで(たとえば復旧するなど)通知を行わなくなります。\n");
+		printf("このコマンドが実行されるとサービスの通知先に「問題を認知した」という通知が行われます。加えてコメントも追加されます。\n");
+		printf("名前とちょっとした説明を入れてください。もしこの問題を認知してもコメントを残したい場合は「保存する」にチェックを入れます。もし、この問題を認知した警報を通知したくなければ「警報を通知」のチェックをはずしてください\n");
 		break;
 
 	case CMD_START_EXECUTING_SVC_CHECKS:
-		printf("This command is used to resume execution of active service checks on a program-wide basis.  Individual services which are disabled will still not be checked.\n");
+		printf("このコマンドはグローバル設定としてサービスチェックを再開します。ただし、個々のサービスでサービスチェックが無効になっているものはそのまま無効になります。\n");
 		break;
 
 	case CMD_STOP_EXECUTING_SVC_CHECKS:
-		printf("This command is used to temporarily stop Nagios from actively executing any service checks.  This will have the side effect of preventing any notifications from being sent out (for any and all services and hosts).\n");
-		printf("Service checks will not be executed again until you issue a command to resume service check execution.\n");
+		printf("このコマンドは一時的に全てのサービスチェックを停止します。これによりどんな通知も行わなくなります。\n");
+		printf("サービスチェックはサービスチェックを再開するコマンドを発行するまで行われません。\n");
 		break;
 
 	case CMD_START_ACCEPTING_PASSIVE_SVC_CHECKS:
-		printf("This command is used to make Nagios start accepting passive service check results that it finds in the external command file\n");
+		printf("このコマンドはNagiosが外部コマンドからパッシブサービスチェックの結果を受け付けるようにします。\n");
 		break;
 
 	case CMD_STOP_ACCEPTING_PASSIVE_SVC_CHECKS:
-		printf("This command is use to make Nagios stop accepting passive service check results that it finds in the external command file.  All passive check results that are found will be ignored.\n");
+		printf("このコマンドはNagiosが外部コマンドからパッシブサービスチェックの結果を受け付ないようにします。\n");
 		break;
 
 	case CMD_ENABLE_PASSIVE_SVC_CHECKS:
-		printf("This command is used to allow Nagios to accept passive service check results that it finds in the external command file for this particular service.\n");
+		printf("このコマンドはNagiosが外部コマンドから指定したサービスについてのパッシブサービスチェックの結果を受け付けるようにします。\n");
 		break;
 
 	case CMD_DISABLE_PASSIVE_SVC_CHECKS:
-		printf("This command is used to stop Nagios accepting passive service check results that it finds in the external command file for this particular service.  All passive check results that are found for this service will be ignored.\n");
+		printf("このコマンドはNagiosが外部コマンドから指定したサービスについてのパッシブサービスチェックの結果を受け付けないようにします。\n");
 		break;
 
 	case CMD_ENABLE_EVENT_HANDLERS:
-		printf("This command is used to allow Nagios to run host and service event handlers.\n");
+		printf("このコマンドはホスト、サービスのイベントハンドラを有効にします。\n");
 		break;
 
 	case CMD_DISABLE_EVENT_HANDLERS:
-		printf("This command is used to temporarily prevent Nagios from running any host or service event handlers.\n");
+		printf("このコマンドはホスト、サービスのイベントハンドラを無効にします。\n");
 		break;
 
 	case CMD_ENABLE_SVC_EVENT_HANDLER:
-		printf("This command is used to allow Nagios to run the service event handler for a particular service when necessary (if one is defined).\n");
+		printf("このコマンドは指定したサービスのイベントハンドラを有効にします。\n");
 		break;
 
 	case CMD_DISABLE_SVC_EVENT_HANDLER:
-		printf("This command is used to temporarily prevent Nagios from running the service event handler for a particular service.\n");
+		printf("このコマンドは指定したサービスのイベントハンドラを無効にします。\n");
 		break;
 
 	case CMD_ENABLE_HOST_EVENT_HANDLER:
-		printf("This command is used to allow Nagios to run the host event handler for a particular service when necessary (if one is defined).\n");
+		printf("このコマンドは指定したホストのイベントハンドラを有効にします。\n");
 		break;
 
 	case CMD_DISABLE_HOST_EVENT_HANDLER:
-		printf("This command is used to temporarily prevent Nagios from running the host event handler for a particular host.\n");
+		printf("このコマンドは指定したホストのイベントハンドラを無効にします。\n");
 		break;
 
 	case CMD_ENABLE_HOST_CHECK:
-		printf("This command is used to enable active checks of this host.\n");
+		printf("このコマンドはホストチェックを有効にします。\n");
 		break;
 
 	case CMD_DISABLE_HOST_CHECK:
-		printf("This command is used to temporarily prevent Nagios from actively checking the status of a particular host.  If Nagios needs to check the status of this host, it will assume that it is in the same state that it was in before checks were disabled.\n");
+		printf("このコマンドはホストチェックを無効にします。もしNagiosがこのホストのチェックデータが必要となったら、無効にする前の状態を現在の状態とみなします。\n");
 		break;
 
 	case CMD_START_OBSESSING_OVER_SVC_CHECKS:
-		printf("This command is used to have Nagios start obsessing over service checks.  Read the documentation on distributed monitoring for more information on this.\n");
+		printf("このコマンドはNagiosにObsessing overサービスチェックを開始させます。この機能についてはドキュメントを参照してください。\n");
 		break;
 
 	case CMD_STOP_OBSESSING_OVER_SVC_CHECKS:
-		printf("This command is used stop Nagios from obsessing over service checks.\n");
+		printf("このコマンドはNagiosにObsessing overサービスチェックを停止させます。この機能についてはドキュメントを参照してください。\n");
 		break;
 
 	case CMD_REMOVE_HOST_ACKNOWLEDGEMENT:
-		printf("This command is used to remove an acknowledgement for a particular host problem.  Once the acknowledgement is removed, notifications may start being\n");
-		printf("sent out about the host problem. \n");
+		printf("このコマンドは指定したホストの既知マークを削除し、通知を再開します\n");
 		break;
 
 	case CMD_REMOVE_SVC_ACKNOWLEDGEMENT:
-		printf("This command is used to remove an acknowledgement for a particular service problem.  Once the acknowledgement is removed, notifications may start being\n");
-		printf("sent out about the service problem.\n");
+		printf("このコマンドは指定したサービスの既知マークを削除し、通知を再開します。\n");
 		break;
 
 	case CMD_PROCESS_SERVICE_CHECK_RESULT:
-		printf("This command is used to submit a passive check result for a particular service.  It is particularly useful for resetting security-related services to OK states once they have been dealt with.\n");
+		printf("このコマンドは指定したサービスからのPassiveチェックの結果を送信します。これは作業が行われたり、作業を完了したり、セキュリティチェックなどに有効活用できます。\n");
 		break;
 
 	case CMD_PROCESS_HOST_CHECK_RESULT:
-		printf("This command is used to submit a passive check result for a particular host.\n");
+		printf("このコマンドは指定したホストのPassiveチェックの結果を送信します。\n");
 		break;
 
 	case CMD_SCHEDULE_HOST_DOWNTIME:
-		printf("This command is used to schedule downtime for a particular host.  During the specified downtime, Nagios will not send notifications out about the host.\n");
-		printf("When the scheduled downtime expires, Nagios will send out notifications for this host as it normally would.  Scheduled downtimes are preserved\n");
-		printf("across program shutdowns and restarts.  Both the start and end times should be specified in the following format:  <b>mm/dd/yyyy hh:mm:ss</b>.\n");
-		printf("If you select the <i>fixed</i> option, the downtime will be in effect between the start and end times you specify.  If you do not select the <i>fixed</i>\n");
-		printf("option, Nagios will treat this as \"flexible\" downtime.  Flexible downtime starts when the host goes down or becomes unreachable (sometime between the\n");
-		printf("start and end times you specified) and lasts as long as the duration of time you enter.  The duration fields do not apply for fixed downtime.\n");
+		printf("このコマンドは指定したホストのダウンタイムをスケジュールします。ダウンタイムを設定するとその間はNagiosはホストに関する通知を行わなくなります。\n");
+		printf("ダウンタイムが経過したらNagiosは通常どおり通知を行います。このスケジュール内容はNagiosが再起動した場合でも保存されます。\n");
+		printf("フィールドにダウンタイム開始時間と終了時間を<b>mm/dd/yyy hh:mm:ss</b>形式で入力してください。\n");
+		printf("もし「<B>固定</B>」にチェックを入れると入力した開始時間と終了時間きっちりにスケジュールされます。もし「<B>固定</b>」にチェックを入れない場合はNagiosは\"フレキシブル\"なダウンタイムとします。\n");
+		printf("フレキシブルなダウンタイムとはホストが停止または未到達になる開始時間から経過時間を指定してダウンタイムを決定することです。「<B>固定</B>」にチェックを入れた場合<b>期間</b>を指定する箇所は入力しても無効になります。\n");
 		break;
 
 	case CMD_SCHEDULE_HOST_SVC_DOWNTIME:
-		printf("This command is used to schedule downtime for all services on a particular host.  During the specified downtime, Nagios will not send notifications out about the host.\n");
-		printf("Normally, a host in downtime will not send alerts about any services in a failed state. This option will explicitly set downtime for all services for this host.\n");
-		printf("When the scheduled downtime expires, Nagios will send out notifications for this host as it normally would.  Scheduled downtimes are preserved\n");
-		printf("across program shutdowns and restarts.  Both the start and end times should be specified in the following format:  <b>mm/dd/yyyy hh:mm:ss</b>.\n");
-		printf("If you select the <i>fixed</i> option, the downtime will be in effect between the start and end times you specify.  If you do not select the <i>fixed</i>\n");
-		printf("option, Nagios will treat this as \"flexible\" downtime.  Flexible downtime starts when the host goes down or becomes unreachable (sometime between the\n");
-		printf("start and end times you specified) and lasts as long as the duration of time you enter.  The duration fields do not apply for fixed downtime.\n");
+		printf("このコマンドは指定したホストとその全サービスのダウンタイムをスケジュールします。ダウンタイムを設定するとその間はNagiosはホストに関する通知を行わなくなります。\n");
+		printf("ダウンタイムが経過したらNagiosは通常どおり通知を行います。このスケジュール内容はNagiosが再起動した場合でも保存されます。\n");
+		printf("フィールドにダウンタイム開始時間と終了時間を<b>mm/dd/yyy hh:mm:ss</b>形式で入力してください。\n");
+		printf("もし「<B>固定</B>」にチェックを入れると入力した開始時間と終了時間きっちりにスケジュールされます。もし「<B>固定</b>」にチェックを入れない場合はNagiosは\"フレキシブル\"なダウンタイムとします。\n");
+		printf("フレキシブルなダウンタイムとはホストが停止または未到達になる開始時間から経過時間を指定してダウンタイムを決定することです。「<B>固定</B>」にチェックを入れた場合<b>期間</b>を指定する箇所は入力しても無効になります。\n");
 		break;
 
 	case CMD_SCHEDULE_SVC_DOWNTIME:
-		printf("This command is used to schedule downtime for a particular service.  During the specified downtime, Nagios will not send notifications out about the service.\n");
-		printf("When the scheduled downtime expires, Nagios will send out notifications for this service as it normally would.  Scheduled downtimes are preserved\n");
-		printf("across program shutdowns and restarts.  Both the start and end times should be specified in the following format:  <b>mm/dd/yyyy hh:mm:ss</b>.\n");
-		printf("If you select the <i>fixed</i> option, the downtime will be in effect between the start and end times you specify.  If you do not select the <i>fixed</i>\n");
-		printf("option, Nagios will treat this as \"flexible\" downtime.  Flexible downtime starts when the service enters a non-OK state (sometime between the\n");
-		printf("start and end times you specified) and lasts as long as the duration of time you enter.  The duration fields do not apply for fixed downtime.\n");
+		printf("このコマンドは指定したサービスのダウンタイムをスケジュールします。ダウンタイムを設定するとその間はNagiosはサービスに関する通知を行わなくなります。\n");
+		printf("ダウンタイムが経過したらNagiosは通常どおり通知を行います。このスケジュール内容はNagiosが再起動した場合でも保存されます。\n");
+		printf("フィールドにダウンタイム開始時間と終了時間を<b>mm/dd/yyy hh:mm:ss</b>形式で入力してください。\n");
+		printf("もし「<B>固定</B>」にチェックを入れると入力した開始時間と終了時間きっちりにスケジュールされます。もし「<B>固定</b>」にチェックを入れない場合はNagiosは\"フレキシブル\"なダウンタイムとします。\n");
+		printf("フレキシブルなダウンタイムとはサービスが停止または未到達になる開始時間から経過時間を指定してダウンタイムを決定することです。「<B>固定</B>」にチェックを入れた場合<b>期間</b>を指定する箇所は入力しても無効になります。</b>\n");
 		break;
 
 	case CMD_ENABLE_HOST_FLAP_DETECTION:
-		printf("This command is used to enable flap detection for a specific host.  If flap detection is disabled on a program-wide basis, this will have no effect,\n");
+		printf("このコマンドは指定したホストのフラップ検知を有効にします。ただし、フラップ検知がグローバル設定で無効に設定されている場合はこのコマンドは何の効果も持ちません。\n");
 		break;
 
 	case CMD_DISABLE_HOST_FLAP_DETECTION:
-		printf("This command is used to disable flap detection for a specific host.\n");
+		printf("このコマンドは指定したホストのフラップ検知を無効にします。\n");
 		break;
 
 	case CMD_ENABLE_SVC_FLAP_DETECTION:
-		printf("This command is used to enable flap detection for a specific service.  If flap detection is disabled on a program-wide basis, this will have no effect,\n");
+		printf("このコマンドは指定したサービスのフラップ検知を有効にします。ただし、フラップ検知がグローバル設定で無効に設定されている場合はこのコマンドは何の効果も持ちません。\n");
 		break;
 
 	case CMD_DISABLE_SVC_FLAP_DETECTION:
-		printf("This command is used to disable flap detection for a specific service.\n");
+		printf("このコマンドは指定したサービスのフラップ検知を無効にします。\n");
 		break;
 
 	case CMD_ENABLE_FLAP_DETECTION:
-		printf("This command is used to enable flap detection for hosts and services on a program-wide basis.  Individual hosts and services may have flap detection disabled.\n");
+		printf("このコマンドはグローバル設定としてフラップ検知を有効にします。個々のホストやサービスで無効に設定されている場合、それらは保持されたままになります。\n");
 		break;
 
 	case CMD_DISABLE_FLAP_DETECTION:
-		printf("This command is used to disable flap detection for hosts and services on a program-wide basis.\n");
+		printf("このコマンドはグローバル設定としてフラップ検知を無効にします。\n");
 		break;
 
 	case CMD_ENABLE_HOSTGROUP_SVC_NOTIFICATIONS:
-		printf("This command is used to enable notifications for all services in the specified hostgroup.  Notifications will only be sent out for the\n");
-		printf("service state types you defined in your service definitions.  This <i>does not</i> enable notifications for the hosts in this hostgroup unless you check the 'Enable for hosts too' option.\n");
+		printf("このコマンドは指定したホストグループの全サービスの通知を有効にします。通知はサービス定義で定義したサービスのみ送られます。\n");
+		printf("このコマンドでは指定したホストグループ上のホストの通知機能は<b>有効になりません</b>。もし有効にしたい場合は「<B>同時にホストも有効にする</b>」をチェックします。\n");
 		break;
 
 	case CMD_DISABLE_HOSTGROUP_SVC_NOTIFICATIONS:
-		printf("This command is used to prevent notifications from being sent out for all services in the specified hostgroup.  You will have to re-enable notifications for\n");
-		printf("all services in this hostgroup before any alerts can be sent out in the future.  This <i>does not</i> prevent notifications from being sent out about the hosts in this hostgroup unless you check the 'Disable for hosts too' option.\n");
+		printf("このコマンドは指定したホストグループの全サービスの通知を無効にします。通知はサービス定義で定義したサービスのみ送られます。\n");
+		printf("このコマンドでは指定したホストグループ上のホストの通知機能は<b>無効になりません</b>。もし無効にしたい場合は「<B>同時にホストも無効にする</b>」をチェックします。\n");
 		break;
 
 	case CMD_ENABLE_HOSTGROUP_HOST_NOTIFICATIONS:
-		printf("This command is used to enable notifications for all hosts in the specified hostgroup.  Notifications will only be sent out for the\n");
-		printf("host state types you defined in your host definitions.\n");
+		printf("このコマンドは指定したホストグループ上の全ホストの通知を有効にします。\n");
+		printf("通知はホスト定義で定義したホストのみに送られます。\n");
 		break;
 
 	case CMD_DISABLE_HOSTGROUP_HOST_NOTIFICATIONS:
-		printf("This command is used to prevent notifications from being sent out for all hosts in the specified hostgroup.  You will have to re-enable notifications for\n");
-		printf("all hosts in this hostgroup before any alerts can be sent out in the future.\n");
+		printf("このコマンドは指定したホストグループ上の全ホストの通知を無効にします。\n");
+		printf("再度このホストグループ上の全ホストに通知を有効にするまでどんな警報も通知されません。\n");
 		break;
 
 	case CMD_ENABLE_HOSTGROUP_SVC_CHECKS:
-		printf("This command is used to enable active checks of all services in the specified hostgroup.  This <i>does not</i> enable active checks of the hosts in the hostgroup unless you check the 'Enable for hosts too' option.\n");
+		printf("このコマンドは指定したホストグループ上のサービスチェックを有効にします。\n");
+		printf("ただし、ホストチェックまではこのコマンドでは有効になりません。有効にしたい場合は「<b>同時にホストも有効にする</b>」をチェックします。\n");
 		break;
 		
 	case CMD_DISABLE_HOSTGROUP_SVC_CHECKS:
-		printf("This command is used to disable active checks of all services in the specified hostgroup.  This <i>does not</i> disable checks of the hosts in the hostgroup unless you check the 'Disable for hosts too' option.\n");
+		printf("このコマンドは指定したホストグループ上のサービスチェックを無効にします。このコマンドではホストグループのホストチェックは<b>無効になりません</b>。無効にしたい場合は「<B>同時にホストも無効にする</B>」をチェックします。\n");
 		break;
 
 	case CMD_DEL_HOST_DOWNTIME:
-		printf("This command is used to cancel active or pending scheduled downtime for the specified host.\n");
+		printf("このコマンドは指定したホストのダウンタイムをキャンセルもしくは保留にします。\n");
 		break;
 
 	case CMD_DEL_SVC_DOWNTIME:
-		printf("This command is used to cancel active or pending scheduled downtime for the specified service.\n");
+		printf("このコマンドは指定したサービスのダウンタイムをキャンセルもしくは保留にします。\n");
 		break;
 
 	case CMD_ENABLE_FAILURE_PREDICTION:
-		printf("This command is used to enable failure prediction for hosts and services on a program-wide basis.  Individual hosts and services may have failure prediction disabled.\n");
+		printf("このコマンドはグローバル設定としてホストとサービスの失敗予測機能を有効にします。\n");
 		break;
 
 	case CMD_DISABLE_FAILURE_PREDICTION:
-		printf("This command is used to disable failure prediction for hosts and services on a program-wide basis.\n");
+		printf("このコマンドはグローバル設定としてホストとサービスの失敗予測機能を無効にします。\n");
 		break;
 
 	case CMD_ENABLE_PERFORMANCE_DATA:
-		printf("This command is used to enable the processing of performance data for hosts and services on a program-wide basis.  Individual hosts and services may have performance data processing disabled.\n");
+		printf("このコマンドはグローバル設定としてホストとサービスのパフォーマンスデータを有効にします。\n");
+		printf("個々のホストやサービスが無効になっている場合は無効のままになります。\n");
 		break;
 
 	case CMD_DISABLE_PERFORMANCE_DATA:
-		printf("This command is used to disable the processing of performance data for hosts and services on a program-wide basis.\n");
+		printf("このコマンドはグローバル設定としてホストとサービスのパフォーマンスデータを無効にします。\n");
 		break;
 
 	case CMD_SCHEDULE_HOSTGROUP_HOST_DOWNTIME:
-		printf("This command is used to schedule downtime for all hosts in a particular hostgroup.  During the specified downtime, Nagios will not send notifications out about the hosts.\n");
-		printf("When the scheduled downtime expires, Nagios will send out notifications for the hosts as it normally would.  Scheduled downtimes are preserved\n");
-		printf("across program shutdowns and restarts.  Both the start and end times should be specified in the following format:  <b>mm/dd/yyyy hh:mm:ss</b>.\n");
-		printf("If you select the <i>fixed</i> option, the downtime will be in effect between the start and end times you specify.  If you do not select the <i>fixed</i>\n");
-		printf("option, Nagios will treat this as \"flexible\" downtime.  Flexible downtime starts when a host goes down or becomes unreachable (sometime between the\n");
-		printf("start and end times you specified) and lasts as long as the duration of time you enter.  The duration fields do not apply for fixed dowtime.\n");
+		printf("このコマンドは指定したホストグループ上の全ホストのダウンタイムをスケジュールします。ダウンタイムを設定するとその間はNagiosはホストに関する通知を行わなくなります。\n");
+		printf("ダウンタイムが経過したらNagiosは通常どおり通知を行います。このスケジュール内容はNagiosが再起動した場合でも保存されます。\n");
+		printf("フィールドにダウンタイム開始時間と終了時間を<b>mm/dd/yyy hh:mm:ss</b>形式で入力してください。\n");
+		printf("もし「<B>固定</B>」にチェックを入れると入力した開始時間と終了時間きっちりにスケジュールされます。もし「<B>固定</b>」にチェックを入れない場合はNagiosは\"フレキシブル\"なダウンタイムとします。\n");
+		printf("フレキシブルなダウンタイムとはホストが停止または未到達になる開始時間から経過時間を指定してダウンタイムを決定することです。「<B>固定</B>」にチェックを入れた場合<b>期間</b>を指定する箇所は入力しても無効になります。</b>\n");
 		break;
 
 	case CMD_SCHEDULE_HOSTGROUP_SVC_DOWNTIME:
-		printf("This command is used to schedule downtime for all services in a particular hostgroup.  During the specified downtime, Nagios will not send notifications out about the services.\n");
-		printf("When the scheduled downtime expires, Nagios will send out notifications for the services as it normally would.  Scheduled downtimes are preserved\n");
-		printf("across program shutdowns and restarts.  Both the start and end times should be specified in the following format:  <b>mm/dd/yyyy hh:mm:ss</b>.\n");
-		printf("If you select the <i>fixed</i> option, the downtime will be in effect between the start and end times you specify.  If you do not select the <i>fixed</i>\n");
-		printf("option, Nagios will treat this as \"flexible\" downtime.  Flexible downtime starts when a service enters a non-OK state (sometime between the\n");
-		printf("start and end times you specified) and lasts as long as the duration of time you enter.  The duration fields do not apply for fixed dowtime.\n");
-		printf("Note that scheduling downtime for services does not automatically schedule downtime for the hosts those services are associated with.  If you want to also schedule downtime for all hosts in the hostgroup, check the 'Schedule downtime for hosts too' option.\n");
+		printf("このコマンドは指定したホストグループ上の全サービスのダウンタイムをスケジュールします。ダウンタイムを設定するとその間はNagiosはサービスに関する通知を行わなくなります。\n");
+		printf("ダウンタイムが経過したらNagiosは通常どおり通知を行います。このスケジュール内容はNagiosが再起動した場合でも保存されます。\n");
+		printf("フィールドにダウンタイム開始時間と終了時間を<b>mm/dd/yyy hh:mm:ss</b>形式で入力してください。\n");
+		printf("もし「<B>固定</B>」にチェックを入れると入力した開始時間と終了時間きっちりにスケジュールされます。もし<「B>固定</b>」にチェックを入れない場合はNagiosは\"フレキシブル\"なダウンタイムとします。\n");
+		printf("フレキシブルなダウンタイムとはホストが停止または未到達になる開始時間から経過時間を指定してダウンタイムを決定することです。「<B>固定</B>」にチェックを入れた場合<b>期間</b>を指定する箇所は入力しても無効になります。</b>\n");
 		break;
 
 	case CMD_START_EXECUTING_HOST_CHECKS:
-		printf("This command is used to enable active host checks on a program-wide basis.\n");
+		printf("このコマンドはグローバル設定としてホストチェックを有効にするために使います。\n");
 		break;
 
 	case CMD_STOP_EXECUTING_HOST_CHECKS:
-		printf("This command is used to disable active host checks on a program-wide basis.\n");
+		printf("このコマンドはグローバル設定としてホストチェックを無効にするために使います。\n");
 		break;
 
 	case CMD_START_ACCEPTING_PASSIVE_HOST_CHECKS:
-		printf("This command is used to have Nagios start obsessing over host checks.  Read the documentation on distributed monitoring for more information on this.\n");
+		printf("このコマンドはNagiosがObsessing Overホストチェックを開始するために使います。詳細な情報はドキュメントの分散モニタリング(distributed monitoring)の部分を参照してください。\n");
 		break;
 
 	case CMD_STOP_ACCEPTING_PASSIVE_HOST_CHECKS:
-		printf("This command is used to stop Nagios from obsessing over host checks.\n");
+		printf("このコマンドはNagiosがObsessing Overホストチェックを停止するために使います。\n");
 		break;
 
 	case CMD_ENABLE_PASSIVE_HOST_CHECKS:
-		printf("This command is used to allow Nagios to accept passive host check results that it finds in the external command file for a particular host.\n");
+		printf("このコマンドはNagiosが指定したホストの外部コマンドからパッシブチェックを行うことを許可するために使用します。\n");
 		break;
 
 	case CMD_DISABLE_PASSIVE_HOST_CHECKS:
-		printf("This command is used to stop Nagios from accepting passive host check results that it finds in the external command file for a particular host.  All passive check results that are found for this host will be ignored.\n");
+		printf("このコマンドはNagiosが指定したホストの外部コマンドからパッシブチェックを行うことを拒否するために使用します。これを実行すると指定したホストからの全てのPassiveチェックが無視されます。\n");
 		break;
 
 	case CMD_START_OBSESSING_OVER_HOST_CHECKS:
-		printf("This command is used to have Nagios start obsessing over host checks.  Read the documentation on distributed monitoring for more information on this.\n");
+		printf("このコマンドはobsessing overホストチェックを開始するために使います。詳細な情報はドキュメントの分散モニタリング(distributed monitoring)の部分を参照してください。\n");
 		break;
 
 	case CMD_STOP_OBSESSING_OVER_HOST_CHECKS:
-		printf("This command is used to stop Nagios from obsessing over host checks.\n");
+		printf("このコマンドはobsessing overホストチェックを停止するために使います。\n");
 		break;
 
 	case CMD_SCHEDULE_HOST_CHECK:
-		printf("This command is used to schedule the next check of a particular host.  Nagios will re-queue the host to be checked at the time you specify.\n");
-		printf("If you select the <i>force check</i> option, Nagios will force a check of the host regardless of both what time the scheduled check occurs and whether or not checks are enabled for the host.\n");
+		printf("このコマンドは指定したホストを次回からチェックするようにスケジュールするために使います。実行するとNagiosは指定する時にチェックされるサービスをキューに入れます。\n");
+		printf("また、「<b>強制的にチェック</b>」にチェックを入れるとNagiosは他にチェックがスケジュールされていない場合やこのホストのホストチェックが無効になっていた場合であっても強制的にチェックを行います。\n");
 		break;
 
 	case CMD_START_OBSESSING_OVER_SVC:
-		printf("This command is used to have Nagios start obsessing over a particular service.\n");
+		printf("このコマンドは指定したサービスのobsessing overを開始するために使います。\n");
 		break;
 
 	case CMD_STOP_OBSESSING_OVER_SVC:
-		printf("This command is used to stop Nagios from obsessing over a particular service.\n");
+		printf("このコマンドは指定したサービスのobsessing overを停止するために使います。\n");
 		break;
 
 	case CMD_START_OBSESSING_OVER_HOST:
-		printf("This command is used to have Nagios start obsessing over a particular host.\n");
+		printf("このコマンドは指定したホストのobsessing overを開始するために使います。\n");
 		break;
 
 	case CMD_STOP_OBSESSING_OVER_HOST:
-		printf("This command is used to stop Nagios from obsessing over a particular host.\n");
+		printf("このコマンドは指定したホストのobsessing overを開始するために使います。\n");
 		break;
 
 	case CMD_ENABLE_SERVICEGROUP_SVC_NOTIFICATIONS:
-		printf("This command is used to enable notifications for all services in the specified servicegroup.  Notifications will only be sent out for the\n");
-		printf("service state types you defined in your service definitions.  This <i>does not</i> enable notifications for the hosts in this servicegroup unless you check the 'Enable for hosts too' option.\n");
+		printf("このコマンドは指定したサービスグループの全サービスの通知を有効にします。通知はサービス定義で定義したサービスのみ送られます。\n");
+		printf("このコマンドでは指定したサービスグループ上のホストの通知機能は<b>有効になりません</b>。もし有効にしたい場合は「<B>同時にホストも有効にする</b>」をチェックします。\n");
 		break;
 
 	case CMD_DISABLE_SERVICEGROUP_SVC_NOTIFICATIONS:
-		printf("This command is used to prevent notifications from being sent out for all services in the specified servicegroup.  You will have to re-enable notifications for\n");
-		printf("all services in this servicegroup before any alerts can be sent out in the future.  This <i>does not</i> prevent notifications from being sent out about the hosts in this servicegroup unless you check the 'Disable for hosts too' option.\n");
+		printf("このコマンドは指定したサービスグループの全サービスの通知を無効にします。通知はサービス定義で定義したサービスのみ送られます。\n");
+		printf("このコマンドでは指定したサービスグループ上のホストの通知機能は<b>無効になりません</b>。もし有効にしたい場合は「<B>同時にホストも無効にする</b>」をチェックします。\n");
 		break;
 
 	case CMD_ENABLE_SERVICEGROUP_HOST_NOTIFICATIONS:
-		printf("This command is used to enable notifications for all hosts in the specified servicegroup.  Notifications will only be sent out for the\n");
-		printf("host state types you defined in your host definitions.\n");
+		printf("このコマンドは指定したサービスグループ上の全ホストの通知を有効にします。\n");
+		printf("通知はホスト定義で定義したホストのみに送られます。\n");
 		break;
 
 	case CMD_DISABLE_SERVICEGROUP_HOST_NOTIFICATIONS:
-		printf("This command is used to prevent notifications from being sent out for all hosts in the specified servicegroup.  You will have to re-enable notifications for\n");
-		printf("all hosts in this servicegroup before any alerts can be sent out in the future.\n");
+		printf("このコマンドは指定したサービスグループ上の全ホストの通知を無効にします。\n");
+		printf("再度このサービスグループ上の全ホストに通知を有効にするまでどんな警報も通知されません。\n");
 		break;
 
 	case CMD_ENABLE_SERVICEGROUP_SVC_CHECKS:
-		printf("This command is used to enable active checks of all services in the specified servicegroup.  This <i>does not</i> enable active checks of the hosts in the servicegroup unless you check the 'Enable for hosts too' option.\n");
+		printf("このコマンドは指定したサービスグループ上のサービスチェックを有効にします。このコマンドではサービスグループのホストチェックは<b>有効になりません</b>>。有効にしたい場合は「<B>同時にホストも有効にする</B>」にチェックを入れてください。\n");
 		break;
 		
 	case CMD_DISABLE_SERVICEGROUP_SVC_CHECKS:
-		printf("This command is used to disable active checks of all services in the specified servicegroup.  This <i>does not</i> disable checks of the hosts in the servicegroup unless you check the 'Disable for hosts too' option.\n");
+		printf("このコマンドは指定したサービスグループ上のサービスチェックを無効にします。このコマンドではサービスグループのホストチェックは<b>無効になりません</b>>。無効にしたい場合は「<B>同時にホストも無効にする</B>」にチェックを入れてください。\n");
 		break;
 
 	case CMD_SCHEDULE_SERVICEGROUP_HOST_DOWNTIME:
-		printf("This command is used to schedule downtime for all hosts in a particular servicegroup.  During the specified downtime, Nagios will not send notifications out about the hosts.\n");
-		printf("When the scheduled downtime expires, Nagios will send out notifications for the hosts as it normally would.  Scheduled downtimes are preserved\n");
-		printf("across program shutdowns and restarts.  Both the start and end times should be specified in the following format:  <b>mm/dd/yyyy hh:mm:ss</b>.\n");
-		printf("If you select the <i>fixed</i> option, the downtime will be in effect between the start and end times you specify.  If you do not select the <i>fixed</i>\n");
-		printf("option, Nagios will treat this as \"flexible\" downtime.  Flexible downtime starts when a host goes down or becomes unreachable (sometime between the\n");
-		printf("start and end times you specified) and lasts as long as the duration of time you enter.  The duration fields do not apply for fixed dowtime.\n");
+		printf("このコマンドは指定したサービスグループ上の全ホストのダウンタイムをスケジュールします。ダウンタイムを設定するとその間はNagiosはホストに関する通知を行わなくなります。\n");
+		printf("ダウンタイムが経過したらNagiosは通常どおり通知を行います。このスケジュール内容はNagiosが再起動した場合でも保存されます\n");
+		printf("フィールドにダウンタイム開始時間と終了時間を<b>mm/dd/yyy hh:mm:ss</b>形式で入力してください。\n");
+		printf("もし「<B>固定</B>」にチェックを入れると入力した開始時間と終了時間きっちりにスケジュールされます。もし「<B>固定</B>」にチェックを入れない場合はNagiosは\"フレキシブル\"なダウンタイムとします。\n");
+		printf("フレキシブルなダウンタイムとはホストが停止または未到達になる開始時間から経過時間を指定してダウンタイムを決定することです。「<B>固定</B>」にチェックを入れた場合<b>期間</b>を指定する箇所は入力しても無効になります。</b>\n");
 		break;
 
 	case CMD_SCHEDULE_SERVICEGROUP_SVC_DOWNTIME:
-		printf("This command is used to schedule downtime for all services in a particular servicegroup.  During the specified downtime, Nagios will not send notifications out about the services.\n");
-		printf("When the scheduled downtime expires, Nagios will send out notifications for the services as it normally would.  Scheduled downtimes are preserved\n");
-		printf("across program shutdowns and restarts.  Both the start and end times should be specified in the following format:  <b>mm/dd/yyyy hh:mm:ss</b>.\n");
-		printf("If you select the <i>fixed</i> option, the downtime will be in effect between the start and end times you specify.  If you do not select the <i>fixed</i>\n");
-		printf("option, Nagios will treat this as \"flexible\" downtime.  Flexible downtime starts when a service enters a non-OK state (sometime between the\n");
-		printf("start and end times you specified) and lasts as long as the duration of time you enter.  The duration fields do not apply for fixed dowtime.\n");
-		printf("Note that scheduling downtime for services does not automatically schedule downtime for the hosts those services are associated with.  If you want to also schedule downtime for all hosts in the servicegroup, check the 'Schedule downtime for hosts too' option.\n");
+		printf("このコマンドは指定したサービスグループ上の全サービスのダウンタイムをスケジュールします。ダウンタイムを設定するとその間はNagiosはサービスに関する通知を行わなくなります。\n");
+		printf("ダウンタイムが経過したらNagiosは通常どおり通知を行います。このスケジュール内容はNagiosが再起動した場合でも保存されます\n");
+		printf("フィールドにダウンタイム開始時間と終了時間を<b>mm/dd/yyy hh:mm:ss</b>形式で入力してください。\n");
+		printf("もし「<B>固定</B>」にチェックを入れると入力した開始時間と終了時間きっちりにスケジュールされます。もし「<B>固定</B>」にチェックを入れない場合はNagiosは\"フレキシブル\"なダウンタイムとします。\n");
+		printf("フレキシブルなダウンタイムとはホストが停止または未到達になる開始時間から経過時間を指定してダウンタイムを決定することです。「<B>固定</B>」にチェックを入れた場合<b>期間</b>を指定する箇所は入力しても無効になります。</b>\n");
 		break;
 
 	case CMD_SEND_CUSTOM_HOST_NOTIFICATION:
 	case CMD_SEND_CUSTOM_SVC_NOTIFICATION:
-		printf("This command is used to send a custom notification about the specified %s.  Useful in emergencies when you need to notify admins of an issue regarding a monitored system or service.\n",(cmd==CMD_SEND_CUSTOM_HOST_NOTIFICATION)?"host":"service");
-		printf("Custom notifications normally follow the regular notification logic in Nagios.  Selecting the <i>Forced</i> option will force the notification to be sent out, regardless of the time restrictions, whether or not notifications are enabled, etc.  Selecting the <i>Broadcast</i> option causes the notification to be sent out to all normal (non-escalated) and escalated contacts.  These options allow you to override the normal notification logic if you need to get an important message out.\n");
+		printf("このコマンドは%sに対してすぐに通知します。これは監視されているシステムあるいはサービスについて発生した問題を管理者側へ通知する必要がある緊急時において有用です。\n",(cmd==CMD_SEND_CUSTOM_HOST_NOTIFICATION)?"ホスト":"サービス");
+		printf("この作業はNagiosで通常行われる通知作業の後に行われます。「強制的に通知する」を選択した場合、通知機能が有効になっているかや時間による制限が行われているかなどにかかわらず通知を行うようになります。「全員に通知」を選択すると全ての利用者に対して通知を行います。\n");
+		printf("尚、これらの選択はあなたが重要なメッセージを受け取りたいと考えているならば通常の通知よりも優先しておく必要があります。\n");
+
 		break;
 
 	default:
-		printf("Sorry, but no information is available for this command.");
+		printf("このコマンドの情報はありません。");
 	        }
 
 	printf("</TD></TR>\n");
@@ -2815,7 +2796,6 @@
 	lt.tm_wday=0;
 	lt.tm_yday=0;
 
-
 	if(date_format==DATE_FORMAT_EURO)
 		ret=sscanf(buffer,"%02d-%02d-%04d %02d:%02d:%02d",&lt.tm_mday,&lt.tm_mon,&lt.tm_year,&lt.tm_hour,&lt.tm_min,&lt.tm_sec);
 	else if(date_format==DATE_FORMAT_ISO8601 || date_format==DATE_FORMAT_STRICT_ISO8601)
diff -urN nagios-3.2.3.orig/cgi/config.c nagios-3.2.3/cgi/config.c
--- nagios-3.2.3.orig/cgi/config.c	2010-12-12 00:47:55.000000000 +0900
+++ nagios-3.2.3/cgi/config.c	2010-12-12 19:59:07.000000000 +0900
@@ -162,7 +162,7 @@
 
 	/* left column of the first row */
 	printf("<td align=left valign=top width=50%%>\n");
-	display_info_table("Configuration",FALSE,&current_authdata);
+	display_info_table("各種設定-Configuration-",FALSE,&current_authdata);
 	printf("</td>\n");
 
 	/* right hand column of top row */
@@ -173,28 +173,28 @@
 		printf("<table border=0>\n");
 		printf("<form method=\"get\" action=\"%s\">\n",CONFIG_CGI);
 
-		printf("<tr><td align=left class='reportSelectSubTitle'>Object Type:</td></tr>\n");
+		printf("<tr><td align=left class='reportSelectSubTitle'>オブジェクトタイプ:</td></tr>\n");
 		printf("<tr><td align=left class='reportSelectItem'>");
 		printf("<select name='type'>\n");
-		printf("<option value='hosts' %s>Hosts\n",(display_type==DISPLAY_HOSTS)?"SELECTED":"");
-		printf("<option value='hostdependencies' %s>Host Dependencies\n",(display_type==DISPLAY_HOSTDEPENDENCIES)?"SELECTED":"");
-		printf("<option value='hostescalations' %s>Host Escalations\n",(display_type==DISPLAY_HOSTESCALATIONS)?"SELECTED":"");
-		printf("<option value='hostgroups' %s>Host Groups\n",(display_type==DISPLAY_HOSTGROUPS)?"SELECTED":"");
-		printf("<option value='services' %s>Services\n",(display_type==DISPLAY_SERVICES)?"SELECTED":"");
-		printf("<option value='servicegroups' %s>Service Groups\n",(display_type==DISPLAY_SERVICEGROUPS)?"SELECTED":"");
-		printf("<option value='servicedependencies' %s>Service Dependencies\n",(display_type==DISPLAY_SERVICEDEPENDENCIES)?"SELECTED":"");
-		printf("<option value='serviceescalations' %s>Service Escalations\n",(display_type==DISPLAY_SERVICEESCALATIONS)?"SELECTED":"");
-		printf("<option value='contacts' %s>Contacts\n",(display_type==DISPLAY_CONTACTS)?"SELECTED":"");
-		printf("<option value='contactgroups' %s>Contact Groups\n",(display_type==DISPLAY_CONTACTGROUPS)?"SELECTED":"");
-		printf("<option value='timeperiods' %s>Timeperiods\n",(display_type==DISPLAY_TIMEPERIODS)?"SELECTED":"");
-		printf("<option value='commands' %s>Commands\n",(display_type==DISPLAY_COMMANDS)?"SELECTED":"");
-		printf("<option value='command' %s>Command Expansion\n",(display_type==DISPLAY_COMMAND_EXPANSION)?"SELECTED":"");
+		printf("<option value='hosts' %s>ホスト\n",(display_type==DISPLAY_HOSTS)?"SELECTED":"");
+		printf("<option value='hostdependencies' %s>ホスト依存関係\n",(display_type==DISPLAY_HOSTDEPENDENCIES)?"SELECTED":"");
+		printf("<option value='hostescalations' %s>ホストエスカレーション(上位伝達)\n",(display_type==DISPLAY_HOSTESCALATIONS)?"SELECTED":"");
+		printf("<option value='hostgroups' %s>ホストグループ\n",(display_type==DISPLAY_HOSTGROUPS)?"SELECTED":"");
+		printf("<option value='services' %s>サービス\n",(display_type==DISPLAY_SERVICES)?"SELECTED":"");
+		printf("<option value='servicegroups' %s>サービスグループ\n",(display_type==DISPLAY_SERVICEGROUPS)?"SELECTED":"");
+		printf("<option value='servicedependencies' %s>サービス依存関係\n",(display_type==DISPLAY_SERVICEDEPENDENCIES)?"SELECTED":"");
+		printf("<option value='serviceescalations' %s>サービスエスカレーション(上位伝達)\n",(display_type==DISPLAY_SERVICEESCALATIONS)?"SELECTED":"");
+		printf("<option value='contacts' %s>通知先\n",(display_type==DISPLAY_CONTACTS)?"SELECTED":"");
+		printf("<option value='contactgroups' %s>通知先グループ\n",(display_type==DISPLAY_CONTACTGROUPS)?"SELECTED":"");
+		printf("<option value='timeperiods' %s>時間帯\n",(display_type==DISPLAY_TIMEPERIODS)?"SELECTED":"");
+		printf("<option value='commands' %s>コマンド\n",(display_type==DISPLAY_COMMANDS)?"SELECTED":"");
+		printf("<option value='command' %s>拡張コマンド\n",(display_type==DISPLAY_COMMAND_EXPANSION)?"SELECTED":"");
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
 		print_expand_input(display_type);
 
-		printf("<tr><td class='reportSelectItem'><input type='submit' value='Update'></td></tr>\n");
+		printf("<tr><td class='reportSelectItem'><input type='submit' value='更新'></td></tr>\n");
 		printf("</form>\n");
 
 		printf("</table>\n");
@@ -321,14 +321,15 @@
 	printf("Pragma: no-cache\r\n");
 	printf("Last-Modified: %s\r\n",date_time);
 	printf("Expires: %s\r\n",date_time);
-	printf("Content-type: text/html\r\n\r\n");
+	printf("Content-type: text/html;charset=UTF-8\r\n\r\n");
 
 	printf("<html>\n");
 	printf("<head>\n");
+	printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
 	printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
 	printf("<META HTTP-EQUIV='Pragma' CONTENT='no-cache'>\n");
 	printf("<title>\n");
-	printf("Configuration\n");
+	printf("設定\n");
 	printf("</title>\n");
 
 	if(use_stylesheet==TRUE){
@@ -463,52 +464,52 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Host%s%s</DIV></P>\n",
-		(*to_expand=='\0'?"s":" "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>ホスト %s</DIV></P>\n",
+		(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P><DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
 
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Host Name</TH>");
-	printf("<TH CLASS='data'>Alias/Description</TH>");
-	printf("<TH CLASS='data'>Address</TH>");
-	printf("<TH CLASS='data'>Parent Hosts</TH>");
-	printf("<TH CLASS='data'>Max. Check Attempts</TH>");
-	printf("<TH CLASS='data'>Check Interval</TH>\n");
-	printf("<TH CLASS='data'>Retry Interval</TH>\n");
-	printf("<TH CLASS='data'>Host Check Command</TH>");
-	printf("<TH CLASS='data'>Check Period</TH>");
+	printf("<TH CLASS='data'>ホスト名</TH>");
+	printf("<TH CLASS='data'>エイリアス/説明</TH>");
+	printf("<TH CLASS='data'>アドレス</TH>");
+	printf("<TH CLASS='data'>親ホスト</TH>");
+	printf("<TH CLASS='data'>最大チェック数</TH>");
+	printf("<TH CLASS='data'>チェック間隔</TH>\n");
+	printf("<TH CLASS='data'>再試行間隔</TH>\n");
+	printf("<TH CLASS='data'>ホストチェックコマンド</TH>");
+	printf("<TH CLASS='data'>チェック期間</TH>");
 	printf("<TH CLASS='data'>Obsess Over</TH>\n");
-	printf("<TH CLASS='data'>Enable Active Checks</TH>\n");
-	printf("<TH CLASS='data'>Enable Passive Checks</TH>\n");
-	printf("<TH CLASS='data'>Check Freshness</TH>\n");
-	printf("<TH CLASS='data'>Freshness Threshold</TH>\n");
-	printf("<TH CLASS='data'>Default Contacts/Groups</TH>\n");
-	printf("<TH CLASS='data'>Notification Interval</TH>");
-	printf("<TH CLASS='data'>First Notification Delay</TH>");
-	printf("<TH CLASS='data'>Notification Options</TH>");
-	printf("<TH CLASS='data'>Notification Period</TH>");
-	printf("<TH CLASS='data'>Event Handler</TH>");
-	printf("<TH CLASS='data'>Enable Event Handler</TH>");
-	printf("<TH CLASS='data'>Stalking Options</TH>\n");
-	printf("<TH CLASS='data'>Enable Flap Detection</TH>");
-	printf("<TH CLASS='data'>Low Flap Threshold</TH>");
-	printf("<TH CLASS='data'>High Flap Threshold</TH>");
-	printf("<TH CLASS='data'>Flap Detection Options</TH>\n");
-	printf("<TH CLASS='data'>Process Performance Data</TH>");
-	printf("<TH CLASS='data'>Enable Failure Prediction</TH>");
-	printf("<TH CLASS='data'>Failure Prediction Options</TH>");
-	printf("<TH CLASS='data'>Notes</TH>");
-	printf("<TH CLASS='data'>Notes URL</TH>");
-	printf("<TH CLASS='data'>Action URL</TH>");
-	printf("<TH CLASS='data'>2-D Coords</TH>");
-	printf("<TH CLASS='data'>3-D Coords</TH>");
-	printf("<TH CLASS='data'>Statusmap Image</TH>");
-	printf("<TH CLASS='data'>VRML Image</TH>");
-	printf("<TH CLASS='data'>Logo Image</TH>");
-	printf("<TH CLASS='data'>Image Alt</TH>");
-	printf("<TH CLASS='data'>Retention Options</TH>");
+	printf("<TH CLASS='data'>アクティブチェック</TH>\n");
+	printf("<TH CLASS='data'>パッシブチェック</TH>\n");
+	printf("<TH CLASS='data'>フレッシュチェック</TH>\n");
+	printf("<TH CLASS='data'>フレッシュ閾値</TH>\n");
+	printf("<TH CLASS='data'>デフォルトの通知先/グループ</TH>\n");
+	printf("<TH CLASS='data'>通知間隔</TH>");
+	printf("<TH CLASS='data'>初回通知遅延時間</TH>");
+	printf("<TH CLASS='data'>通知オプション</TH>");
+	printf("<TH CLASS='data'>通知時間帯</TH>");
+	printf("<TH CLASS='data'>イベントハンドラ</TH>");
+	printf("<TH CLASS='data'>イベントハンドラの有効化</TH>");
+	printf("<TH CLASS='data'>追跡オプション</TH>\n");
+	printf("<TH CLASS='data'>フラップ検知設定</TH>");
+	printf("<TH CLASS='data'>フラップ低閾値</TH>");
+	printf("<TH CLASS='data'>フラップ高閾値</TH>");
+	printf("<TH CLASS='data'>フラップ検知オプション</TH>\n");
+	printf("<TH CLASS='data'>パフォーマンスデータ処理</TH>");
+	printf("<TH CLASS='data'>予測機能</TH>");
+	printf("<TH CLASS='data'>予測機能オプション</TH>");
+	printf("<TH CLASS='data'>記録</TH>");
+	printf("<TH CLASS='data'>記録URL</TH>");
+	printf("<TH CLASS='data'>動作URL</TH>");
+	printf("<TH CLASS='data'>2-D 位置</TH>");
+	printf("<TH CLASS='data'>3-D 位置</TH>");
+	printf("<TH CLASS='data'>ステータスマップ画像</TH>");
+	printf("<TH CLASS='data'>VRML画像</TH>");
+	printf("<TH CLASS='data'>Logo画像</TH>");
+	printf("<TH CLASS='data'>画像代替文字</TH>");
+	printf("<TH CLASS='data'>ステータス保持オプション</TH>");
 	printf("</TR>\n");
 
 	/* check all the hosts... */
@@ -568,19 +569,19 @@
 			printf("<A HREF='%s?type=timeperiods&expand=%s'>%s</A>",CONFIG_CGI,url_encode(temp_host->check_period),html_encode(temp_host->check_period,FALSE));
 		printf("</TD>\n");
 
-		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_host->obsess_over_host==TRUE)?"Yes":"No");
+		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_host->obsess_over_host==TRUE)?"有効":"無効");
 
-		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_host->checks_enabled==TRUE)?"Yes":"No");
+		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_host->checks_enabled==TRUE)?"有効":"無効");
 
-		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_host->accept_passive_host_checks==TRUE)?"Yes":"No");
+		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_host->accept_passive_host_checks==TRUE)?"有効":"無効");
 
-		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_host->check_freshness==TRUE)?"Yes":"No");
+		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_host->check_freshness==TRUE)?"有効":"無効");
 
 		printf("<TD CLASS='%s'>",bg_class);
 		if(temp_host->freshness_threshold==0)
-			printf("Auto-determined value\n");
+			printf("自動設定\n");
 		else
-			printf("%d seconds\n",temp_host->freshness_threshold);
+			printf("%d 秒\n",temp_host->freshness_threshold);
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
@@ -605,7 +606,7 @@
 		printf("</TD>\n");
 
 		get_interval_time_string(temp_host->notification_interval,time_string,sizeof(time_string));
-		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_host->notification_interval==0)?"<i>No Re-notification</I>":html_encode(time_string,FALSE));
+		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_host->notification_interval==0)?"<i>再通知無し</I>":html_encode(time_string,FALSE));
 
 		get_interval_time_string(temp_host->first_notification_delay,time_string,sizeof(time_string));
 		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,time_string);
@@ -614,26 +615,26 @@
 		options=0;
 		if(temp_host->notify_on_down==TRUE){
 			options=1;
-			printf("Down");
+			printf("停止(DOWN)");
 		        }
 		if(temp_host->notify_on_unreachable==TRUE){
-			printf("%sUnreachable",(options)?", ":"");
+			printf("%s未到達(UNREACHABLE)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_host->notify_on_recovery==TRUE){
-			printf("%sRecovery",(options)?", ":"");
+			printf("%s復旧(RECOVERY)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_host->notify_on_flapping==TRUE){
-			printf("%sFlapping",(options)?", ":"");
+			printf("%sフラッピング(FLAPPING)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_host->notify_on_downtime==TRUE){
-			printf("%sDowntime",(options)?", ":"");
+			printf("%sダウンタイム",(options)?", ":"");
 			options=1;
 		        }
 		if(options==0)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
@@ -652,34 +653,34 @@
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
-		printf("%s\n",(temp_host->event_handler_enabled==TRUE)?"Yes":"No");
+		printf("%s\n",(temp_host->event_handler_enabled==TRUE)?"有効":"無効");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
 		options=0;
 		if(temp_host->stalk_on_up==TRUE){
 			options=1;
-			printf("Up");
+			printf("稼動(UP)");
 		        }
 		if(temp_host->stalk_on_down==TRUE){
-			printf("%sDown",(options)?", ":"");
+			printf("%s停止(DOWN)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_host->stalk_on_unreachable==TRUE){
-			printf("%sUnreachable",(options)?", ":"");
+			printf("%s未到達(UNREACHABLE)",(options)?", ":"");
 			options=1;
 		        }
 		if(options==0)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
-		printf("%s\n",(temp_host->flap_detection_enabled==TRUE)?"Yes":"No");
+		printf("%s\n",(temp_host->flap_detection_enabled==TRUE)?"有効":"無効");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
 		if(temp_host->low_flap_threshold==0.0)
-			printf("Program-wide value\n");
+			printf("グローバル設定\n");
 		else
 			printf("%3.1f%%\n",temp_host->low_flap_threshold);
 		printf("</TD>\n");
@@ -695,26 +696,26 @@
 		options=0;
 		if(temp_host->flap_detection_on_up==TRUE){
 			options=1;
-			printf("Up");
+			printf("稼動(UP)");
 		        }
 		if(temp_host->flap_detection_on_down==TRUE){
-			printf("%sDown",(options)?", ":"");
+			printf("%s停止(DOWN)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_host->flap_detection_on_unreachable==TRUE){
-			printf("%sUnreachable",(options)?", ":"");
+			printf("%s未到達(UNREACHABLE)",(options)?", ":"");
 			options=1;
 		        }
 		if(options==0)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
-		printf("%s\n",(temp_host->process_performance_data==TRUE)?"Yes":"No");
+		printf("%s\n",(temp_host->process_performance_data==TRUE)?"有効":"無効");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
-		printf("%s\n",(temp_host->failure_prediction_enabled==TRUE)?"Yes":"No");
+		printf("%s\n",(temp_host->failure_prediction_enabled==TRUE)?"有効":"無効");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_host->failure_prediction_options==NULL)?"&nbsp;":html_encode(temp_host->failure_prediction_options,FALSE));
@@ -759,14 +760,14 @@
 		options=0;
 		if(temp_host->retain_status_information==TRUE){
 			options=1;
-			printf("Status Information");
+			printf("ステータス情報");
 		        }
 		if(temp_host->retain_nonstatus_information==TRUE){
-			printf("%sNon-Status Information",(options==1)?", ":"");
+			printf("%sステータス情報以外",(options==1)?", ":"");
 			options=1;
 		        }
 		if(options==0)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("</TR>\n");
@@ -793,20 +794,20 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Host Group%s%s</DIV></P>\n",
-		(*to_expand=='\0'?"s":" "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>ホストグループ %s</DIV></P>\n",
+		(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P>\n");
 	printf("<DIV ALIGN=CENTER>\n");
 
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Group Name</TH>");
-	printf("<TH CLASS='data'>Description</TH>");
-	printf("<TH CLASS='data'>Host Members</TH>");
-	printf("<TH CLASS='data'>Notes</TH>");
-	printf("<TH CLASS='data'>Notes URL</TH>");
-	printf("<TH CLASS='data'>Action URL</TH>");
+	printf("<TH CLASS='data'>グループ名</TH>");
+	printf("<TH CLASS='data'>説明</TH>");
+	printf("<TH CLASS='data'>このホストのメンバー</TH>");
+	printf("<TH CLASS='data'>記録</TH>");
+	printf("<TH CLASS='data'>記録URL</TH>");
+	printf("<TH CLASS='data'>動作URL</TH>");
 	printf("</TR>\n");
 
 	/* check all the hostgroups... */
@@ -868,20 +869,20 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Service Group%s%s</DIV></P>\n",
-		(*to_expand=='\0'?"s":" "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>サービスグループ %s</DIV></P>\n",
+		(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P>\n");
 	printf("<DIV ALIGN=CENTER>\n");
 
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Group Name</TH>");
-	printf("<TH CLASS='data'>Description</TH>");
-	printf("<TH CLASS='data'>Service Members</TH>");
-	printf("<TH CLASS='data'>Notes</TH>");
-	printf("<TH CLASS='data'>Notes URL</TH>");
-	printf("<TH CLASS='data'>Action URL</TH>");
+	printf("<TH CLASS='data'>グループ名</TH>");
+	printf("<TH CLASS='data'>説明</TH>");
+	printf("<TH CLASS='data'>このサービスのメンバー</TH>");
+	printf("<TH CLASS='data'>記録</TH>");
+	printf("<TH CLASS='data'>記録URL</TH>");
+	printf("<TH CLASS='data'>動作URL</TH>");
 	printf("</TR>\n");
 
 	/* check all the servicegroups... */
@@ -947,8 +948,8 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Contact%s%s</DIV></P>\n",
-		(*to_expand=='\0'?"s":" "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>通知先 %s</DIV></P>\n",
+		(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P>\n");
 	printf("<DIV ALIGN=CENTER>\n");
@@ -956,17 +957,17 @@
 	printf("<TABLE CLASS='data'>\n");
     
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Contact Name</TH>");
-	printf("<TH CLASS='data'>Alias</TH>");
-	printf("<TH CLASS='data'>Email Address</TH>");
-	printf("<TH CLASS='data'>Pager Address/Number</TH>");
-	printf("<TH CLASS='data'>Service Notification Options</TH>");
-	printf("<TH CLASS='data'>Host Notification Options</TH>");
-	printf("<TH CLASS='data'>Service Notification Period</TH>");
-	printf("<TH CLASS='data'>Host Notification Period</TH>");
-	printf("<TH CLASS='data'>Service Notification Commands</TH>");
-	printf("<TH CLASS='data'>Host Notification Commands</TH>");
-	printf("<TH CLASS='data'>Retention Options</TH>");
+	printf("<TH CLASS='data'>通知先名</TH>");
+	printf("<TH CLASS='data'>エイリアス</TH>");
+	printf("<TH CLASS='data'>メールアドレス</TH>");
+	printf("<TH CLASS='data'>携帯番号/アドレス</TH>");
+	printf("<TH CLASS='data'>サービス通知オプション</TH>");
+	printf("<TH CLASS='data'>ホスト通知オプション</TH>");
+	printf("<TH CLASS='data'>サービス通知期間</TH>");
+	printf("<TH CLASS='data'>ホスト通知期間</TH>");
+	printf("<TH CLASS='data'>サービス通知コマンド</TH>");
+	printf("<TH CLASS='data'>ホスト通知コマンド</TH>");
+	printf("<TH CLASS='data'>保持オプション</TH>");
 	printf("</TR>\n");
 	
 	/* check all contacts... */
@@ -992,56 +993,56 @@
 		options=0;
 		if(temp_contact->notify_on_service_unknown==TRUE){
 			options=1;
-			printf("Unknown");
+			printf("不明(UNKNOWN)");
 		        }
 		if(temp_contact->notify_on_service_warning==TRUE){
-			printf("%sWarning",(options)?", ":"");
+			printf("%s警告(WARNING)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_contact->notify_on_service_critical==TRUE){
-			printf("%sCritical",(options)?", ":"");
+			printf("%s異常(CRITICAL)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_contact->notify_on_service_recovery==TRUE){
-			printf("%sRecovery",(options)?", ":"");
+			printf("%s復旧(RECOVERY)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_contact->notify_on_service_flapping==TRUE){
-			printf("%sFlapping",(options)?", ":"");
+			printf("%sフラッピング(FLAPPING)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_contact->notify_on_service_downtime==TRUE){
-			printf("%sDowntime",(options)?", ":"");
+			printf("%sダウンタイム",(options)?", ":"");
 			options=1;
 		        }
 		if(!options)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
 		options=0;
 		if(temp_contact->notify_on_host_down==TRUE){
 			options=1;
-			printf("Down");
+			printf("停止(DOWN)");
 		        }
 		if(temp_contact->notify_on_host_unreachable==TRUE){
-			printf("%sUnreachable",(options)?", ":"");
+			printf("%s未到達(UNREACHABLE)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_contact->notify_on_host_recovery==TRUE){
-			printf("%sRecovery",(options)?", ":"");
+			printf("%s復旧(RECOVERY)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_contact->notify_on_host_flapping==TRUE){
-			printf("%sFlapping",(options)?", ":"");
+			printf("%sフラッピング(FLAPPING)",(options)?", ":"");
 			options=1;
 		        }
 		if(temp_contact->notify_on_host_downtime==TRUE){
-			printf("%sDowntime",(options)?", ":"");
+			printf("%sダウンタイム",(options)?", ":"");
 			options=1;
 		        }
 		if(!options)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>\n",bg_class);
@@ -1071,7 +1072,7 @@
 			found=TRUE;
 		        }
 		if(found==FALSE)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
@@ -1087,21 +1088,21 @@
 			found=TRUE;
 		        }
 		if(found==FALSE)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
 		options=0;
 		if(temp_contact->retain_status_information==TRUE){
 			options=1;
-			printf("Status Information");
+			printf("ステータス情報");
 		        }
 		if(temp_contact->retain_nonstatus_information==TRUE){
-			printf("%sNon-Status Information",(options==1)?", ":"");
+			printf("%sステータス情報以外",(options==1)?", ":"");
 			options=1;
 		        }
 		if(options==0)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("</TR>\n");
@@ -1129,8 +1130,8 @@
 	        }
 
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Contact Group%s%s</DIV></P>\n",
-		(*to_expand=='\0'?"s":" "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>通知先グループ %s</DIV></P>\n",
+		(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P>\n");
 	printf("<DIV ALIGN=CENTER>\n");
@@ -1138,9 +1139,9 @@
 	printf("<TABLE BORDER=0 CELLSPACING=3 CELLPADDING=0>\n");
 
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Group Name</TH>\n");
-	printf("<TH CLASS='data'>Description</TH>\n");
-	printf("<TH CLASS='data'>Contact Members</TH>\n");
+	printf("<TH CLASS='data'>グループ名</TH>\n");
+	printf("<TH CLASS='data'>説明</TH>\n");
+	printf("<TH CLASS='data'>このグループのメンバー</TH>\n");
 	printf("</TR>\n");
 
 	/* check all the contact groups... */
@@ -1203,7 +1204,8 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Service%s%s</DIV></P>\n",
+	/* @TODO 未翻訳 */
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>サービス%s%s</DIV></P>\n",
 		(*to_expand=='\0'?"s":"s Named or on Host "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P>\n");
@@ -1211,45 +1213,45 @@
 
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data' COLSPAN=2>Service</TH>");
+	printf("<TH CLASS='data' COLSPAN=2>サービス</TH>");
 	printf("</TR>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Host</TH>\n");
-	printf("<TH CLASS='data'>Description</TH>\n");
-	printf("<TH CLASS='data'>Max. Check Attempts</TH>\n");
-	printf("<TH CLASS='data'>Normal Check Interval</TH>\n");
-	printf("<TH CLASS='data'>Retry Check Interal</TH>\n");
-	printf("<TH CLASS='data'>Check Command</TH>\n");
-	printf("<TH CLASS='data'>Check Period</TH>\n");
-	printf("<TH CLASS='data'>Parallelize</TH>\n");
+	printf("<TH CLASS='data'>ホスト</TH>\n");
+	printf("<TH CLASS='data'>説明</TH>\n");
+	printf("<TH CLASS='data'>最大チェック数</TH>\n");
+	printf("<TH CLASS='data'>通常のチェック間隔</TH>\n");
+	printf("<TH CLASS='data'>再試行のチェック間隔</TH>\n");
+	printf("<TH CLASS='data'>チェックコマンド</TH>\n");
+	printf("<TH CLASS='data'>チェック時間帯</TH>\n");
+	printf("<TH CLASS='data'>並列処理</TH>\n");
 	printf("<TH CLASS='data'>Volatile</TH>\n");
 	printf("<TH CLASS='data'>Obsess Over</TH>\n");
-	printf("<TH CLASS='data'>Enable Active Checks</TH>\n");
-	printf("<TH CLASS='data'>Enable Passive Checks</TH>\n");
-	printf("<TH CLASS='data'>Check Freshness</TH>\n");
-	printf("<TH CLASS='data'>Freshness Threshold</TH>\n");
-	printf("<TH CLASS='data'>Default Contacts/Groups</TH>\n");
-	printf("<TH CLASS='data'>Enable Notifications</TH>\n");
-	printf("<TH CLASS='data'>Notification Interval</TH>\n");
-	printf("<TH CLASS='data'>First Notification Delay</TH>\n");
-	printf("<TH CLASS='data'>Notification Options</TH>\n");
-	printf("<TH CLASS='data'>Notification Period</TH>\n");
-	printf("<TH CLASS='data'>Event Handler</TH>");
-	printf("<TH CLASS='data'>Enable Event Handler</TH>");
-	printf("<TH CLASS='data'>Stalking Options</TH>\n");
-	printf("<TH CLASS='data'>Enable Flap Detection</TH>");
-	printf("<TH CLASS='data'>Low Flap Threshold</TH>");
-	printf("<TH CLASS='data'>High Flap Threshold</TH>");
-	printf("<TH CLASS='data'>Flap Detection Options</TH>");
-	printf("<TH CLASS='data'>Process Performance Data</TH>");
-	printf("<TH CLASS='data'>Enable Failure Prediction</TH>");
-	printf("<TH CLASS='data'>Failure Prediction Options</TH>");
-	printf("<TH CLASS='data'>Notes</TH>");
-	printf("<TH CLASS='data'>Notes URL</TH>");
-	printf("<TH CLASS='data'>Action URL</TH>");
-	printf("<TH CLASS='data'>Logo Image</TH>");
-	printf("<TH CLASS='data'>Image Alt</TH>");
-	printf("<TH CLASS='data'>Retention Options</TH>");
+	printf("<TH CLASS='data'>アクティブチェック</TH>\n");
+	printf("<TH CLASS='data'>パッシブチェック</TH>\n");
+	printf("<TH CLASS='data'>フレッシュチェック</TH>\n");
+	printf("<TH CLASS='data'>フレッシュ閾値</TH>\n");
+	printf("<TH CLASS='data'>デフォルトの通知先/グループ</TH>\n");
+	printf("<TH CLASS='data'>通知</TH>\n");
+	printf("<TH CLASS='data'>通知間隔</TH>\n");
+	printf("<TH CLASS='data'>初回通知遅延時間</TH>\n");
+	printf("<TH CLASS='data'>通知オプション</TH>\n");
+	printf("<TH CLASS='data'>通知時間帯</TH>\n");
+	printf("<TH CLASS='data'>イベントハンドラ</TH>");
+	printf("<TH CLASS='data'>イベントハンドラの有効化</TH>");
+	printf("<TH CLASS='data'>追跡オプション</TH>\n");
+	printf("<TH CLASS='data'>フラップ検知設定</TH>");
+	printf("<TH CLASS='data'>フラップ低閾値</TH>");
+	printf("<TH CLASS='data'>フラップ高閾値</TH>");
+	printf("<TH CLASS='data'>フラップ検知オプション</TH>");
+	printf("<TH CLASS='data'>パフォーマンスデータ処理</TH>");
+	printf("<TH CLASS='data'>予測機能</TH>");
+	printf("<TH CLASS='data'>予測機能オプション</TH>");
+	printf("<TH CLASS='data'>記録</TH>");
+	printf("<TH CLASS='data'>記録URL</TH>");
+	printf("<TH CLASS='data'>動作URL</TH>");
+	printf("<TH CLASS='data'>Logo画像</TH>");
+	printf("<TH CLASS='data'>画像代替文字</TH>");
+	printf("<TH CLASS='data'>ステータス保持オプション</TH>");
 	printf("</TR>\n");
 
 	/* check all the services... */
@@ -1297,23 +1299,23 @@
 			printf("<A HREF='%s?type=timeperiods&expand=%s'>%s</A>",CONFIG_CGI,url_encode(temp_service->check_period),html_encode(temp_service->check_period,FALSE));
 		printf("</TD>\n");
 
-		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->parallelize==TRUE)?"Yes":"No");
+		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->parallelize==TRUE)?"有効":"無効");
 
-		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->is_volatile!=FALSE)?"Yes":"No");
+		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->is_volatile!=FALSE)?"有効":"無効");
 
-		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->obsess_over_service==TRUE)?"Yes":"No");
+		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->obsess_over_service==TRUE)?"有効":"無効");
 
-		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->checks_enabled==TRUE)?"Yes":"No");
+		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->checks_enabled==TRUE)?"有効":"無効");
 
-		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->accept_passive_service_checks==TRUE)?"Yes":"No");
+		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->accept_passive_service_checks==TRUE)?"有効":"無効");
 
-		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->check_freshness==TRUE)?"Yes":"No");
+		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->check_freshness==TRUE)?"有効":"無効");
 
 		printf("<TD CLASS='%s'>",bg_class);
 		if(temp_service->freshness_threshold==0)
-			printf("Auto-determined value\n");
+			printf("自動設定\n");
 		else
-			printf("%d seconds\n",temp_service->freshness_threshold);
+			printf("%d 秒\n",temp_service->freshness_threshold);
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
@@ -1322,6 +1324,7 @@
 			contact++;
 			if(contact>1)
 				printf(", ");
+
 			printf("<A HREF='%s?type=contacts&expand=%s'>%s</A>",CONFIG_CGI,url_encode(temp_contactsmember->contact_name),html_encode(temp_contactsmember->contact_name,FALSE));
 	                }
 		for(temp_contactgroupsmember=temp_service->contact_groups;temp_contactgroupsmember!=NULL;temp_contactgroupsmember=temp_contactgroupsmember->next){
@@ -1335,7 +1338,7 @@
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
-		printf("%s\n",(temp_service->notifications_enabled==TRUE)?"Yes":"No");
+		printf("%s\n",(temp_service->notifications_enabled==TRUE)?"有効":"無効");
 		printf("</TD>\n");
 
 		get_interval_time_string(temp_service->notification_interval,time_string,sizeof(time_string));
@@ -1348,30 +1351,30 @@
 		options=0;
 		if(temp_service->notify_on_unknown==TRUE){
 			options=1;
-			printf("Unknown");
+			printf("不明(UNKNOWN)");
 	                }
 		if(temp_service->notify_on_warning==TRUE){
-			printf("%sWarning",(options)?", ":"");
+			printf("%s警告(WARNING)",(options)?", ":"");
 			options=1;
 	                }
 		if(temp_service->notify_on_critical==TRUE){
-			printf("%sCritical",(options)?", ":"");
+			printf("%s異常(CRITICAL)",(options)?", ":"");
 			options=1;
 	                }
 		if(temp_service->notify_on_recovery==TRUE){
-			printf("%sRecovery",(options)?", ":"");
+			printf("%s復旧(RECOVERY)",(options)?", ":"");
 			options=1;
 	                }
 		if(temp_service->notify_on_flapping==TRUE){
-			printf("%sFlapping",(options)?", ":"");
+			printf("%sフラッピング(FLAPPING)",(options)?", ":"");
 			options=1;
 	                }
 		if(temp_service->notify_on_downtime==TRUE){
-			printf("%sDowntime",(options)?", ":"");
+			printf("%sダウンタイム",(options)?", ":"");
 			options=1;
 	                }
 		if(!options)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 		printf("<TD CLASS='%s'>",bg_class);
 		if(temp_service->notification_period==NULL)
@@ -1388,45 +1391,45 @@
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
-		printf("%s\n",(temp_service->event_handler_enabled==TRUE)?"Yes":"No");
+		printf("%s\n",(temp_service->event_handler_enabled==TRUE)?"有効":"無効");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
 		options=0;
 		if(temp_service->stalk_on_ok==TRUE){
 			options=1;
-			printf("Ok");
+			printf("正常(OK)");
 	                }
 		if(temp_service->stalk_on_warning==TRUE){
-			printf("%sWarning",(options)?", ":"");
+			printf("%s警告(WARNING)",(options)?", ":"");
 			options=1;
 	                }
 		if(temp_service->stalk_on_unknown==TRUE){
-			printf("%sUnknown",(options)?", ":"");
+			printf("%s不明(UNKNOWN)",(options)?", ":"");
 			options=1;
 	                }
 		if(temp_service->stalk_on_critical==TRUE){
-			printf("%sCritical",(options)?", ":"");
+			printf("%s異常(CRITICAL)",(options)?", ":"");
 			options=1;
 	                }
 		if(options==0)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
-		printf("%s\n",(temp_service->flap_detection_enabled==TRUE)?"Yes":"No");
+		printf("%s\n",(temp_service->flap_detection_enabled==TRUE)?"有効":"無効");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
 		if(temp_service->low_flap_threshold==0.0)
-			printf("Program-wide value\n");
+			printf("グローバル設定\n");
 		else
 			printf("%3.1f%%\n",temp_service->low_flap_threshold);
 		printf("</TD>\n");
 			
 		printf("<TD CLASS='%s'>",bg_class);
 		if(temp_service->high_flap_threshold==0.0)
-			printf("Program-wide value\n");
+			printf("グローバル設定\n");
 		else
 			printf("%3.1f%%\n",temp_service->high_flap_threshold);
 		printf("</TD>\n");
@@ -1435,30 +1438,30 @@
 		options=0;
 		if(temp_service->flap_detection_on_ok==TRUE){
 			options=1;
-			printf("Ok");
+			printf("稼動(UP)");
 	                }
 		if(temp_service->flap_detection_on_warning==TRUE){
-			printf("%sWarning",(options)?", ":"");
+			printf("%s警告(WARNING)",(options)?", ":"");
 			options=1;
 	                }
 		if(temp_service->flap_detection_on_unknown==TRUE){
-			printf("%sUnknown",(options)?", ":"");
+			printf("%s不明(UNKNOWN)",(options)?", ":"");
 			options=1;
 	                }
 		if(temp_service->flap_detection_on_critical==TRUE){
-			printf("%sCritical",(options)?", ":"");
+			printf("%s異常(CRITICAL)",(options)?", ":"");
 			options=1;
 	                }
 		if(options==0)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
-		printf("%s\n",(temp_service->process_performance_data==TRUE)?"Yes":"No");
+		printf("%s\n",(temp_service->process_performance_data==TRUE)?"有効":"無効");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>",bg_class);
-		printf("%s\n",(temp_service->failure_prediction_enabled==TRUE)?"Yes":"No");
+		printf("%s\n",(temp_service->failure_prediction_enabled==TRUE)?"有効":"無効");
 		printf("</TD>\n");
 
 		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,(temp_service->failure_prediction_options==NULL)?"&nbsp;":html_encode(temp_service->failure_prediction_options,FALSE));
@@ -1483,14 +1486,14 @@
 		options=0;
 		if(temp_service->retain_status_information==TRUE){
 			options=1;
-			printf("Status Information");
+			printf("ステータス情報");
 	                }
 		if(temp_service->retain_nonstatus_information==TRUE){
-			printf("%sNon-Status Information",(options==1)?", ":"");
+			printf("%sステータス情報以外",(options==1)?", ":"");
 			options=1;
 	                }
 		if(options==0)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 		
 		printf("</TR>\n");
@@ -1529,19 +1532,19 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Time Period%s%s</DIV></P>\n",
-		(*to_expand=='\0'?"s":" "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>時間帯 %s</DIV></P>\n",
+		(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P>\n");
 	printf("<DIV ALIGN=CENTER>\n");
 
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Name</TH>\n");
-	printf("<TH CLASS='data'>Alias/Description</TH>\n");
-	printf("<TH CLASS='data'>Exclusions</TH>\n");
-	printf("<TH CLASS='data'>Days/Dates</TH>\n");
-	printf("<TH CLASS='data'>Times</TH>\n");
+	printf("<TH CLASS='data'>名前</TH>\n");
+	printf("<TH CLASS='data'>エイリアス/説明</TH>\n");
+	printf("<TH CLASS='data'>除外</TH>\n");
+	printf("<TH CLASS='data'>曜日/日付</TH>\n");
+	printf("<TH CLASS='data'>時間</TH>\n");
 	printf("</TR>\n");
 
 	/* check all the time periods... */
@@ -1714,12 +1717,12 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Command%s%s</DIV></P>\n",
-		(*to_expand=='\0'?"s":" "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>コマンド %s</DIV></P>\n",
+		(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P><DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
-	printf("<TR><TH CLASS='data'>Command Name</TH><TH CLASS='data'>Command Line</TH></TR>\n");
+	printf("<TR><TH CLASS='data'>コマンド名</TH><TH CLASS='data'>コマンドライン</TH></TR>\n");
 
 	/* check all commands */
 	for(temp_command=command_list;temp_command!=NULL;temp_command=temp_command->next) if (((*to_expand)=='\0')||(!strcmp(to_expand,temp_command->name))){
@@ -1761,7 +1764,8 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Service Dependencie%s%s</DIV></P>\n",
+	/* @TODO 未翻訳 */
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>サービス依存関係%s%s</DIV></P>\n",
 		(*to_expand=='\0'?"s":"s Involving Host "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P>\n");
@@ -1769,17 +1773,17 @@
 
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data' COLSPAN=2>Dependent Service</TH>");
-	printf("<TH CLASS='data' COLSPAN=2>Master Service</TH>");
+	printf("<TH CLASS='data' COLSPAN=2>依存サービス</TH>");
+	printf("<TH CLASS='data' COLSPAN=2>親サービス</TH>");
 	printf("</TR>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Host</TH>");
-	printf("<TH CLASS='data'>Service</TH>");
-	printf("<TH CLASS='data'>Host</TH>");
-	printf("<TH CLASS='data'>Service</TH>");
-	printf("<TH CLASS='data'>Dependency Type</TH>");
-	printf("<TH CLASS='data'>Dependency Period</TH>");
-	printf("<TH CLASS='data'>Dependency Failure Options</TH>");
+	printf("<TH CLASS='data'>ホスト</TH>");
+	printf("<TH CLASS='data'>サービス</TH>");
+	printf("<TH CLASS='data'>ホスト</TH>");
+	printf("<TH CLASS='data'>サービス</TH>");
+	printf("<TH CLASS='data'>依存タイプ</TH>");
+	printf("<TH CLASS='data'>依存期間</TH>");
+	printf("<TH CLASS='data'>依存失敗オプション</TH>");
 	printf("</TR>\n");
 
 	/* check all the service dependencies... */
@@ -1807,7 +1811,7 @@
 		printf("<TD CLASS='%s'><A HREF='%s?type=services&expand=%s#%s;",bg_class,CONFIG_CGI,url_encode(temp_sd->host_name),url_encode(temp_sd->host_name));
 		printf("%s'>%s</A></TD>\n",url_encode(temp_sd->service_description),html_encode(temp_sd->service_description,FALSE));
 
-		printf("<TD CLASS='%s'>%s</TD>",bg_class,(temp_sd->dependency_type==NOTIFICATION_DEPENDENCY)?"Notification":"Check Execution");
+		printf("<TD CLASS='%s'>%s</TD>",bg_class,(temp_sd->dependency_type==NOTIFICATION_DEPENDENCY)?"通知":"チェック実行");
 
 		printf("<TD CLASS='%s'>",bg_class);
 		if(temp_sd->dependency_period==NULL)
@@ -1819,23 +1823,23 @@
 		printf("<TD CLASS='%s'>",bg_class);
 		options=FALSE;
 		if(temp_sd->fail_on_ok==TRUE){
-			printf("Ok");
+			printf("正常(OK)");
 			options=TRUE;
 		        }
 		if(temp_sd->fail_on_warning==TRUE){
-			printf("%sWarning",(options==TRUE)?", ":"");
+			printf("%s警告(WARNING)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(temp_sd->fail_on_unknown==TRUE){
-			printf("%sUnknown",(options==TRUE)?", ":"");
+			printf("%s不明(UNKNOWN)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(temp_sd->fail_on_critical==TRUE){
-			printf("%sCritical",(options==TRUE)?", ":"");
+			printf("%s異常(CRITICAL)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(temp_sd->fail_on_pending==TRUE){
-			printf("%sPending",(options==TRUE)?", ":"");
+			printf("%s未解決(PENDING)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		printf("</TD>\n");
@@ -1868,7 +1872,8 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Service Escalation%s%s</DIV></P>\n",
+	/* @TODO 未翻訳 */
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>サービスエスカレーション%s%s</DIV></P>\n",
 		(*to_expand=='\0'?"s":"s on Host "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P>\n");
@@ -1876,17 +1881,17 @@
 
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data' COLSPAN=2>Service</TH>");
+	printf("<TH CLASS='data' COLSPAN=2>サービス</TH>");
 	printf("</TR>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Host</TH>");
-	printf("<TH CLASS='data'>Description</TH>");
-	printf("<TH CLASS='data'>Contacts/Groups</TH>");
-	printf("<TH CLASS='data'>First Notification</TH>");
-	printf("<TH CLASS='data'>Last Notification</TH>");
-	printf("<TH CLASS='data'>Notification Interval</TH>");
-	printf("<TH CLASS='data'>Escalation Period</TH>");
-	printf("<TH CLASS='data'>Escalation Options</TH>");
+	printf("<TH CLASS='data'>ホスト</TH>");
+	printf("<TH CLASS='data'>説明</TH>");
+	printf("<TH CLASS='data'>通知先/グループ</TH>");
+	printf("<TH CLASS='data'>初回通知</TH>");
+	printf("<TH CLASS='data'>最終通知</TH>");
+	printf("<TH CLASS='data'>通知間隔</TH>");
+	printf("<TH CLASS='data'>エスカレーション期間</TH>");
+	printf("<TH CLASS='data'>エスカレーションオプション</TH>");
 	printf("</TR>\n");
 
 	/* check all the service escalations... */
@@ -1930,7 +1935,7 @@
 
 		printf("<TD CLASS='%s'>",bg_class);
 		if(temp_se->last_notification==0)
-			printf("Infinity");
+			printf("無限");
 		else
 			printf("%d",temp_se->last_notification);
 		printf("</TD>\n");
@@ -1938,7 +1943,7 @@
 		get_interval_time_string(temp_se->notification_interval,time_string,sizeof(time_string));
 		printf("<TD CLASS='%s'>",bg_class);
 		if(temp_se->notification_interval==0.0)
-			printf("Notify Only Once (No Re-notification)");
+			printf("1回のみ(再通知無し)");
 		else
 			printf("%s",time_string);
 		printf("</TD>\n");
@@ -1953,23 +1958,23 @@
 		printf("<TD CLASS='%s'>",bg_class);
 		options=FALSE;
 		if(temp_se->escalate_on_warning==TRUE){
-			printf("%sWarning",(options==TRUE)?", ":"");
+			printf("%s警告(WARNING)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(temp_se->escalate_on_unknown==TRUE){
-			printf("%sUnknown",(options==TRUE)?", ":"");
+			printf("%s不明(UNKNOWN)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(temp_se->escalate_on_critical==TRUE){
-			printf("%sCritical",(options==TRUE)?", ":"");
+			printf("%s異常(CRITICAL)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(temp_se->escalate_on_recovery==TRUE){
-			printf("%sRecovery",(options==TRUE)?", ":"");
+			printf("%s復旧(RECOVERY)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(options==FALSE)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("</TR>\n");
@@ -1996,7 +2001,8 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Host Dependencie%s%s</DIV></P>\n",
+	/* @TODO 未翻訳 */
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>ホスト依存関係%s%s</DIV></P>\n",
 		(*to_expand=='\0'?"s":"s Involving Host "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P>\n");
@@ -2004,11 +2010,11 @@
 
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Dependent Host</TH>");
-	printf("<TH CLASS='data'>Master Host</TH>");
-	printf("<TH CLASS='data'>Dependency Type</TH>");
-	printf("<TH CLASS='data'>Dependency Period</TH>");
-	printf("<TH CLASS='data'>Dependency Failure Options</TH>");
+	printf("<TH CLASS='data'>依存ホスト</TH>");
+	printf("<TH CLASS='data'>親ホスト</TH>");
+	printf("<TH CLASS='data'>依存タイプ</TH>");
+	printf("<TH CLASS='data'>依存期間</TH>");
+	printf("<TH CLASS='data'>依存失敗オプション</TH>");
 	printf("</TR>\n");
 
 	/* check all the host dependencies... */
@@ -2042,19 +2048,19 @@
 		printf("<TD CLASS='%s'>",bg_class);
 		options=FALSE;
 		if(temp_hd->fail_on_up==TRUE){
-			printf("Up");
+			printf("稼動(UP)");
 			options=TRUE;
 		        }
 		if(temp_hd->fail_on_down==TRUE){
-			printf("%sDown",(options==TRUE)?", ":"");
+			printf("%s停止(DOWN)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(temp_hd->fail_on_unreachable==TRUE){
-			printf("%sUnreachable",(options==TRUE)?", ":"");
+			printf("%s未到達(UNREACHABLE)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(temp_hd->fail_on_pending==TRUE){
-			printf("%sPending",(options==TRUE)?", ":"");
+			printf("%s未解決(PENDING)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		printf("</TD>\n");
@@ -2087,7 +2093,8 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Host Escalation%s%s</DIV></P>\n",
+	/* @TODO 未翻訳 */
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>ホストエスカレーション%s%s</DIV></P>\n",
 		(*to_expand=='\0'?"s":"s for Host "),(*to_expand=='\0'?"":html_encode(to_expand,FALSE)));
 
 	printf("<P>\n");
@@ -2095,13 +2102,13 @@
 
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Host</TH>");
-	printf("<TH CLASS='data'>Contacts/Groups</TH>");
-	printf("<TH CLASS='data'>First Notification</TH>");
-	printf("<TH CLASS='data'>Last Notification</TH>");
-	printf("<TH CLASS='data'>Notification Interval</TH>");
-	printf("<TH CLASS='data'>Escalation Period</TH>");
-	printf("<TH CLASS='data'>Escalation Options</TH>");
+	printf("<TH CLASS='data'>ホスト</TH>");
+	printf("<TH CLASS='data'>通知先/グループ</TH>");
+	printf("<TH CLASS='data'>初回通知</TH>");
+	printf("<TH CLASS='data'>最終通知</TH>");
+	printf("<TH CLASS='data'>通知間隔</TH>");
+	printf("<TH CLASS='data'>エスカレーション期間</TH>");
+	printf("<TH CLASS='data'>エスカレーションオプション</TH>");
 	printf("</TR>\n");
 
 	/* check all the host escalations... */
@@ -2142,7 +2149,7 @@
 
 		printf("<TD CLASS='%s'>",bg_class);
 		if(temp_he->last_notification==0)
-			printf("Infinity");
+			printf("無限");
 		else
 			printf("%d",temp_he->last_notification);
 		printf("</TD>\n");
@@ -2150,7 +2157,7 @@
 		get_interval_time_string(temp_he->notification_interval,time_string,sizeof(time_string));
 		printf("<TD CLASS='%s'>",bg_class);
 		if(temp_he->notification_interval==0.0)
-			printf("Notify Only Once (No Re-notification)");
+			printf("1回のみ(再通知無し)");
 		else
 			printf("%s",time_string);
 		printf("</TD>\n");
@@ -2165,19 +2172,19 @@
 		printf("<TD CLASS='%s'>",bg_class);
 		options=FALSE;
 		if(temp_he->escalate_on_down==TRUE){
-			printf("%sDown",(options==TRUE)?", ":"");
+			printf("%s停止(DOWN)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(temp_he->escalate_on_unreachable==TRUE){
-			printf("%sUnreachable",(options==TRUE)?", ":"");
+			printf("%s未到達(UNREACHABLE)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(temp_he->escalate_on_recovery==TRUE){
-			printf("%sRecovery",(options==TRUE)?", ":"");
+			printf("%s復旧(RECOVERY)",(options==TRUE)?", ":"");
 			options=TRUE;
 		        }
 		if(options==FALSE)
-			printf("None");
+			printf("無し");
 		printf("</TD>\n");
 
 		printf("</TR>\n");
@@ -2194,9 +2201,8 @@
 
 void unauthorized_message(void){
 
-	printf("<P><DIV CLASS='errorMessage'>It appears as though you do not have permission to view the configuration information you requested...</DIV></P>\n");
-	printf("<P><DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-	printf("and check the authorization options in your CGI configuration file.</DIV></P>\n");
+	printf("<P><DIV CLASS='errorMessage'>設定情報を見る権限が無いようです。</DIV></P>\n");
+	printf("<P><DIV CLASS='errorDescription'>このメッセージが何らかのエラーであると思う場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV></P>\n");
 
 	return;
 	}
@@ -2247,7 +2253,7 @@
 		return;
 	        }
 
-	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>Command Expansion</DIV></P>\n");
+	printf("<P><DIV ALIGN=CENTER CLASS='dataTitle'>拡張コマンド</DIV></P>\n");
 
 	/* Parse to_expand into parts */
 	for (i=0;i<MAX_COMMAND_ARGUMENTS;i++) command_args[i]=NULL;
@@ -2270,7 +2276,7 @@
 
 	printf("<P><DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
-	printf("<TR><TH CLASS='data'>Command Name</TH><TH CLASS='data'>Command Line</TH></TR>\n");
+	printf("<TR><TH CLASS='data'>コマンド名</TH><TH CLASS='data'>コマンドライン</TH></TR>\n");
 
 	if ((*to_expand)!='\0'){
 		arg_count[0]=0;
@@ -2428,7 +2434,7 @@
 
 	printf("<br><br>\n");
 
-	printf("<div align=center class='reportSelectTitle'>Select Type of Config Data You Wish To View</div>\n");
+	printf("<div align=center class='reportSelectTitle'>閲覧したい設定項目を選んでください。</div>\n");
 
 	printf("<br><br>\n");
 
@@ -2437,26 +2443,26 @@
 	printf("<div align=center>\n");
 	printf("<table border=0>\n");
 
-	printf("<tr><td align=left class='reportSelectSubTitle'>Object Type:</td></tr>\n");
+	printf("<tr><td align=left class='reportSelectSubTitle'>オブジェクトタイプ:</td></tr>\n");
 	printf("<tr><td align=left class='reportSelectItem'>");
 	printf("<select name='type'>\n");
-	printf("<option value='hosts' %s>Hosts\n",(display_type==DISPLAY_HOSTS)?"SELECTED":"");
-	printf("<option value='hostdependencies' %s>Host Dependencies\n",(display_type==DISPLAY_HOSTDEPENDENCIES)?"SELECTED":"");
-	printf("<option value='hostescalations' %s>Host Escalations\n",(display_type==DISPLAY_HOSTESCALATIONS)?"SELECTED":"");
-	printf("<option value='hostgroups' %s>Host Groups\n",(display_type==DISPLAY_HOSTGROUPS)?"SELECTED":"");
-	printf("<option value='services' %s>Services\n",(display_type==DISPLAY_SERVICES)?"SELECTED":"");
-	printf("<option value='servicegroups' %s>Service Groups\n",(display_type==DISPLAY_SERVICEGROUPS)?"SELECTED":"");
-	printf("<option value='servicedependencies' %s>Service Dependencies\n",(display_type==DISPLAY_SERVICEDEPENDENCIES)?"SELECTED":"");
-	printf("<option value='serviceescalations' %s>Service Escalations\n",(display_type==DISPLAY_SERVICEESCALATIONS)?"SELECTED":"");
-	printf("<option value='contacts' %s>Contacts\n",(display_type==DISPLAY_CONTACTS)?"SELECTED":"");
-	printf("<option value='contactgroups' %s>Contact Groups\n",(display_type==DISPLAY_CONTACTGROUPS)?"SELECTED":"");
-	printf("<option value='timeperiods' %s>Timeperiods\n",(display_type==DISPLAY_TIMEPERIODS)?"SELECTED":"");
-	printf("<option value='commands' %s>Commands\n",(display_type==DISPLAY_COMMANDS)?"SELECTED":"");
-	printf("<option value='commands' %s>Command Expansion\n",(display_type==DISPLAY_COMMAND_EXPANSION)?"SELECTED":"");
+	printf("<option value='hosts' %s>ホスト\n",(display_type==DISPLAY_HOSTS)?"SELECTED":"");
+	printf("<option value='hostdependencies' %s>ホスト依存関係\n",(display_type==DISPLAY_HOSTDEPENDENCIES)?"SELECTED":"");
+	printf("<option value='hostescalations' %s>ホストエスカレーション\n",(display_type==DISPLAY_HOSTESCALATIONS)?"SELECTED":"");
+	printf("<option value='hostgroups' %s>ホストグループ\n",(display_type==DISPLAY_HOSTGROUPS)?"SELECTED":"");
+	printf("<option value='services' %s>サービス\n",(display_type==DISPLAY_SERVICES)?"SELECTED":"");
+	printf("<option value='servicegroups' %s>サービスグループ\n",(display_type==DISPLAY_SERVICEGROUPS)?"SELECTED":"");
+	printf("<option value='servicedependencies' %s>サービス依存関係\n",(display_type==DISPLAY_SERVICEDEPENDENCIES)?"SELECTED":"");
+	printf("<option value='serviceescalations' %s>サービスエスカレーション\n",(display_type==DISPLAY_SERVICEESCALATIONS)?"SELECTED":"");
+	printf("<option value='contacts' %s>通知先\n",(display_type==DISPLAY_CONTACTS)?"SELECTED":"");
+	printf("<option value='contactgroups' %s>通知先グループ\n",(display_type==DISPLAY_CONTACTGROUPS)?"SELECTED":"");
+	printf("<option value='timeperiods' %s>時間帯\n",(display_type==DISPLAY_TIMEPERIODS)?"SELECTED":"");
+	printf("<option value='commands' %s>コマンド\n",(display_type==DISPLAY_COMMANDS)?"SELECTED":"");
+	printf("<option value='commands' %s>拡張コマンド\n",(display_type==DISPLAY_COMMAND_EXPANSION)?"SELECTED":"");
 	printf("</select>\n");
 	printf("</td></tr>\n");
 
-	printf("<tr><td class='reportSelectItem'><input type='submit' value='Continue'></td></tr>\n");
+	printf("<tr><td class='reportSelectItem'><input type='submit' value='続行'></td></tr>\n");
 	printf("</table>\n");
 	printf("</div>\n");
 
diff -urN nagios-3.2.3.orig/cgi/extcmd_list.c nagios-3.2.3/cgi/extcmd_list.c
--- nagios-3.2.3.orig/cgi/extcmd_list.c	2010-09-22 00:05:31.000000000 +0900
+++ nagios-3.2.3/cgi/extcmd_list.c	2010-12-12 19:59:07.000000000 +0900
@@ -215,10 +215,10 @@
 		struct nagios_extcmd *cmd = &in_core_commands[i];
 		if (!cmd->handler) {
 			no_handler++;
-			printf("%s has no handler\n", extcmd_get_name(i));
+			printf("%s に対するハンドラがありません。\n", extcmd_get_name(i));
 		}
 	}
-	printf("%d of %d commands have no handler\n",
+	printf("%d / %d 個のコマンドに対するハンドラがありません。\n",
 	       no_handler, ARRAY_SIZE(in_core_commands));
 
 	return 0;
diff -urN nagios-3.2.3.orig/cgi/extinfo.c nagios-3.2.3/cgi/extinfo.c
--- nagios-3.2.3.orig/cgi/extinfo.c	2010-12-12 00:47:55.000000000 +0900
+++ nagios-3.2.3/cgi/extinfo.c	2010-12-12 19:59:07.000000000 +0900
@@ -204,23 +204,23 @@
 		printf("<td align=left valign=top width=33%%>\n");
 
 		if(display_type==DISPLAY_HOST_INFO)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Host Information");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホスト情報");
 		else if(display_type==DISPLAY_SERVICE_INFO)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Service Information");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"サービス情報");
 		else if(display_type==DISPLAY_COMMENTS)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"All Host and Service Comments");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"全てのホストとサービスのコメント");
 		else if(display_type==DISPLAY_PERFORMANCE)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Performance Information");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"パフォーマンス情報");
 		else if(display_type==DISPLAY_HOSTGROUP_INFO)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Hostgroup Information");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホストグループ情報");
 		else if(display_type==DISPLAY_SERVICEGROUP_INFO)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Servicegroup Information");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"サービスグループ情報");
 		else if(display_type==DISPLAY_DOWNTIME)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"All Host and Service Scheduled Downtime");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"全てのホストとサービスのダウンタイムスケジュール");
 		else if(display_type==DISPLAY_SCHEDULING_QUEUE)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Check Scheduling Queue");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"サービスチェックスケジュールキュー");
 		else
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Nagios Process Information");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Nagiosプロセス情報");
 		temp_buffer[sizeof(temp_buffer)-1]='\x0';
 		display_info_table(temp_buffer,TRUE,&current_authdata);
 
@@ -271,47 +271,47 @@
 			printf("<TABLE BORDER=1 CELLPADDING=0 CELLSPACING=0 CLASS='linkBox'>\n");
 			printf("<TR><TD CLASS='linkBox'>\n");
 			if(display_type==DISPLAY_SERVICE_INFO)
-				printf("<A HREF='%s?type=%d&host=%s'>View Information For This Host</A><br>\n",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(host_name));
+				printf("<A HREF='%s?type=%d&host=%s'>このホストの情報</A><br>\n",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(host_name));
 			if(display_type==DISPLAY_SERVICE_INFO || display_type==DISPLAY_HOST_INFO)
-				printf("<A HREF='%s?host=%s'>View Status Detail For This Host</A><BR>\n",STATUS_CGI,url_encode(host_name));
+				printf("<A HREF='%s?host=%s'>このホストの稼動状態</A><BR>\n",STATUS_CGI,url_encode(host_name));
 			if(display_type==DISPLAY_HOST_INFO){
-				printf("<A HREF='%s?host=%s'>View Alert History For This Host</A><BR>\n",HISTORY_CGI,url_encode(host_name));
+				printf("<A HREF='%s?host=%s'>このホストの警報履歴</A><BR>\n",HISTORY_CGI,url_encode(host_name));
 #ifdef USE_TRENDS
-				printf("<A HREF='%s?host=%s'>View Trends For This Host</A><BR>\n",TRENDS_CGI,url_encode(host_name));
+				printf("<A HREF='%s?host=%s'>このホストの傾向</A><BR>\n",TRENDS_CGI,url_encode(host_name));
 #endif
 #ifdef USE_HISTOGRAM
-				printf("<A HREF='%s?host=%s'>View Alert Histogram For This Host</A><BR>\n",HISTOGRAM_CGI,url_encode(host_name));
+				printf("<A HREF='%s?host=%s'>このホストの警報ヒストグラム</A><BR>\n",HISTOGRAM_CGI,url_encode(host_name));
 #endif
-				printf("<A HREF='%s?host=%s&show_log_entries'>View Availability Report For This Host</A><BR>\n",AVAIL_CGI,url_encode(host_name));
-				printf("<A HREF='%s?host=%s'>View Notifications For This Host</A>\n",NOTIFICATIONS_CGI,url_encode(host_name));
+				printf("<A HREF='%s?host=%s&show_log_entries'>このホストの警報履歴</A><BR>\n",AVAIL_CGI,url_encode(host_name));
+				printf("<A HREF='%s?host=%s'>このホストの通知履歴</A>\n",NOTIFICATIONS_CGI,url_encode(host_name));
 		                }
 			else if(display_type==DISPLAY_SERVICE_INFO){
 				printf("<A HREF='%s?host=%s&",HISTORY_CGI,url_encode(host_name));
-				printf("service=%s'>View Alert History For This Service</A><BR>\n",url_encode(service_desc));
+				printf("service=%s'>このサービスの警報履歴</A><BR>\n",url_encode(service_desc));
 #ifdef USE_TRENDS
 				printf("<A HREF='%s?host=%s&",TRENDS_CGI,url_encode(host_name));
-				printf("service=%s'>View Trends For This Service</A><BR>\n",url_encode(service_desc));
+				printf("service=%s'>このサービスの傾向</A><BR>\n",url_encode(service_desc));
 #endif
 #ifdef USE_HISTOGRAM
 				printf("<A HREF='%s?host=%s&",HISTOGRAM_CGI,url_encode(host_name));
-				printf("service=%s'>View Alert Histogram For This Service</A><BR>\n",url_encode(service_desc));
+				printf("service=%s'>このサービスの警報ヒストグラム</A><BR>\n",url_encode(service_desc));
 #endif
 				printf("<A HREF='%s?host=%s&",AVAIL_CGI,url_encode(host_name));
-				printf("service=%s&show_log_entries'>View Availability Report For This Service</A><BR>\n",url_encode(service_desc));
+				printf("service=%s&show_log_entries'>このサービスの稼動レポートを見る</A><BR>\n",url_encode(service_desc));
 				printf("<A HREF='%s?host=%s&",NOTIFICATIONS_CGI,url_encode(host_name));
-				printf("service=%s'>View Notifications For This Service</A>\n",url_encode(service_desc));
+				printf("service=%s'>このホストの通知履歴</A>\n",url_encode(service_desc));
 		                }
 			else if(display_type==DISPLAY_HOSTGROUP_INFO){
-				printf("<A HREF='%s?hostgroup=%s&style=detail'>View Status Detail For This Hostgroup</A><BR>\n",STATUS_CGI,url_encode(hostgroup_name));
-				printf("<A HREF='%s?hostgroup=%s&style=overview'>View Status Overview For This Hostgroup</A><BR>\n",STATUS_CGI,url_encode(hostgroup_name));
-				printf("<A HREF='%s?hostgroup=%s&style=grid'>View Status Grid For This Hostgroup</A><BR>\n",STATUS_CGI,url_encode(hostgroup_name));
-				printf("<A HREF='%s?hostgroup=%s'>View Availability For This Hostgroup</A><BR>\n",AVAIL_CGI,url_encode(hostgroup_name));
+				printf("<A HREF='%s?hostgroup=%s&style=detail'>このホストグループの稼動状態</A><BR>\n",STATUS_CGI,url_encode(hostgroup_name));
+				printf("<A HREF='%s?hostgroup=%s&style=overview'>このホストグループのステータスオーバービュー</A><BR>\n",STATUS_CGI,url_encode(hostgroup_name));
+				printf("<A HREF='%s?hostgroup=%s&style=grid'>このホストグループのステータスグリッド</A><BR>\n",STATUS_CGI,url_encode(hostgroup_name));
+				printf("<A HREF='%s?hostgroup=%s'>このホストグループの稼動レポート</A><BR>\n",AVAIL_CGI,url_encode(hostgroup_name));
 		                }
 			else if(display_type==DISPLAY_SERVICEGROUP_INFO){
-				printf("<A HREF='%s?servicegroup=%s&style=detail'>View Status Detail For This Servicegroup</A><BR>\n",STATUS_CGI,url_encode(servicegroup_name));
-				printf("<A HREF='%s?servicegroup=%s&style=overview'>View Status Overview For This Servicegroup</A><BR>\n",STATUS_CGI,url_encode(servicegroup_name));
-				printf("<A HREF='%s?servicegroup=%s&style=grid'>View Status Grid For This Servicegroup</A><BR>\n",STATUS_CGI,url_encode(servicegroup_name));
-				printf("<A HREF='%s?servicegroup=%s'>View Availability For This Servicegroup</A><BR>\n",AVAIL_CGI,url_encode(servicegroup_name));
+				printf("<A HREF='%s?servicegroup=%s&style=detail'>このサービスグループの稼動状態</A><BR>\n",STATUS_CGI,url_encode(servicegroup_name));
+				printf("<A HREF='%s?servicegroup=%s&style=overview'>このサービスグループのステータスオーバービュー</A><BR>\n",STATUS_CGI,url_encode(servicegroup_name));
+				printf("<A HREF='%s?servicegroup=%s&style=grid'>このサービスグループのステータスグリッド</A><BR>\n",STATUS_CGI,url_encode(servicegroup_name));
+				printf("<A HREF='%s?servicegroup=%s'>このサービスグループの稼動レポート</A><BR>\n",AVAIL_CGI,url_encode(servicegroup_name));
 		                }
 			printf("</TD></TR>\n");
 			printf("</TABLE>\n");
@@ -325,19 +325,19 @@
 		if((display_type==DISPLAY_HOST_INFO && temp_host!=NULL) || (display_type==DISPLAY_SERVICE_INFO && temp_host!=NULL && temp_service!=NULL) || (display_type==DISPLAY_HOSTGROUP_INFO && temp_hostgroup!=NULL) || (display_type==DISPLAY_SERVICEGROUP_INFO && temp_servicegroup!=NULL)){
 
 			if(display_type==DISPLAY_HOST_INFO){
-				printf("<DIV CLASS='data'>Host</DIV>\n");
+				printf("<DIV CLASS='data'>【ホスト】</DIV>\n");
 				printf("<DIV CLASS='dataTitle'>%s</DIV>\n",temp_host->alias);
 				printf("<DIV CLASS='dataTitle'>(%s)</DIV><BR>\n",temp_host->name);
 
 				if (temp_host->parent_hosts != NULL) {
 					/* print all parent hosts */
-					printf("<DIV CLASS='data'>Parents:</DIV>\n");
+					printf("<DIV CLASS='data'>親:</DIV>\n");
 					for(temp_parenthost=temp_host->parent_hosts;temp_parenthost!=NULL;temp_parenthost=temp_parenthost->next)
 						printf("<DIV CLASS='dataTitle'><A HREF='%s?host=%s'>%s</A></DIV>\n",STATUS_CGI, url_encode(temp_parenthost->host_name),temp_parenthost->host_name);
 					printf("<BR>");
 				}
 
-				printf("<DIV CLASS='data'>Member of</DIV><DIV CLASS='dataTitle'>");
+				printf("<DIV CLASS='data'>【所属メンバー】</DIV><DIV CLASS='dataTitle'>");
 				for(temp_hostgroup=hostgroup_list;temp_hostgroup!=NULL;temp_hostgroup=temp_hostgroup->next){
 					if(is_host_member_of_hostgroup(temp_hostgroup,temp_host)==TRUE){
 						if(found==TRUE)
@@ -348,15 +348,15 @@
 					}
 			
 				if(found==FALSE)
-					printf("No hostgroups");
+					printf("ホストグループなし");
 				printf("</DIV><BR>\n");
 				printf("<DIV CLASS='data'>%s</DIV>\n",temp_host->address);
 			        }
 			if(display_type==DISPLAY_SERVICE_INFO){
-				printf("<DIV CLASS='data'>Service</DIV><DIV CLASS='dataTitle'>%s</DIV><DIV CLASS='data'>On Host</DIV>\n",service_desc);
+				printf("<DIV CLASS='data'>【サービス】</DIV><DIV CLASS='dataTitle'>%s</DIV><DIV CLASS='data'>【稼動しているホスト】</DIV>\n",service_desc);
 				printf("<DIV CLASS='dataTitle'>%s</DIV>\n",temp_host->alias);
 				printf("<DIV CLASS='dataTitle'>(<A HREF='%s?type=%d&host=%s'>%s</a>)</DIV><BR>\n",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_host->name),temp_host->name);
-                                printf("<DIV CLASS='data'>Member of</DIV><DIV CLASS='dataTitle'>");
+                                printf("<DIV CLASS='data'>【所属メンバー】</DIV><DIV CLASS='dataTitle'>");
                                 for(temp_servicegroup=servicegroup_list;temp_servicegroup!=NULL;temp_servicegroup=temp_servicegroup->next){
 					if(is_service_member_of_servicegroup(temp_servicegroup,temp_service)==TRUE){
 						if(found==TRUE)
@@ -367,13 +367,13 @@
                                         }
 
                                 if(found==FALSE)
-					printf("No servicegroups.");
+					printf("このサービスはどのグループにも属していません。");
                                 printf("</DIV><BR>\n");
 
 				printf("<DIV CLASS='data'>%s</DIV>\n",temp_host->address);
 				}
 			if(display_type==DISPLAY_HOSTGROUP_INFO){
-				printf("<DIV CLASS='data'>Hostgroup</DIV>\n");
+				printf("<DIV CLASS='data'>【ホストグループ】</DIV>\n");
 				printf("<DIV CLASS='dataTitle'>%s</DIV>\n",temp_hostgroup->alias);
 				printf("<DIV CLASS='dataTitle'>(%s)</DIV>\n",temp_hostgroup->group_name);
 				if(temp_hostgroup->notes!=NULL){
@@ -383,7 +383,7 @@
 					}
 			        }
 			if(display_type==DISPLAY_SERVICEGROUP_INFO){
-				printf("<DIV CLASS='data'>Servicegroup</DIV>\n");
+				printf("<DIV CLASS='data'>【サービスグループ】</DIV>\n");
 				printf("<DIV CLASS='dataTitle'>%s</DIV>\n",temp_servicegroup->alias);
 				printf("<DIV CLASS='dataTitle'>(%s)</DIV>\n",temp_servicegroup->group_name);
 				if(temp_servicegroup->notes!=NULL){
@@ -446,8 +446,8 @@
 				process_macros(temp_host->action_url,&processed_string,0);
 				printf("%s",processed_string);
 				free(processed_string);
-				printf("' TARGET='%s'><img src='%s%s' border=0 alt='Perform Additional Actions On This Host' title='Perform Additional Actions On This Host'></A>\n",(action_url_target==NULL)?"_blank":action_url_target,url_images_path,ACTION_ICON);
-				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>Extra Actions</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
+				printf("' TARGET='%s'><img src='%s%s' border=0 alt='このホストの対応情報' title='このホストの対応情報'></A>\n",(action_url_target==NULL)?"_blank":action_url_target,url_images_path,ACTION_ICON);
+				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>対応情報</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
 				printf("</TD></TR>\n");
 			        }
 			if(temp_host->notes_url!=NULL && strcmp(temp_host->notes_url,"")){
@@ -457,8 +457,8 @@
 				printf("%s",processed_string);
 				free(processed_string);
 				/*print_extra_host_url(temp_host->name,temp_host->notes_url);*/
-				printf("' TARGET='%s'><img src='%s%s' border=0 alt='View Additional Notes For This Host' title='View Additional Notes For This Host'></A>\n",(notes_url_target==NULL)?"_blank":notes_url_target,url_images_path,NOTES_ICON);
-				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>Extra Notes</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
+				printf("' TARGET='%s'><img src='%s%s' border=0 alt='このホストの追加情報を見る' title='このホストの追加情報を見る'></A>\n",(notes_url_target==NULL)?"_blank":notes_url_target,url_images_path,NOTES_ICON);
+				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>追加情報</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
 				printf("</TD></TR>\n");
 			        }
 			printf("</TABLE>\n");
@@ -471,8 +471,8 @@
 				process_macros(temp_service->action_url,&processed_string,0);
 				printf("%s",processed_string);
 				free(processed_string);
-				printf("' TARGET='%s'><img src='%s%s' border=0 alt='Perform Additional Actions On This Service' title='Perform Additional Actions On This Service'></A>\n",(action_url_target==NULL)?"_blank":action_url_target,url_images_path,ACTION_ICON);
-				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>Extra Actions</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
+				printf("' TARGET='%s'><img src='%s%s' border=0 alt='このサービスの対応情報' title='このサービスの対応情報'></A>\n",(action_url_target==NULL)?"_blank":action_url_target,url_images_path,ACTION_ICON);
+				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>対応情報</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
 			        }
 /*
 Opsera patch to remove the notes on the side of extinfo page as this duplicates the graph image in the middle
@@ -481,8 +481,8 @@
 				process_macros(temp_service->notes_url,&processed_string,0);
 				printf("%s",processed_string);
 				free(processed_string);
-				printf("' TARGET='%s'><img src='%s%s' border=0 alt='View Additional Notes For This Service' title='View Additional Notes For This Service'></A>\n",(notes_url_target==NULL)?"_blank":notes_url_target,url_images_path,NOTES_ICON);
-				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>Extra Notes</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
+				printf("' TARGET='%s'><img src='%s%s' border=0 alt='このサービスの追加情報を見る' title='このサービスの追加情報を見る'></A>\n",(notes_url_target==NULL)?"_blank":notes_url_target,url_images_path,NOTES_ICON);
+				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>追加情報</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
 			        }
 */
 			printf("</TD></TR></TABLE>\n");
@@ -494,16 +494,16 @@
 				printf("<TR><TD ALIGN='right'>\n");
 				printf("<A HREF='");
 				print_extra_hostgroup_url(temp_hostgroup->group_name,temp_hostgroup->action_url);
-				printf("' TARGET='%s'><img src='%s%s' border=0 alt='Perform Additional Actions On This Hostgroup' title='Perform Additional Actions On This Hostgroup'></A>\n",(action_url_target==NULL)?"_blank":action_url_target,url_images_path,ACTION_ICON);
-				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>Extra Actions</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
+				printf("' TARGET='%s'><img src='%s%s' border=0 alt='このホストグループの対応情報' title='このホストグループの対応情報'></A>\n",(action_url_target==NULL)?"_blank":action_url_target,url_images_path,ACTION_ICON);
+				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>対応情報</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
 				printf("</TD></TR>\n");
 			        }
 			if(temp_hostgroup->notes_url!=NULL && strcmp(temp_hostgroup->notes_url,"")){
 				printf("<TR><TD ALIGN='right'>\n");
 				printf("<A HREF='");
 				print_extra_hostgroup_url(temp_hostgroup->group_name,temp_hostgroup->notes_url);
-				printf("' TARGET='%s'><img src='%s%s' border=0 alt='View Additional Notes For This Hostgroup' title='View Additional Notes For This Hostgroup'></A>\n",(notes_url_target==NULL)?"_blank":notes_url_target,url_images_path,NOTES_ICON);
-				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>Extra Notes</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
+				printf("' TARGET='%s'><img src='%s%s' border=0 alt='このホストグループの追加情報を見る' title='このホストグループの追加情報を見る'></A>\n",(notes_url_target==NULL)?"_blank":notes_url_target,url_images_path,NOTES_ICON);
+				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>追加情報</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
 				printf("</TD></TR>\n");
 			        }
 			printf("</TABLE>\n");
@@ -514,14 +514,14 @@
 			if(temp_servicegroup->action_url!=NULL && strcmp(temp_servicegroup->action_url,"")){
 				printf("<A HREF='");
 				print_extra_servicegroup_url(temp_servicegroup->group_name,temp_servicegroup->action_url);
-				printf("' TARGET='%s'><img src='%s%s' border=0 alt='Perform Additional Actions On This Servicegroup' title='Perform Additional Actions On This Servicegroup'></A>\n",(action_url_target==NULL)?"_blank":action_url_target,url_images_path,ACTION_ICON);
-				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>Extra Actions</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
+				printf("' TARGET='%s'><img src='%s%s' border=0 alt='このサービスグループの対応情報' title='このサービスグループの対応情報'></A>\n",(action_url_target==NULL)?"_blank":action_url_target,url_images_path,ACTION_ICON);
+				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>対応情報</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
 			        }
 			if(temp_servicegroup->notes_url!=NULL && strcmp(temp_servicegroup->notes_url,"")){
 				printf("<A HREF='");
 				print_extra_servicegroup_url(temp_servicegroup->group_name,temp_servicegroup->notes_url);
-				printf("' TARGET='%s'><img src='%s%s' border=0 alt='View Additional Notes For This Servicegroup' title='View Additional Notes For This Servicegroup'></A>\n",(notes_url_target==NULL)?"_blank":notes_url_target,url_images_path,NOTES_ICON);
-				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>Extra Notes</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
+				printf("' TARGET='%s'><img src='%s%s' border=0 alt='このサービスグループの追加情報を見る' title='このサービスグループの追加情報を見る'></A>\n",(notes_url_target==NULL)?"_blank":notes_url_target,url_images_path,NOTES_ICON);
+				printf("<BR CLEAR=ALL><FONT SIZE=-1><I>追加情報</I></FONT><BR CLEAR=ALL><BR CLEAR=ALL>\n");
 			        }
 			printf("</TABLE>\n");
 	                }
@@ -612,8 +612,9 @@
 	printf("<html>\n");
 	printf("<head>\n");
 	printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
+	printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
 	printf("<title>\n");
-	printf("Extended Information\n");
+	printf("情報\n");
 	printf("</title>\n");
 
 	if(use_stylesheet==TRUE){
@@ -798,9 +799,8 @@
 	/* make sure the user has rights to view system information */
 	if(is_authorized_for_system_information(&current_authdata)==FALSE){
 
-		printf("<P><DIV CLASS='errorMessage'>It appears as though you do not have permission to view process information...</DIV></P>\n");
-		printf("<P><DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-		printf("and check the authorization options in your CGI configuration file.</DIV></P>\n");
+		printf("<P><DIV CLASS='errorMessage'>プロセス情報を閲覧する権限がありません。</DIV></P>\n");
+		printf("<P><DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV></P>\n");
 
 		return;
 	        }
@@ -811,75 +811,75 @@
 	printf("<TABLE BORDER=0 CELLPADDING=20>\n");
 	printf("<TR><TD VALIGN=TOP>\n");
 
-	printf("<DIV CLASS='dataTitle'>Process Information</DIV>\n");
+	printf("<DIV CLASS='dataTitle'>プロセス情報</DIV>\n");
 
 	printf("<TABLE BORDER=1 CELLSPACING=0 CELLPADDING=0 CLASS='data'>\n");
 	printf("<TR><TD class='stateInfoTable1'>\n");
 	printf("<TABLE BORDER=0>\n");
 
 	/* program version */
-	printf("<TR><TD CLASS='dataVar'>Program Version:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",PROGRAM_VERSION);
+	printf("<TR><TD CLASS='dataVar'>プログラムバージョン:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",PROGRAM_VERSION);
 
 	/* program start time */
 	get_time_string(&program_start,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-	printf("<TR><TD CLASS='dataVar'>Program Start Time:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",date_time);
+	printf("<TR><TD CLASS='dataVar'>プログラム起動時間:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",date_time);
 
 	/* total running time */
 	time(&current_time);
 	run_time=(unsigned long)(current_time-program_start);
 	get_time_breakdown(run_time,&days,&hours,&minutes,&seconds);
-	sprintf(run_time_string,"%dd %dh %dm %ds",days,hours,minutes,seconds);
-	printf("<TR><TD CLASS='dataVar'>Total Running Time:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",run_time_string);
+	sprintf(run_time_string,"%d日間と %d時間 %d分 %d秒",days,hours,minutes,seconds);
+	printf("<TR><TD CLASS='dataVar'>稼働時間:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",run_time_string);
 
 	/* last external check */
 	get_time_string(&last_command_check,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-	printf("<TR><TD CLASS='dataVar'>Last External Command Check:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(last_command_check==(time_t)0)?"N/A":date_time);
+	printf("<TR><TD CLASS='dataVar'>最終外部コマンドチェック:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(last_command_check==(time_t)0)?"N/A":date_time);
 
 	/* last log file rotation */
 	get_time_string(&last_log_rotation,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-	printf("<TR><TD CLASS='dataVar'>Last Log File Rotation:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(last_log_rotation==(time_t)0)?"N/A":date_time);
+	printf("<TR><TD CLASS='dataVar'>最終ログファイルローテーション:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(last_log_rotation==(time_t)0)?"N/A":date_time);
 
 	/* PID */
-	printf("<TR><TD CLASS='dataVar'>Nagios PID</TD><TD CLASS='dataVal'>%d</TD></TR>\n",nagios_pid);
+	printf("<TR><TD CLASS='dataVar'>NagiosプロセスID(PID)</TD><TD CLASS='dataVal'>%d</TD></TR>\n",nagios_pid);
 
 	/* notifications enabled */
-	printf("<TR><TD CLASS='dataVar'>Notifications Enabled?</TD><TD CLASS='dataVal'><DIV CLASS='notifications%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(enable_notifications==TRUE)?"ENABLED":"DISABLED",(enable_notifications==TRUE)?"YES":"NO");
+	printf("<TR><TD CLASS='dataVar'>通知の有効状態</TD><TD CLASS='dataVal'><DIV CLASS='notifications%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(enable_notifications==TRUE)?"ENABLED":"DISABLED",(enable_notifications==TRUE)?"有効":"無効");
 
 	/* service check execution enabled */
-	printf("<TR><TD CLASS='dataVar'>Service Checks Being Executed?</TD><TD CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(execute_service_checks==TRUE)?"ENABLED":"DISABLED",(execute_service_checks==TRUE)?"YES":"NO");
+	printf("<TR><TD CLASS='dataVar'>サービスチェックの実行状態</TD><TD CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(execute_service_checks==TRUE)?"ENABLED":"DISABLED",(execute_service_checks==TRUE)?"はい":"いいえ");
 
 	/* passive service check acceptance */
-	printf("<TR><TD CLASS='dataVar'>Passive Service Checks Being Accepted?</TD><TD CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(accept_passive_service_checks==TRUE)?"ENABLED":"DISABLED",(accept_passive_service_checks==TRUE)?"YES":"NO");
+	printf("<TR><TD CLASS='dataVar'>パッシブサービスチェックの実行状態</TD><TD CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(accept_passive_service_checks==TRUE)?"ENABLED":"DISABLED",(accept_passive_service_checks==TRUE)?"はい":"いいえ");
 
 	/* host check execution enabled */
-	printf("<TR><TD CLASS='dataVar'>Host Checks Being Executed?</TD><TD CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(execute_host_checks==TRUE)?"ENABLED":"DISABLED",(execute_host_checks==TRUE)?"YES":"NO");
+	printf("<TR><TD CLASS='dataVar'>ホストチェックの実行状態</TD><TD CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(execute_host_checks==TRUE)?"ENABLED":"DISABLED",(execute_host_checks==TRUE)?"はい":"いいえ");
 
 	/* passive host check acceptance */
-	printf("<TR><TD CLASS='dataVar'>Passive Host Checks Being Accepted?</TD><TD CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(accept_passive_host_checks==TRUE)?"ENABLED":"DISABLED",(accept_passive_host_checks==TRUE)?"YES":"NO");
+	printf("<TR><TD CLASS='dataVar'>パッシプホストチェックの実行状態</TD><TD CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(accept_passive_host_checks==TRUE)?"ENABLED":"DISABLED",(accept_passive_host_checks==TRUE)?"はい":"いいえ");
 
 	/* event handlers enabled */
-	printf("<TR><TD CLASS='dataVar'>Event Handlers Enabled?</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(enable_event_handlers==TRUE)?"Yes":"No");
+	printf("<TR><TD CLASS='dataVar'>イベントハンドラの有効状態</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(enable_event_handlers==TRUE)?"有効":"無効");
 
 	/* obsessing over services */
-	printf("<TR><TD CLASS='dataVar'>Obsessing Over Services?</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(obsess_over_services==TRUE)?"Yes":"No");
+	printf("<TR><TD CLASS='dataVar'>Obsessing Overサービス</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(obsess_over_services==TRUE)?"はい":"いいえ");
 
 	/* obsessing over hosts */
-	printf("<TR><TD CLASS='dataVar'>Obsessing Over Hosts?</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(obsess_over_hosts==TRUE)?"Yes":"No");
+	printf("<TR><TD CLASS='dataVar'>Obsessing Overホスト</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(obsess_over_hosts==TRUE)?"はい":"いいえ");
 
 	/* flap detection enabled */
-	printf("<TR><TD CLASS='dataVar'>Flap Detection Enabled?</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(enable_flap_detection==TRUE)?"Yes":"No");
+	printf("<TR><TD CLASS='dataVar'>フラップ検知の有効状態</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(enable_flap_detection==TRUE)?"有効":"無効");
 
 #ifdef PREDICT_FAILURES
 	/* failure prediction enabled */
-	printf("<TR><TD CLASS='dataVar'>Failure Prediction Enabled?</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(enable_failure_prediction==TRUE)?"Yes":"No");
+	printf("<TR><TD CLASS='dataVar'>予測機能の有効状態</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(enable_failure_prediction==TRUE)?"有効":"無効");
 #endif
 
 	/* process performance data */
-	printf("<TR><TD CLASS='dataVar'>Performance Data Being Processed?</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(process_performance_data==TRUE)?"Yes":"No");
+	printf("<TR><TD CLASS='dataVar'>パフォーマンスデータ処理の実行状態</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(process_performance_data==TRUE)?"はい":"いいえ");
 
 #ifdef USE_OLDCRUD
 	/* daemon mode */
-	printf("<TR><TD CLASS='dataVar'>Running As A Daemon?</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(daemon_mode==TRUE)?"Yes":"No");
+	printf("<TR><TD CLASS='dataVar'>デーモンの実行状態</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(daemon_mode==TRUE)?"はい":"いいえ");
 #endif
 
 	printf("</TABLE>\n");
@@ -889,7 +889,7 @@
 
 	printf("</TD><TD VALIGN=TOP>\n");
 
-	printf("<DIV CLASS='commandTitle'>Process Commands</DIV>\n");
+	printf("<DIV CLASS='commandTitle'>プロセスコマンド</DIV>\n");
 
 	printf("<TABLE BORDER=1 CELLPADDING=0 CELLSPACING=0 CLASS='command'>\n");
 	printf("<TR><TD>\n");
@@ -898,74 +898,74 @@
 		printf("<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 CLASS='command'>\n");
 
 #ifndef DUMMY_INSTALL
-		printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Shutdown the Nagios Process' TITLE='Shutdown the Nagios Process'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Shutdown the Nagios process</a></td></tr>\n",url_images_path,STOP_ICON,COMMAND_CGI,CMD_SHUTDOWN_PROCESS);
-		printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Restart the Nagios Process' TITLE='Restart the Nagios Process'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Restart the Nagios process</a></td></tr>\n",url_images_path,RESTART_ICON,COMMAND_CGI,CMD_RESTART_PROCESS);
+		printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Nagiosプロセスを停止' TITLE='Nagiosプロセスを停止'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Nagiosプロセスを停止</a></td></tr>\n",url_images_path,STOP_ICON,COMMAND_CGI,CMD_SHUTDOWN_PROCESS);
+		printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Nagiosプロセスを再起動' TITLE='Nagiosプロセスを再起動'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Nagiosプロセスを再起動</a></td></tr>\n",url_images_path,RESTART_ICON,COMMAND_CGI,CMD_RESTART_PROCESS);
 #endif
 
 		if(enable_notifications==TRUE)
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Disable Notifications' TITLE='Disable Notifications'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Disable notifications</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_NOTIFICATIONS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='通知を無効' TITLE='通知を無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>通知を無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_NOTIFICATIONS);
 		else
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Enable Notifications' TITLE='Enable Notifications'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Enable notifications</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_NOTIFICATIONS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='通知を有効' TITLE='通知を有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>通知を有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_NOTIFICATIONS);
 
 		if(execute_service_checks==TRUE)
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Stop Executing Service Checks' TITLE='Stop Executing Service Checks'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Stop executing service checks</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_EXECUTING_SVC_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='サービスチェックを停止' TITLE='サービスチェックを停止'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>サービスチェックを停止</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_EXECUTING_SVC_CHECKS);
 		else
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Start Executing Service Checks' TITLE='Start Executing Service Checks'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Start executing service checks</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_EXECUTING_SVC_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='サービスチェックを開始' TITLE='サービスチェックを開始'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>サービスチェックを開始</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_EXECUTING_SVC_CHECKS);
 
 		if(accept_passive_service_checks==TRUE)
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Stop Accepting Passive Service Checks' TITLE='Stop Accepting Passive Service Checks'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Stop accepting passive service checks</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_ACCEPTING_PASSIVE_SVC_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='パッシブサービスチェックを停止' TITLE='パッシブサービスチェックを停止'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>パッシブサービスチェックを停止</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_ACCEPTING_PASSIVE_SVC_CHECKS);
 		else
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Start Accepting Passive Service Checks' TITLE='Start Accepting Passive Service Checks'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Start accepting passive service checks</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_ACCEPTING_PASSIVE_SVC_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='パッシブサービスチェックを開始' TITLE='パッシブサービスチェックを開始'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>パッシブサービスチェックを開始</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_ACCEPTING_PASSIVE_SVC_CHECKS);
 
 		if(execute_host_checks==TRUE)
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Stop Executing Host Checks' TITLE='Stop Executing Host Checks'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Stop executing host checks</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_EXECUTING_HOST_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='ホストチェックを停止' TITLE='ホストチェックを停止'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>ホストチェックを停止</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_EXECUTING_HOST_CHECKS);
 		else
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Start Executing Host Checks' TITLE='Start Executing Host Checks'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Start executing host checks</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_EXECUTING_HOST_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='ホストチェックを開始' TITLE='ホストチェックを開始'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>ホストチェックを開始</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_EXECUTING_HOST_CHECKS);
 
 		if(accept_passive_host_checks==TRUE)
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Stop Accepting Passive Host Checks' TITLE='Stop Accepting Passive Host Checks'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Stop accepting passive host checks</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_ACCEPTING_PASSIVE_HOST_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='パッシブホストチェックを停止' TITLE='パッシブホストチェックを停止'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>パッシブホストチェックを停止</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_ACCEPTING_PASSIVE_HOST_CHECKS);
 		else
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Start Accepting Passive Host Checks' TITLE='Start Accepting Passive Host Checks'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Start accepting passive host checks</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_ACCEPTING_PASSIVE_HOST_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='パッシブホストチェックを開始' TITLE='パッシブホストチェックを開始'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>パッシブホストチェックを開始</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_ACCEPTING_PASSIVE_HOST_CHECKS);
 
 		if(enable_event_handlers==TRUE)
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Disable Event Handlers' TITLE='Disable Event Handlers'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Disable event handlers</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_EVENT_HANDLERS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='イベントハンドラを無効' TITLE='イベントハンドラを無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>イベントハンドラを無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_EVENT_HANDLERS);
 		else
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Enable Event Handlers' TITLE='Enable Event Handlers'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Enable event handlers</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_EVENT_HANDLERS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='イベントハンドラを有効' TITLE='イベントハンドラを有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>イベントハンドラを有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_EVENT_HANDLERS);
 
 		if(obsess_over_services==TRUE)
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Stop Obsessing Over Services' TITLE='Stop Obsessing Over Services'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Stop obsessing over services</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_OBSESSING_OVER_SVC_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Obsessing Overサービスを停止' TITLE='Obsessing Overサービスを停止'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Obsessing Overサービスを停止</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_OBSESSING_OVER_SVC_CHECKS);
 		else
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Start Obsessing Over Services' TITLE='Start Obsessing Over Services'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Start obsessing over services</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_OBSESSING_OVER_SVC_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Obsessing Overサービスを開始' TITLE='Obsessing Overサービスを開始'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Obsessing Overサービスを開始</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_OBSESSING_OVER_SVC_CHECKS);
 
 		if(obsess_over_hosts==TRUE)
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Stop Obsessing Over Hosts' TITLE='Stop Obsessing Over Hosts'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Stop obsessing over hosts</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_OBSESSING_OVER_HOST_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Obsessing Overホストを停止' TITLE='Obsessing Overホストを停止'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Obsessing Overホストを停止</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_OBSESSING_OVER_HOST_CHECKS);
 		else
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Start Obsessing Over Hosts' TITLE='Start Obsessing Over Hosts'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Start obsessing over hosts</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_OBSESSING_OVER_HOST_CHECKS);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Obsessing Overホストを開始' TITLE='Obsessing Overホストを開始'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Obsessing Overホストを開始</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_OBSESSING_OVER_HOST_CHECKS);
 
 		if(enable_flap_detection==TRUE)
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Disable Flap Detection' TITLE='Disable Flap Detection'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Disable flap detection</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_FLAP_DETECTION);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='フラップ検知を無効' TITLE='フラップ検知を無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>フラップ検知を無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_FLAP_DETECTION);
 		else
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Enable Flap Detection' TITLE='Enable Flap Detection'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Enable flap detection</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_FLAP_DETECTION);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='フラップ検知を有効' TITLE='フラップ検知を有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>フラップ検知を有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_FLAP_DETECTION);
 
 #ifdef PREDICT_FAILURES
 		if(enable_failure_prediction==TRUE)
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Disable Failure Prediction' TITLE='Disable Failure Prediction'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Disable failure prediction</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_FAILURE_PREDICTION);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='予測機能を無効' TITLE='予測機能を無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>予測機能を無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_FAILURE_PREDICTION);
 		else
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Enable Failure Prediction' TITLE='Enable Failure Prediction'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Enable failure prediction</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_FAILURE_PREDICTION);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='予測機能を有効' TITLE='予測機能を有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>予測機能を有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_FAILURE_PREDICTION);
 #endif
 		if(process_performance_data==TRUE)
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Disable Performance Data' TITLE='Disable Performance Data'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Disable performance data</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_PERFORMANCE_DATA);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='パフォーマンスデータを無効' TITLE='パフォーマンスデータを無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>パフォーマンスデータを無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_PERFORMANCE_DATA);
 		else
-			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='Enable Performance Data' TITLE='Enable Performance Data'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>Enable performance data</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_PERFORMANCE_DATA);
+			printf("<TR CLASS='command'><TD><img src='%s%s' border=0 ALT='パフォーマンスデータを有効' TITLE='パフォーマンスデータを有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d'>パフォーマンスデータを有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_PERFORMANCE_DATA);
 
 		printf("</TABLE>\n");
 	        }
 	else{
-		printf("<DIV ALIGN=CENTER CLASS='infoMessage'>It appears as though Nagios is not running, so commands are temporarily unavailable...\n");
+		printf("<DIV ALIGN=CENTER CLASS='infoMessage'>Nagiosが動作していないため、コマンドは使えません。\n");
 		if(!strcmp(nagios_check_command,"")){
 			printf("<BR><BR>\n");
-			printf("Hint: It looks as though you have not defined a command for checking the process state by supplying a value for the <b>nagios_check_command</b> option in the CGI configuration file.<BR>\n");
-			printf("Read the documentation for more information on checking the status of the Nagios process in the CGIs.\n");
+			printf("ヒント:プロセス情報をチェックするコマンドが設定されてない可能性があります。CGI設定ファイル中の<b>nagios_check_command</b>をチェックしてください。<BR>\n");
+			printf("より詳しい情報はドキュメントを参照してください。<BR>\n");
 		        }
 		printf("</DIV>\n");
 	        }
@@ -980,34 +980,34 @@
 	printf("<P>");
 	printf("<DIV ALIGN=CENTER>\n");
 
-	printf("<DIV CLASS='dataTitle'>Process Status Information</DIV>\n");
+	printf("<DIV CLASS='dataTitle'>プロセスステータス情報<</DIV>\n");
 
 	printf("<TABLE BORDER=1 CELLSPACING=0 CELLPADDING=0 CLASS='data'>\n");
 	printf("<TR><TD class='stateInfoTable2'>\n");
 	printf("<TABLE BORDER=0>\n");
 
 	if(nagios_process_state==STATE_OK){
-		strcpy(state_string,"OK");
+		strcpy(state_string,"正常(OK)");
 		state_class="processOK";
 		}
 	else if(nagios_process_state==STATE_WARNING){
-		strcpy(state_string,"WARNING");
+		strcpy(state_string,"警告(WARNING)");
 		state_class="processWARNING";
 		}
 	else if(nagios_process_state==STATE_CRITICAL){
-		strcpy(state_string,"CRITICAL");
+		strcpy(state_string,"異常(CRITICAL)");
 		state_class="processCRITICAL";
 		}
 	else{
-		strcpy(state_string,"UNKNOWN");
+		strcpy(state_string,"不明(UNKNOWN)");
 		state_class="processUNKNOWN";
 		}
 
 	/* process state */
-	printf("<TR><TD CLASS='dataVar'>Process Status:</TD><TD CLASS='dataVal'><DIV CLASS='%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",state_class,state_string);
+	printf("<TR><TD CLASS='dataVar'>プロセスステータス:</TD><TD CLASS='dataVal'><DIV CLASS='%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",state_class,state_string);
 
 	/* process check command result */
-	printf("<TR><TD CLASS='dataVar'>Check Command Output:&nbsp;</TD><TD CLASS='dataVal'>%s&nbsp;</TD></TR>\n",nagios_process_info);
+	printf("<TR><TD CLASS='dataVar'>チェックコマンド出力:&nbsp;</TD><TD CLASS='dataVal'>%s&nbsp;</TD></TR>\n",nagios_process_info);
 
 	printf("</TABLE>\n");
 	printf("</TD></TR>\n");
@@ -1045,9 +1045,8 @@
 	/* make sure the user has rights to view host information */
 	if(is_authorized_for_host(temp_host,&current_authdata)==FALSE){
 
-		printf("<P><DIV CLASS='errorMessage'>It appears as though you do not have permission to view information for this host...</DIV></P>\n");
-		printf("<P><DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-		printf("and check the authorization options in your CGI configuration file.</DIV></P>\n");
+		printf("<P><DIV CLASS='errorMessage'>このホスト情報を閲覧する権限が無いようです。</DIV></P>\n");
+		printf("<P><DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV></P>\n");
 
 		return;
 	        }
@@ -1057,11 +1056,11 @@
 
 	/* make sure host information exists */
 	if(temp_host==NULL){
-		printf("<P><DIV CLASS='errorMessage'>Error: Host Not Found!</DIV></P>>");
+		printf("<P><DIV CLASS='errorMessage'>エラー: ホストが見つかりません。</DIV></P>>");
 		return;
 		}
 	if(temp_hoststatus==NULL){
-		printf("<P><DIV CLASS='errorMessage'>Error: Host Status Information Not Found!</DIV></P");
+		printf("<P><DIV CLASS='errorMessage'>エラー: ホスト情報が見つかりません。</DIV></P");
 		return;
 		}
 
@@ -1072,10 +1071,10 @@
 
 	printf("<TD ALIGN=CENTER VALIGN=TOP CLASS='stateInfoPanel'>\n");
 	
-	printf("<DIV CLASS='dataTitle'>Host State Information</DIV>\n");
+	printf("<DIV CLASS='dataTitle'>ホスト情報</DIV>\n");
 
 	if(temp_hoststatus->has_been_checked==FALSE)
-		printf("<P><DIV ALIGN=CENTER>This host has not yet been checked, so status information is not available.</DIV></P>\n");
+		printf("<P><DIV ALIGN=CENTER>このホストはまだチェックされてないため情報がありません。</DIV></P>\n");
 
 	else{
 
@@ -1105,25 +1104,25 @@
 		if(duration_error==TRUE)
 			snprintf(state_duration,sizeof(state_duration)-1,"???");
 		else
-			snprintf(state_duration,sizeof(state_duration)-1,"%2dd %2dh %2dm %2ds%s",days,hours,minutes,seconds,(temp_hoststatus->last_state_change==(time_t)0)?"+":"");
+			snprintf(state_duration,sizeof(state_duration)-1,"%2d日間と %2d時間 %2d分 %2d秒%s",days,hours,minutes,seconds,(temp_hoststatus->last_state_change==(time_t)0)?"+":"");
 		state_duration[sizeof(state_duration)-1]='\x0';
 
 		if(temp_hoststatus->status==HOST_UP){
-			strcpy(state_string,"UP");
+			strcpy(state_string,"稼働(UP)");
 			bg_class="hostUP";
 		        }
 		else if(temp_hoststatus->status==HOST_DOWN){
-			strcpy(state_string,"DOWN");
+			strcpy(state_string,"停止(DOWN)");
 			bg_class="hostDOWN";
 		        }
 		else if(temp_hoststatus->status==HOST_UNREACHABLE){
-			strcpy(state_string,"UNREACHABLE");
+			strcpy(state_string,"未到達(UNREACHABLE)");
 			bg_class="hostUNREACHABLE";
 		        }
 
-		printf("<TR><TD CLASS='dataVar'>Host Status:</td><td CLASS='dataVal'><DIV CLASS='%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV>&nbsp;(for %s)%s</td></tr>\n",bg_class,state_string,state_duration,(temp_hoststatus->problem_has_been_acknowledged==TRUE)?"&nbsp;&nbsp;(Has been acknowledged)":"");
+		printf("<TR><TD CLASS='dataVar'>現在の状態:</td><td CLASS='dataVal'><DIV CLASS='%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV>&nbsp;(%s前より)%s</td></tr>\n",bg_class,state_string,state_duration,(temp_hoststatus->problem_has_been_acknowledged==TRUE)?"&nbsp;&nbsp;(Has been acknowledged)":"");
 
-		printf("<TR><TD CLASS='dataVar' VALIGN='top'>Status Information:</td><td CLASS='dataVal'>%s",(temp_hoststatus->plugin_output==NULL)?"":html_encode(temp_hoststatus->plugin_output,TRUE));
+		printf("<TR><TD CLASS='dataVar' VALIGN='top'>ステータス情報:</td><td CLASS='dataVal'>%s",(temp_hoststatus->plugin_output==NULL)?"":html_encode(temp_hoststatus->plugin_output,TRUE));
 		if(enable_splunk_integration==TRUE){
 			printf("&nbsp;&nbsp;");
 			asprintf(&buf,"%s %s",temp_host->name,temp_hoststatus->plugin_output);
@@ -1134,41 +1133,41 @@
 			printf("<BR>%s",html_encode(temp_hoststatus->long_plugin_output,TRUE));
 		printf("</TD></TR>\n");
 
-		printf("<TR><TD CLASS='dataVar' VALIGN='top'>Performance Data:</td><td CLASS='dataVal'>%s</td></tr>\n",(temp_hoststatus->perf_data==NULL)?"":html_encode(temp_hoststatus->perf_data,TRUE));
+		printf("<TR><TD CLASS='dataVar' VALIGN='top'>パフォーマンスデータ:</td><td CLASS='dataVal'>%s</td></tr>\n",(temp_hoststatus->perf_data==NULL)?"":html_encode(temp_hoststatus->perf_data,TRUE));
 
-		printf("<TR><TD CLASS='dataVar'>Current Attempt:</TD><TD CLASS='dataVal'>%d/%d",temp_hoststatus->current_attempt,temp_hoststatus->max_attempts);
-		printf("&nbsp;&nbsp;(%s state)</TD></TR>\n",(temp_hoststatus->state_type==HARD_STATE)?"HARD":"SOFT");
+		printf("<TR><TD CLASS='dataVar'>現在の試行数:</TD><TD CLASS='dataVal'>%d/%d",temp_hoststatus->current_attempt,temp_hoststatus->max_attempts);
+		printf("&nbsp;&nbsp;(%s 状態)</TD></TR>\n",(temp_hoststatus->state_type==HARD_STATE)?"ハード":"ソフト");
 
 		get_time_string(&temp_hoststatus->last_check,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-		printf("<TR><TD CLASS='dataVar'>Last Check Time:</td><td CLASS='dataVal'>%s</td></tr>\n",date_time);
+		printf("<TR><TD CLASS='dataVar'>最終チェック時間:</td><td CLASS='dataVal'>%s</td></tr>\n",date_time);
 
-		printf("<TR><TD CLASS='dataVar'>Check Type:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(temp_hoststatus->check_type==HOST_CHECK_ACTIVE)?"ACTIVE":"PASSIVE");
+		printf("<TR><TD CLASS='dataVar'>チェックタイプ:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(temp_hoststatus->check_type==HOST_CHECK_ACTIVE)?"アクティブ":"パッシブ");
 
-		printf("<TR><TD CLASS='dataVar' NOWRAP>Check Latency / Duration:</TD><TD CLASS='dataVal'>");
+		printf("<TR><TD CLASS='dataVar' NOWRAP>チェックの待機時間／遅延時間:</TD><TD CLASS='dataVal'>");
 		if(temp_hoststatus->check_type==HOST_CHECK_ACTIVE)
 			printf("%.3f",temp_hoststatus->latency);
 		else
 			printf("N/A");
-		printf("&nbsp;/&nbsp;%.3f seconds",temp_hoststatus->execution_time);
+		printf("&nbsp;/&nbsp;%.3f 秒",temp_hoststatus->execution_time);
 		printf("</TD></TR>\n");
 
 		get_time_string(&temp_hoststatus->next_check,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-		printf("<TR><TD CLASS='dataVar'>Next Scheduled Active Check:&nbsp;&nbsp;</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(temp_hoststatus->checks_enabled && temp_hoststatus->next_check!=(time_t)0 && temp_hoststatus->should_be_scheduled==TRUE)?date_time:"N/A");
+		printf("<TR><TD CLASS='dataVar'>次回動作チェックのスケジュール:&nbsp;&nbsp;</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(temp_hoststatus->checks_enabled && temp_hoststatus->next_check!=(time_t)0 && temp_hoststatus->should_be_scheduled==TRUE)?date_time:"N/A");
 
 		get_time_string(&temp_hoststatus->last_state_change,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-		printf("<TR><TD CLASS='dataVar'>Last State Change:</td><td CLASS='dataVal'>%s</td></tr>\n",(temp_hoststatus->last_state_change==(time_t)0)?"N/A":date_time);
+		printf("<TR><TD CLASS='dataVar'>最終ステータス変化時間:</td><td CLASS='dataVal'>%s</td></tr>\n",(temp_hoststatus->last_state_change==(time_t)0)?"N/A":date_time);
 
 		get_time_string(&temp_hoststatus->last_notification,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-		printf("<TR><TD CLASS='dataVar'>Last Notification:</td><td CLASS='dataVal'>%s&nbsp;(notification %d)</td></tr>\n",(temp_hoststatus->last_notification==(time_t)0)?"N/A":date_time,temp_hoststatus->current_notification_number);
+		printf("<TR><TD CLASS='dataVar'>最終通知時間:</td><td CLASS='dataVal'>%s&nbsp;(通知回数 %d)</td></tr>\n",(temp_hoststatus->last_notification==(time_t)0)?"N/A":date_time,temp_hoststatus->current_notification_number);
 
-		printf("<TR><TD CLASS='dataVar'>Is This Host Flapping?</td><td CLASS='dataVal'>");
+		printf("<TR><TD CLASS='dataVar'>フラッピングの実行状態</td><td CLASS='dataVal'>");
 		if(temp_hoststatus->flap_detection_enabled==FALSE || enable_flap_detection==FALSE)
 			printf("N/A");
 		else
-			printf("<DIV CLASS='%sflapping'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV>&nbsp;(%3.2f%% state change)",(temp_hoststatus->is_flapping==TRUE)?"":"not",(temp_hoststatus->is_flapping==TRUE)?"YES":"NO",temp_hoststatus->percent_state_change);
+			printf("<DIV CLASS='%sflapping'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV>&nbsp;(状態変化率 %3.2f%%)",(temp_hoststatus->is_flapping==TRUE)?"":"not",(temp_hoststatus->is_flapping==TRUE)?"はい":"いいえ",temp_hoststatus->percent_state_change);
 		printf("</td></tr>\n");
 
-		printf("<TR><TD CLASS='dataVar'>In Scheduled Downtime?</td><td CLASS='dataVal'><DIV CLASS='downtime%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></td></tr>\n",(temp_hoststatus->scheduled_downtime_depth>0)?"ACTIVE":"INACTIVE",(temp_hoststatus->scheduled_downtime_depth>0)?"YES":"NO");
+		printf("<TR><TD CLASS='dataVar'>ダウンタイムのスケジュール</td><td CLASS='dataVal'><DIV CLASS='downtime%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></td></tr>\n",(temp_hoststatus->scheduled_downtime_depth>0)?"ACTIVE":"INACTIVE",(temp_hoststatus->scheduled_downtime_depth>0)?"はい":"いいえ");
 
 		t=0;
 		duration_error=FALSE;
@@ -1183,11 +1182,11 @@
 		else if(temp_hoststatus->last_check==(time_t)0)
 			snprintf(status_age,sizeof(status_age)-1,"N/A");
 		else
-			snprintf(status_age,sizeof(status_age)-1,"%2dd %2dh %2dm %2ds",days,hours,minutes,seconds);
+			snprintf(status_age,sizeof(status_age)-1,"%2d日間と %2d時間 %2d分 %2d秒",days,hours,minutes,seconds);
 		status_age[sizeof(status_age)-1]='\x0';
 
 		get_time_string(&temp_hoststatus->last_update,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-		printf("<TR><TD CLASS='dataVar'>Last Update:</td><td CLASS='dataVal'>%s&nbsp;&nbsp;(%s ago)</td></tr>\n",(temp_hoststatus->last_update==(time_t)0)?"N/A":date_time,status_age);
+		printf("<TR><TD CLASS='dataVar'>最終更新時間:</td><td CLASS='dataVal'>%s&nbsp;&nbsp;(%s 前)</td></tr>\n",(temp_hoststatus->last_update==(time_t)0)?"N/A":date_time,status_age);
 
 		printf("</TABLE>\n");
 		printf("</TD></TR>\n");
@@ -1200,17 +1199,17 @@
 		printf("<TR><TD class='stateInfoTable2'>\n");
 		printf("<TABLE BORDER=0>\n");
 
-		printf("<TR><TD CLASS='dataVar'>Active Checks:</TD><TD CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_hoststatus->checks_enabled==TRUE)?"ENABLED":"DISABLED",(temp_hoststatus->checks_enabled==TRUE)?"ENABLED":"DISABLED");
+		printf("<TR><TD CLASS='dataVar'>アクティブチェック:</TD><TD CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_hoststatus->checks_enabled==TRUE)?"ENABLED":"DISABLED",(temp_hoststatus->checks_enabled==TRUE)?"有効":"無効");
 
-		printf("<TR><TD CLASS='dataVar'>Passive Checks:</TD><td CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_hoststatus->accept_passive_host_checks==TRUE)?"ENABLED":"DISABLED",(temp_hoststatus->accept_passive_host_checks)?"ENABLED":"DISABLED");
+		printf("<TR><TD CLASS='dataVar'>パッシブチェック:</TD><td CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_hoststatus->accept_passive_host_checks==TRUE)?"ENABLED":"DISABLED",(temp_hoststatus->accept_passive_host_checks)?"有効":"無効");
 
-		printf("<TR><TD CLASS='dataVar'>Obsessing:</TD><td CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_hoststatus->obsess_over_host==TRUE)?"ENABLED":"DISABLED",(temp_hoststatus->obsess_over_host)?"ENABLED":"DISABLED");
+		printf("<TR><TD CLASS='dataVar'>Obsessing:</TD><td CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_hoststatus->obsess_over_host==TRUE)?"ENABLED":"DISABLED",(temp_hoststatus->obsess_over_host)?"有効":"無効");
 
-		printf("<TR><TD CLASS='dataVar'>Notifications:</td><td CLASS='dataVal'><DIV CLASS='notifications%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></td></tr>\n",(temp_hoststatus->notifications_enabled)?"ENABLED":"DISABLED",(temp_hoststatus->notifications_enabled)?"ENABLED":"DISABLED");
+		printf("<TR><TD CLASS='dataVar'>通知:</td><td CLASS='dataVal'><DIV CLASS='notifications%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></td></tr>\n",(temp_hoststatus->notifications_enabled)?"ENABLED":"DISABLED",(temp_hoststatus->notifications_enabled)?"有効":"無効");
 
-		printf("<TR><TD CLASS='dataVar'>Event Handler:</td><td CLASS='dataVal'><DIV CLASS='eventhandlers%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></td></tr>\n",(temp_hoststatus->event_handler_enabled)?"ENABLED":"DISABLED",(temp_hoststatus->event_handler_enabled)?"ENABLED":"DISABLED");
+		printf("<TR><TD CLASS='dataVar'>イベントハンドラ:</td><td CLASS='dataVal'><DIV CLASS='eventhandlers%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></td></tr>\n",(temp_hoststatus->event_handler_enabled)?"ENABLED":"DISABLED",(temp_hoststatus->event_handler_enabled)?"有効":"無効");
 
-		printf("<TR><TD CLASS='dataVar'>Flap Detection:</td><td CLASS='dataVal'><DIV CLASS='flapdetection%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></td></tr>\n",(temp_hoststatus->flap_detection_enabled==TRUE)?"ENABLED":"DISABLED",(temp_hoststatus->flap_detection_enabled==TRUE)?"ENABLED":"DISABLED");
+		printf("<TR><TD CLASS='dataVar'>フラップ検知:</td><td CLASS='dataVal'><DIV CLASS='flapdetection%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></td></tr>\n",(temp_hoststatus->flap_detection_enabled==TRUE)?"ENABLED":"DISABLED",(temp_hoststatus->flap_detection_enabled==TRUE)?"有効":"無効");
 
 		printf("</TABLE>\n");
 		printf("</TD></TR>\n");
@@ -1227,7 +1226,7 @@
 
 	printf("<TD ALIGN=CENTER VALIGN=TOP CLASS='commandPanel'>\n");
 
-	printf("<DIV CLASS='commandTitle'>Host Commands</DIV>\n");
+	printf("<DIV CLASS='commandTitle'>ホストコマンド</DIV>\n");
 
 	printf("<TABLE BORDER='1' CELLPADDING=0 CELLSPACING=0><TR><TD>\n");
 
@@ -1235,79 +1234,79 @@
 
 		printf("<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 CLASS='command'>\n");
 #ifdef USE_STATUSMAP
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Locate Host On Map' TITLE='Locate Host On Map'></td><td CLASS='command'><a href='%s?host=%s'>Locate host on map</a></td></tr>\n",url_images_path,STATUSMAP_ICON,STATUSMAP_CGI,url_encode(host_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='マップ上のホストの位置を確認' TITLE='マップ上のホストの位置を確認'></td><td CLASS='command'><a href='%s?host=%s'>マップ上のホストの位置を確認</a></td></tr>\n",url_images_path,STATUSMAP_ICON,STATUSMAP_CGI,url_encode(host_name));
 #endif
 		if(temp_hoststatus->checks_enabled==TRUE){
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Active Checks Of This Host' TITLE='Disable Active Checks Of This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Disable active checks of this host</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_CHECK,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストの動作チェックを無効' TITLE='このホストの動作チェックを無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストの動作チェックを無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_CHECK,url_encode(host_name));
 		        }
 		else
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Active Checks Of This Host' TITLE='Enable Active Checks Of This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Enable active checks of this host</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_CHECK,url_encode(host_name));
-		printf("<tr CLASS='data'><td><img src='%s%s' border=0 ALT='Re-schedule Next Host Check' TITLE='Re-schedule Next Host Check'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Re-schedule the next check of this host</a></td></tr>\n",url_images_path,DELAY_ICON,COMMAND_CGI,CMD_SCHEDULE_HOST_CHECK,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストの動作チェックを有効' TITLE='このホストの動作チェックを有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストの動作チェックを有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_CHECK,url_encode(host_name));
+		printf("<tr CLASS='data'><td><img src='%s%s' border=0 ALT='このホストを次回スケジュールに追加' TITLE='このホストを次回スケジュールに追加'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストを次回スケジュールに追加</a></td></tr>\n",url_images_path,DELAY_ICON,COMMAND_CGI,CMD_SCHEDULE_HOST_CHECK,url_encode(host_name));
 
 		if(temp_hoststatus->accept_passive_host_checks==TRUE){
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Submit Passive Check Result For This Host' TITLE='Submit Passive Check Result For This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Submit passive check result for this host</a></td></tr>\n",url_images_path,PASSIVE_ICON,COMMAND_CGI,CMD_PROCESS_HOST_CHECK_RESULT,url_encode(host_name));
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Stop Accepting Passive Checks For This Host' TITLE='Stop Accepting Passive Checks For This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Stop accepting passive checks for this host</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_PASSIVE_HOST_CHECKS,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストのパッシブチェックの結果を送信' TITLE='このホストのパッシブチェックの結果を送信'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストのパッシブチェックの結果を送信</a></td></tr>\n",url_images_path,PASSIVE_ICON,COMMAND_CGI,CMD_PROCESS_HOST_CHECK_RESULT,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストのパッシブチェックを停止' TITLE='このホストのパッシブチェックを停止'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストのパッシブチェックを停止</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_PASSIVE_HOST_CHECKS,url_encode(host_name));
 		        }
 		else
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Start Accepting Passive Checks For This Host' TITLE='Start Accepting Passive Checks For This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Start accepting passive checks for this host</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_PASSIVE_HOST_CHECKS,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストのパッシブチェックを開始' TITLE='このホストのパッシブチェックを開始'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストのパッシブチェックを開始</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_PASSIVE_HOST_CHECKS,url_encode(host_name));
 
 		if(temp_hoststatus->obsess_over_host==TRUE)
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Stop Obsessing Over This Host' TITLE='Stop Obsessing Over This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Stop obsessing over this host</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_OBSESSING_OVER_HOST,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストのObsessing Overを停止' TITLE='このホストのObsessing Overを停止'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストのObsessing overを停止</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_OBSESSING_OVER_HOST,url_encode(host_name));
 		else
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Start Obsessing Over This Host' TITLE='Start Obsessing Over This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Start obsessing over this host</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_OBSESSING_OVER_HOST,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストのObsessing Overを開始' TITLE='このホストのObsessing Overを開始'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストのObsessing overを開始</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_OBSESSING_OVER_HOST,url_encode(host_name));
 
 		if(temp_hoststatus->status==HOST_DOWN || temp_hoststatus->status==HOST_UNREACHABLE){
 			if(temp_hoststatus->problem_has_been_acknowledged==FALSE)
-				printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Acknowledge This Host Problem' TITLE='Acknowledge This Host Problem'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Acknowledge this host problem</a></td></tr>\n",url_images_path,ACKNOWLEDGEMENT_ICON,COMMAND_CGI,CMD_ACKNOWLEDGE_HOST_PROBLEM,url_encode(host_name));
+				printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='認知済' TITLE='認知済'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>認知済</a></td></tr>\n",url_images_path,ACKNOWLEDGEMENT_ICON,COMMAND_CGI,CMD_ACKNOWLEDGE_HOST_PROBLEM,url_encode(host_name));
 			else
-				printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Remove Problem Acknowledgement' TITLE='Remove Problem Acknowledgement'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Remove problem acknowledgement</a></td></tr>\n",url_images_path,REMOVE_ACKNOWLEDGEMENT_ICON,COMMAND_CGI,CMD_REMOVE_HOST_ACKNOWLEDGEMENT,url_encode(host_name));
+				printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='認知済を解除' TITLE='認知済を解除'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>認知済を解除</a></td></tr>\n",url_images_path,REMOVE_ACKNOWLEDGEMENT_ICON,COMMAND_CGI,CMD_REMOVE_HOST_ACKNOWLEDGEMENT,url_encode(host_name));
 		        }
 
 		if(temp_hoststatus->notifications_enabled==TRUE)
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Notifications For This Host' TITLE='Disable Notifications For This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Disable notifications for this host</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_NOTIFICATIONS,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストの通知を無効' TITLE='このホストの通知を無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストの通知を無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_NOTIFICATIONS,url_encode(host_name));
 		else
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Notifications For This Host' TITLE='Enable Notifications For This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Enable notifications for this host</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_NOTIFICATIONS,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストの通知を有効' TITLE='このホストの通知を有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストの通知を有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_NOTIFICATIONS,url_encode(host_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Send Custom Notification' TITLE='Send Custom Notification'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Send custom host notification</a></td></tr>\n",url_images_path,NOTIFICATION_ICON,COMMAND_CGI,CMD_SEND_CUSTOM_HOST_NOTIFICATION,url_encode(host_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='今すぐ通知する' TITLE='今すぐ通知する'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>今すぐ通知する</a></td></tr>\n",url_images_path,NOTIFICATION_ICON,COMMAND_CGI,CMD_SEND_CUSTOM_HOST_NOTIFICATION,url_encode(host_name));
 
 		if(temp_hoststatus->status!=HOST_UP)
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Delay Next Host Notification' TITLE='Delay Next Host Notification'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Delay next host notification</a></td></tr>\n",url_images_path,DELAY_ICON,COMMAND_CGI,CMD_DELAY_HOST_NOTIFICATION,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='次のホスト通知を遅らせる' TITLE='次のホスト通知を遅らせる'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>次のホスト通知を遅らせる</a></td></tr>\n",url_images_path,DELAY_ICON,COMMAND_CGI,CMD_DELAY_HOST_NOTIFICATION,url_encode(host_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Schedule Downtime For This Host' TITLE='Schedule Downtime For This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Schedule downtime for this host</a></td></tr>\n",url_images_path,DOWNTIME_ICON,COMMAND_CGI,CMD_SCHEDULE_HOST_DOWNTIME,url_encode(host_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストのダウンタイムをスケジュール' TITLE='このホストのダウンタイムをスケジュール'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストのダウンタイムをスケジュール</a></td></tr>\n",url_images_path,DOWNTIME_ICON,COMMAND_CGI,CMD_SCHEDULE_HOST_DOWNTIME,url_encode(host_name));
 		
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Schedule Downtime For All Services On This Host' TITLE='Schedule Downtime For All Services On This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Schedule downtime for all services on this host</a></td></tr>\n",url_images_path,DOWNTIME_ICON,COMMAND_CGI,CMD_SCHEDULE_HOST_SVC_DOWNTIME,url_encode(host_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストと全サービスのダウンタイムをスケジュール' TITLE='このホストと全サービスのダウンタイムをスケジュール'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストと全サービスのダウンタイムをスケジュール</a></td></tr>\n",url_images_path,DOWNTIME_ICON,COMMAND_CGI,CMD_SCHEDULE_HOST_SVC_DOWNTIME,url_encode(host_name));
 
 		/*
 		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Cancel Scheduled Downtime For This Host' TITLE='Cancel Scheduled Downtime For This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Cancel scheduled downtime for this host</a></td></tr>\n",url_images_path,SCHEDULED_DOWNTIME_ICON,COMMAND_CGI,CMD_CANCEL_HOST_DOWNTIME,url_encode(host_name));
 		*/
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Notifications For All Services On This Host' TITLE='Disable Notifications For All Services On This Host'></td><td CLASS='command' NOWRAP><a href='%s?cmd_typ=%d&host=%s'>Disable notifications for all services on this host</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_SVC_NOTIFICATIONS,url_encode(host_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストの全サービスの通知を無効' TITLE='このホストの全サービスの通知を無効'></td><td CLASS='command' NOWRAP><a href='%s?cmd_typ=%d&host=%s'>このホストの全サービスの通知を無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_SVC_NOTIFICATIONS,url_encode(host_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Notifications For All Services On This Host' TITLE='Enable Notifications For All Services On This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Enable notifications for all services on this host</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_SVC_NOTIFICATIONS,url_encode(host_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストの全サービスを通知を有効' TITLE='このホストの全サービスの通知を有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストの全サービスの通知を有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_SVC_NOTIFICATIONS,url_encode(host_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Schedule A Check Of All Services On This Host' TITLE='Schedule A Check Of All Services On This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Schedule a check of all services on this host</a></td></tr>\n",url_images_path,DELAY_ICON,COMMAND_CGI,CMD_SCHEDULE_HOST_SVC_CHECKS,url_encode(host_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストの全サービスのチェックをスケジュール' TITLE='このホストの全サービスのチェックをスケジュール'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストの全サービスのチェックをスケジュール</a></td></tr>\n",url_images_path,DELAY_ICON,COMMAND_CGI,CMD_SCHEDULE_HOST_SVC_CHECKS,url_encode(host_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Checks Of All Services On This Host' TITLE='Disable Checks Of All Services On This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Disable checks of all services on this host</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_SVC_CHECKS,url_encode(host_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストの全サービスのチェックを無効' TITLE='このホストの全サービスのチェックを無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストの全サービスのチェックを無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_SVC_CHECKS,url_encode(host_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Checks Of All Services On This Host' TITLE='Enable Checks Of All Services On This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Enable checks of all services on this host</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_SVC_CHECKS,url_encode(host_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストの全サービスのチェックを有効' TITLE='このホストの全サービスのチェックを有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストの全サービスのチェックを有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_SVC_CHECKS,url_encode(host_name));
 
 		if(temp_hoststatus->event_handler_enabled==TRUE)
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Event Handler For This Host' TITLE='Disable Event Handler For This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Disable event handler for this host</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_EVENT_HANDLER,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストのイベントハンドラを無効' TITLE='このホストのイベントハンドラを無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストのイベントハンドラを無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_EVENT_HANDLER,url_encode(host_name));
 		else
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Event Handler For This Host' TITLE='Enable Event Handler For This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Enable event handler for this host</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_EVENT_HANDLER,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストのイベントハンドラを有効' TITLE='このホストのイベントハンドラを有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストのイベントハンドラを有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_EVENT_HANDLER,url_encode(host_name));
 		if(temp_hoststatus->flap_detection_enabled==TRUE)
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Flap Detection For This Host' TITLE='Disable Flap Detection For This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Disable flap detection for this host</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_FLAP_DETECTION,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストのフラップ検知を無効' TITLE='このホストのフラップ検知を無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストのフラップ検知を無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOST_FLAP_DETECTION,url_encode(host_name));
 		else
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Flap Detection For This Host' TITLE='Enable Flap Detection For This Host'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>Enable flap detection for this host</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_FLAP_DETECTION,url_encode(host_name));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストのフラップ検知を有効' TITLE='このホストのフラップ検知を有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s'>このホストのフラップ検知を有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOST_FLAP_DETECTION,url_encode(host_name));
 
 		printf("</TABLE>\n");
 		}
         else if (is_authorized_for_read_only(&current_authdata)==TRUE){
-                printf("<DIV ALIGN=CENTER CLASS='infoMessage'>Your account does not have permissions to execute commands.<br>\n");
+                printf("<DIV ALIGN=CENTER CLASS='infoMessage'>あなたのアカウントはコマンドを実行する権限を持っていません。<br>\n");
 		}
 	else{
-		printf("<DIV ALIGN=CENTER CLASS='infoMessage'>It appears as though Nagios is not running, so commands are temporarily unavailable...<br>\n");
-		printf("Click <a href='%s?type=%d'>here</a> to view Nagios process information</DIV>\n",EXTINFO_CGI,DISPLAY_PROCESS_INFO);
+		printf("<DIV ALIGN=CENTER CLASS='infoMessage'>Nagiosが動作していないため、コマンドは使えません。<br>\n");
+		printf("<a href='%s?type=%d'>ここをクリック</a>してNagiosプロセス情報を確認してください。</DIV>\n",EXTINFO_CGI,DISPLAY_PROCESS_INFO);
 	        }
 	printf("</TD></TR></TABLE>\n");
 
@@ -1357,9 +1356,8 @@
 	/* make sure the user has rights to view service information */
 	if(is_authorized_for_service(temp_service,&current_authdata)==FALSE){
 
-		printf("<P><DIV CLASS='errorMessage'>It appears as though you do not have permission to view information for this service...</DIV></P>\n");
-		printf("<P><DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-		printf("and check the authorization options in your CGI configuration file.</DIV></P>\n");
+		printf("<P><DIV CLASS='errorMessage'>このサービス情報を閲覧する権限ないようです。</DIV></P>\n");
+		printf("<P><DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV></P>\n");
 
 		return;
 	        }
@@ -1369,11 +1367,11 @@
 
 	/* make sure service information exists */
 	if(temp_service==NULL){
-		printf("<P><DIV CLASS='errorMessage'>Error: Service Not Found!</DIV></P>");
+		printf("<P><DIV CLASS='errorMessage'>エラー: サービスが見つかりません。</DIV></P>");
 		return;
 		}
 	if(temp_svcstatus==NULL){
-		printf("<P><DIV CLASS='errorMessage'>Error: Service Status Not Found!</DIV></P>");
+		printf("<P><DIV CLASS='errorMessage'>エラー: サービスステータスが見つかりません。</DIV></P>");
 		return;
 		}
 
@@ -1384,10 +1382,10 @@
 
 	printf("<TD ALIGN=CENTER VALIGN=TOP CLASS='stateInfoPanel'>\n");
 	
-	printf("<DIV CLASS='dataTitle'>Service State Information</DIV>\n");
+	printf("<DIV CLASS='dataTitle'>サービスステータス情報</DIV>\n");
 
 	if(temp_svcstatus->has_been_checked==FALSE)
-		printf("<P><DIV ALIGN=CENTER>This service has not yet been checked, so status information is not available.</DIV></P>\n");
+		printf("<P><DIV ALIGN=CENTER>このサービスはまだチェックされていないのでステータス情報と統計結果はまだありません。</DIV></P>\n");
 
 	else{
 
@@ -1419,28 +1417,28 @@
 		if(duration_error==TRUE)
 			snprintf(state_duration,sizeof(state_duration)-1,"???");
 		else
-			snprintf(state_duration,sizeof(state_duration)-1,"%2dd %2dh %2dm %2ds%s",days,hours,minutes,seconds,(temp_svcstatus->last_state_change==(time_t)0)?"+":"");
+			snprintf(state_duration,sizeof(state_duration)-1,"%2d日間と %2d時間 %2d分 %2d秒%s",days,hours,minutes,seconds,(temp_svcstatus->last_state_change==(time_t)0)?"+":"");
 		state_duration[sizeof(state_duration)-1]='\x0';
 
 		if(temp_svcstatus->status==SERVICE_OK){
-			strcpy(state_string,"OK");
+			strcpy(state_string,"正常(OK)");
 			bg_class="serviceOK";
 			}
 		else if(temp_svcstatus->status==SERVICE_WARNING){
-			strcpy(state_string,"WARNING");
+			strcpy(state_string,"警告(WARNING)");
 			bg_class="serviceWARNING";
 			}
 		else if(temp_svcstatus->status==SERVICE_CRITICAL){
-			strcpy(state_string,"CRITICAL");
+			strcpy(state_string,"異常(CRITICAL)");
 			bg_class="serviceCRITICAL";
 			}
 		else{
-			strcpy(state_string,"UNKNOWN");
+			strcpy(state_string,"不明(UNKNOWN)");
 			bg_class="serviceUNKNOWN";
 			}
-		printf("<TR><TD CLASS='dataVar'>Current Status:</TD><TD CLASS='dataVal'><DIV CLASS='%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV>&nbsp;(for %s)%s</TD></TR>\n",bg_class,state_string,state_duration,(temp_svcstatus->problem_has_been_acknowledged==TRUE)?"&nbsp;&nbsp;(Has been acknowledged)":"");
+		printf("<TR><TD CLASS='dataVar'>現在の状態:</TD><TD CLASS='dataVal'><DIV CLASS='%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV>&nbsp;(%s前より)%s</TD></TR>\n",bg_class,state_string,state_duration,(temp_svcstatus->problem_has_been_acknowledged==TRUE)?"&nbsp;&nbsp;(Has been acknowledged)":"");
 
-		printf("<TR><TD CLASS='dataVar' VALIGN='top'>Status Information:</TD><TD CLASS='dataVal'>%s",(temp_svcstatus->plugin_output==NULL)?"":html_encode(temp_svcstatus->plugin_output,TRUE));
+		printf("<TR><TD CLASS='dataVar' VALIGN='top'>ステータス情報:</TD><TD CLASS='dataVal'>%s",(temp_svcstatus->plugin_output==NULL)?"":html_encode(temp_svcstatus->plugin_output,TRUE));
 		if(enable_splunk_integration==TRUE){
 			printf("&nbsp;&nbsp;");
 			asprintf(&buf,"%s %s %s",temp_service->host_name,temp_service->description,temp_svcstatus->plugin_output);
@@ -1451,41 +1449,41 @@
 			printf("<BR>%s",html_encode(temp_svcstatus->long_plugin_output,TRUE));
 		printf("</TD></TR>\n");
 
-		printf("<TR><TD CLASS='dataVar' VALIGN='top'>Performance Data:</td><td CLASS='dataVal'>%s</td></tr>\n",(temp_svcstatus->perf_data==NULL)?"":html_encode(temp_svcstatus->perf_data,TRUE));
+		printf("<TR><TD CLASS='dataVar' VALIGN='top'>パフォーマンスデータ:</td><td CLASS='dataVal'>%s</td></tr>\n",(temp_svcstatus->perf_data==NULL)?"":html_encode(temp_svcstatus->perf_data,TRUE));
 
-		printf("<TR><TD CLASS='dataVar'>Current Attempt:</TD><TD CLASS='dataVal'>%d/%d",temp_svcstatus->current_attempt,temp_svcstatus->max_attempts);
-		printf("&nbsp;&nbsp;(%s state)</TD></TR>\n",(temp_svcstatus->state_type==HARD_STATE)?"HARD":"SOFT");
+		printf("<TR><TD CLASS='dataVar'>現在の試行数:</TD><TD CLASS='dataVal'>%d/%d",temp_svcstatus->current_attempt,temp_svcstatus->max_attempts);
+		printf("&nbsp;&nbsp;(%s 状態)</TD></TR>\n",(temp_svcstatus->state_type==HARD_STATE)?"ハード":"ソフト");
 
 		get_time_string(&temp_svcstatus->last_check,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-		printf("<TR><TD CLASS='dataVar'>Last Check Time:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",date_time);
+		printf("<TR><TD CLASS='dataVar'>最終チェック時間:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",date_time);
 
-		printf("<TR><TD CLASS='dataVar'>Check Type:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(temp_svcstatus->check_type==SERVICE_CHECK_ACTIVE)?"ACTIVE":"PASSIVE");
+		printf("<TR><TD CLASS='dataVar'>チェックタイプ:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(temp_svcstatus->check_type==SERVICE_CHECK_ACTIVE)?"アクティブ":"パッシブ");
 
-		printf("<TR><TD CLASS='dataVar' NOWRAP>Check Latency / Duration:</TD><TD CLASS='dataVal'>");
+		printf("<TR><TD CLASS='dataVar' NOWRAP>チェックの待機時間／遅延時間:</TD><TD CLASS='dataVal'>");
 		if(temp_svcstatus->check_type==SERVICE_CHECK_ACTIVE)
 			printf("%.3f",temp_svcstatus->latency);
 		else
 			printf("N/A");
-		printf("&nbsp;/&nbsp;%.3f seconds",temp_svcstatus->execution_time);
+		printf("&nbsp;/&nbsp;%.3f 秒",temp_svcstatus->execution_time);
 		printf("</TD></TR>\n");
 
 		get_time_string(&temp_svcstatus->next_check,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-		printf("<TR><TD CLASS='dataVar'>Next Scheduled Check:&nbsp;&nbsp;</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(temp_svcstatus->checks_enabled && temp_svcstatus->next_check!=(time_t)0 && temp_svcstatus->should_be_scheduled==TRUE)?date_time:"N/A");
+		printf("<TR><TD CLASS='dataVar'>次回動作チェックのスケジュール:&nbsp;&nbsp;</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(temp_svcstatus->checks_enabled && temp_svcstatus->next_check!=(time_t)0 && temp_svcstatus->should_be_scheduled==TRUE)?date_time:"N/A");
 
 		get_time_string(&temp_svcstatus->last_state_change,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-		printf("<TR><TD CLASS='dataVar'>Last State Change:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(temp_svcstatus->last_state_change==(time_t)0)?"N/A":date_time);
+		printf("<TR><TD CLASS='dataVar'>最終ステータス変化時間:</TD><TD CLASS='dataVal'>%s</TD></TR>\n",(temp_svcstatus->last_state_change==(time_t)0)?"N/A":date_time);
 
 		get_time_string(&temp_svcstatus->last_notification,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-		printf("<TR><TD CLASS='dataVar'>Last Notification:</TD><TD CLASS='dataVal'>%s&nbsp;(notification %d)</TD></TR>\n",(temp_svcstatus->last_notification==(time_t)0)?"N/A":date_time,temp_svcstatus->current_notification_number);
+		printf("<TR><TD CLASS='dataVar'>最終通知時間:</TD><TD CLASS='dataVal'>%s&nbsp;(通知回数 %d)</TD></TR>\n",(temp_svcstatus->last_notification==(time_t)0)?"N/A":date_time,temp_svcstatus->current_notification_number);
 
-		printf("<TR><TD CLASS='dataVar'>Is This Service Flapping?</TD><TD CLASS='dataVal'>");
+		printf("<TR><TD CLASS='dataVar'>フラッピングの実行状態:</TD><TD CLASS='dataVal'>");
 		if(temp_svcstatus->flap_detection_enabled==FALSE || enable_flap_detection==FALSE)
 			printf("N/A");
 		else
-			printf("<DIV CLASS='%sflapping'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV>&nbsp;(%3.2f%% state change)",(temp_svcstatus->is_flapping==TRUE)?"":"not",(temp_svcstatus->is_flapping==TRUE)?"YES":"NO",temp_svcstatus->percent_state_change);
+			printf("<DIV CLASS='%sflapping'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV>&nbsp;(状態変化率 %3.2f%%)",(temp_svcstatus->is_flapping==TRUE)?"":"not",(temp_svcstatus->is_flapping==TRUE)?"はい":"いいえ",temp_svcstatus->percent_state_change);
 		printf("</TD></TR>\n");
 
-		printf("<TR><TD CLASS='dataVar'>In Scheduled Downtime?</TD><TD CLASS='dataVal'><DIV CLASS='downtime%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->scheduled_downtime_depth>0)?"ACTIVE":"INACTIVE",(temp_svcstatus->scheduled_downtime_depth>0)?"YES":"NO");
+		printf("<TR><TD CLASS='dataVar'>ダウンタイムのスケジュール</TD><TD CLASS='dataVal'><DIV CLASS='downtime%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->scheduled_downtime_depth>0)?"ACTIVE":"INACTIVE",(temp_svcstatus->scheduled_downtime_depth>0)?"はい":"いいえ");
 
 		t=0;
 		duration_error=FALSE;
@@ -1500,11 +1498,11 @@
 		else if(temp_svcstatus->last_check==(time_t)0)
 			snprintf(status_age,sizeof(status_age)-1,"N/A");
 		else
-			snprintf(status_age,sizeof(status_age)-1,"%2dd %2dh %2dm %2ds",days,hours,minutes,seconds);
+			snprintf(status_age,sizeof(status_age)-1,"%2d日間と %2d時間 %2d分 %2d秒",days,hours,minutes,seconds);
 		status_age[sizeof(status_age)-1]='\x0';
 
 		get_time_string(&temp_svcstatus->last_update,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-		printf("<TR><TD CLASS='dataVar'>Last Update:</TD><TD CLASS='dataVal'>%s&nbsp;&nbsp;(%s ago)</TD></TR>\n",(temp_svcstatus->last_update==(time_t)0)?"N/A":date_time,status_age);
+		printf("<TR><TD CLASS='dataVar'>最終更新時間:</TD><TD CLASS='dataVal'>%s&nbsp;&nbsp;(%s 前)</TD></TR>\n",(temp_svcstatus->last_update==(time_t)0)?"N/A":date_time,status_age);
 
 
 		printf("</TABLE>\n");
@@ -1519,17 +1517,17 @@
 		printf("<TR><TD class='stateInfoTable2'>\n");
 		printf("<TABLE BORDER=0>\n");
 
-		printf("<TR><TD CLASS='dataVar'>Active Checks:</TD><td CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->checks_enabled)?"ENABLED":"DISABLED",(temp_svcstatus->checks_enabled)?"ENABLED":"DISABLED");
+		printf("<TR><TD CLASS='dataVar'>アクティブチェック:</TD><td CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->checks_enabled)?"ENABLED":"DISABLED",(temp_svcstatus->checks_enabled)?"有効":"無効");
 
-		printf("<TR><TD CLASS='dataVar'>Passive Checks:</TD><td CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->accept_passive_service_checks==TRUE)?"ENABLED":"DISABLED",(temp_svcstatus->accept_passive_service_checks)?"ENABLED":"DISABLED");
+		printf("<TR><TD CLASS='dataVar'>パッシブチェック:</TD><td CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->accept_passive_service_checks==TRUE)?"ENABLED":"DISABLED",(temp_svcstatus->accept_passive_service_checks)?"有効":"無効");
 
-		printf("<TR><TD CLASS='dataVar'>Obsessing:</TD><td CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->obsess_over_service==TRUE)?"ENABLED":"DISABLED",(temp_svcstatus->obsess_over_service)?"ENABLED":"DISABLED");
+		printf("<TR><TD CLASS='dataVar'>Obsessing:</TD><td CLASS='dataVal'><DIV CLASS='checks%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->obsess_over_service==TRUE)?"ENABLED":"DISABLED",(temp_svcstatus->obsess_over_service)?"有効":"無効");
 
-		printf("<TR><td CLASS='dataVar'>Notifications:</TD><td CLASS='dataVal'><DIV CLASS='notifications%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->notifications_enabled)?"ENABLED":"DISABLED",(temp_svcstatus->notifications_enabled)?"ENABLED":"DISABLED");
+		printf("<TR><td CLASS='dataVar'>通知:</TD><td CLASS='dataVal'><DIV CLASS='notifications%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->notifications_enabled)?"ENABLED":"DISABLED",(temp_svcstatus->notifications_enabled)?"有効":"無効");
 
-		printf("<TR><TD CLASS='dataVar'>Event Handler:</TD><td CLASS='dataVal'><DIV CLASS='eventhandlers%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->event_handler_enabled)?"ENABLED":"DISABLED",(temp_svcstatus->event_handler_enabled)?"ENABLED":"DISABLED");
+		printf("<TR><TD CLASS='dataVar'>イベントハンドラ:</TD><td CLASS='dataVal'><DIV CLASS='eventhandlers%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->event_handler_enabled)?"ENABLED":"DISABLED",(temp_svcstatus->event_handler_enabled)?"有効":"無効");
 
-		printf("<TR><TD CLASS='dataVar'>Flap Detection:</TD><td CLASS='dataVal'><DIV CLASS='flapdetection%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->flap_detection_enabled==TRUE)?"ENABLED":"DISABLED",(temp_svcstatus->flap_detection_enabled==TRUE)?"ENABLED":"DISABLED");
+		printf("<TR><TD CLASS='dataVar'>フラップ検知:</TD><td CLASS='dataVal'><DIV CLASS='flapdetection%s'>&nbsp;&nbsp;%s&nbsp;&nbsp;</DIV></TD></TR>\n",(temp_svcstatus->flap_detection_enabled==TRUE)?"ENABLED":"DISABLED",(temp_svcstatus->flap_detection_enabled==TRUE)?"有効":"無効");
 
 
 		printf("</TABLE>\n");
@@ -1549,7 +1547,7 @@
 
 	printf("<TD ALIGN=CENTER VALIGN=TOP CLASS='commandPanel'>\n");
 
-	printf("<DIV CLASS='dataTitle'>Service Commands</DIV>\n");
+	printf("<DIV CLASS='dataTitle'>サービスコマンド</DIV>\n");
 
 	printf("<TABLE BORDER='1' CELLSPACING=0 CELLPADDING=0>\n");
 	printf("<TR><TD>\n");
@@ -1559,53 +1557,53 @@
 
 		if(temp_svcstatus->checks_enabled){
 
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Active Checks Of This Service' TITLE='Disable Active Checks Of This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_SVC_CHECK,url_encode(host_name));
-			printf("&service=%s'>Disable active checks of this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスの動作チェックを無効' TITLE='このサービスの動作チェックを無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_SVC_CHECK,url_encode(host_name));
+			printf("&service=%s'>このサービスの動作チェックを無効</a></td></tr>\n",url_encode(service_desc));
 	                }
 		else{
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Active Checks Of This Service' TITLE='Enable Active Checks Of This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_SVC_CHECK,url_encode(host_name));
-			printf("&service=%s'>Enable active checks of this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスの動作チェックを有効' TITLE='このサービスの動作チェックを有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_SVC_CHECK,url_encode(host_name));
+			printf("&service=%s'>このサービスの動作チェックを有効</a></td></tr>\n",url_encode(service_desc));
 	                }
-		printf("<tr CLASS='data'><td><img src='%s%s' border=0 ALT='Re-schedule Next Service Check' TITLE='Re-schedule Next Service Check'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DELAY_ICON,COMMAND_CGI,CMD_SCHEDULE_SVC_CHECK,url_encode(host_name));
-		printf("&service=%s'>Re-schedule the next check of this service</a></td></tr>\n",url_encode(service_desc));
+		printf("<tr CLASS='data'><td><img src='%s%s' border=0 ALT='このサービスの動作チェックを次回スケジュールに追加' TITLE='このサービスの動作チェックを次回スケジュールに追加'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DELAY_ICON,COMMAND_CGI,CMD_SCHEDULE_SVC_CHECK,url_encode(host_name));
+		printf("&service=%s'>このサービスの動作チェックを次回スケジュールに追加</a></td></tr>\n",url_encode(service_desc));
 
 		if(temp_svcstatus->accept_passive_service_checks==TRUE){
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Submit Passive Check Result For This Service' TITLE='Submit Passive Check Result For This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,PASSIVE_ICON,COMMAND_CGI,CMD_PROCESS_SERVICE_CHECK_RESULT,url_encode(host_name));
-			printf("&service=%s'>Submit passive check result for this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスのパッシブチェックの結果を送信' TITLE='このサービスのパッシブチェックの結果を送信'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,PASSIVE_ICON,COMMAND_CGI,CMD_PROCESS_SERVICE_CHECK_RESULT,url_encode(host_name));
+			printf("&service=%s'>このサービスのパッシブチェックの結果を送信</a></td></tr>\n",url_encode(service_desc));
 
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Stop Accepting Passive Checks For This Service' TITLE='Stop Accepting Passive Checks For This Service'></td><td CLASS='command' NOWRAP><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_PASSIVE_SVC_CHECKS,url_encode(host_name));
-			printf("&service=%s'>Stop accepting passive checks for this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスのパッシブチェックを停止' TITLE='このサービスのパッシブチェックを停止'></td><td CLASS='command' NOWRAP><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_PASSIVE_SVC_CHECKS,url_encode(host_name));
+			printf("&service=%s'>このサービスのパッシブチェックを停止</a></td></tr>\n",url_encode(service_desc));
 		        }
 		else{
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Start Accepting Passive Checks For This Service' TITLE='Start Accepting Passive Checks For This Service'></td><td CLASS='command' NOWRAP><a href='%s?cmd_typ=%d&host=%s",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_PASSIVE_SVC_CHECKS,url_encode(host_name));
-			printf("&service=%s'>Start accepting passive checks for this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスのパッシブチェックを開始' TITLE='このサービスのパッシブチェックを開始'></td><td CLASS='command' NOWRAP><a href='%s?cmd_typ=%d&host=%s",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_PASSIVE_SVC_CHECKS,url_encode(host_name));
+			printf("&service=%s'>このサービスのパッシブチェックを開始</a></td></tr>\n",url_encode(service_desc));
 		        }
 
 		if(temp_svcstatus->obsess_over_service==TRUE){
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Stop Obsessing Over This Service' TITLE='Stop Obsessing Over This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_OBSESSING_OVER_SVC,url_encode(host_name));
-			printf("&service=%s'>Stop obsessing over this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスのObsessing Overを停止' TITLE='このサービスのObsessing Overを停止'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_STOP_OBSESSING_OVER_SVC,url_encode(host_name));
+			printf("&service=%s'>このサービスのObsessing overを停止</a></td></tr>\n",url_encode(service_desc));
 		        }
 		else{
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Start Obsessing Over This Service' TITLE='Start Obsessing Over This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_OBSESSING_OVER_SVC,url_encode(host_name));
-			printf("&service=%s'>Start obsessing over this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスのObsessing Overを開始' TITLE='このサービスのObsessing Overを開始'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_START_OBSESSING_OVER_SVC,url_encode(host_name));
+			printf("&service=%s'>このサービスのObsessing overを開始</a></td></tr>\n",url_encode(service_desc));
 		        }
 
 		if((temp_svcstatus->status==SERVICE_WARNING || temp_svcstatus->status==SERVICE_UNKNOWN || temp_svcstatus->status==SERVICE_CRITICAL) && temp_svcstatus->state_type==HARD_STATE){
 			if(temp_svcstatus->problem_has_been_acknowledged==FALSE){
-				printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Acknowledge This Service Problem' TITLE='Acknowledge This Service Problem'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,ACKNOWLEDGEMENT_ICON,COMMAND_CGI,CMD_ACKNOWLEDGE_SVC_PROBLEM,url_encode(host_name));
-				printf("&service=%s'>Acknowledge this service problem</a></td></tr>\n",url_encode(service_desc));
+				printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='認知済' TITLE='認知済'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,ACKNOWLEDGEMENT_ICON,COMMAND_CGI,CMD_ACKNOWLEDGE_SVC_PROBLEM,url_encode(host_name));
+				printf("&service=%s'>この問題を認知済にする。</a></td></tr>\n",url_encode(service_desc));
 			        }
 			else{
-				printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Remove Problem Acknowledgement' TITLE='Remove Problem Acknowledgement'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,REMOVE_ACKNOWLEDGEMENT_ICON,COMMAND_CGI,CMD_REMOVE_SVC_ACKNOWLEDGEMENT,url_encode(host_name));
-				printf("&service=%s'>Remove problem acknowledgement</a></td></tr>\n",url_encode(service_desc));
+				printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='認知済を解除' TITLE='認知済を解除'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,REMOVE_ACKNOWLEDGEMENT_ICON,COMMAND_CGI,CMD_REMOVE_SVC_ACKNOWLEDGEMENT,url_encode(host_name));
+				printf("&service=%s'>認知済を解除</a></td></tr>\n",url_encode(service_desc));
 			        }
 		        }
 		if(temp_svcstatus->notifications_enabled==TRUE){
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Notifications For This Service' TITLE='Disable Notifications For This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_SVC_NOTIFICATIONS,url_encode(host_name));
-			printf("&service=%s'>Disable notifications for this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスの通知を無効' TITLE='このサービスの通知を無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_SVC_NOTIFICATIONS,url_encode(host_name));
+			printf("&service=%s'>このサービスの通知を無効</a></td></tr>\n",url_encode(service_desc));
 			if(temp_svcstatus->status!=SERVICE_OK){
-				printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Delay Next Service Notification' TITLE='Delay Next Service Notification'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DELAY_ICON,COMMAND_CGI,CMD_DELAY_SVC_NOTIFICATION,url_encode(host_name));
-				printf("&service=%s'>Delay next service notification</a></td></tr>\n",url_encode(service_desc));
+				printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='次のサービス通知を遅らせる' TITLE='次のサービス通知を遅らせる'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DELAY_ICON,COMMAND_CGI,CMD_DELAY_SVC_NOTIFICATION,url_encode(host_name));
+				printf("&service=%s'>次のサービス通知を遅らせる</a></td></tr>\n",url_encode(service_desc));
 		                }
 		        }
 		else{
@@ -1613,11 +1611,11 @@
 			printf("&service=%s'>Enable notifications for this service</a></td></tr>\n",url_encode(service_desc));
 		        }
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Send Custom Notification' TITLE='Send Custom Notification'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,NOTIFICATION_ICON,COMMAND_CGI,CMD_SEND_CUSTOM_SVC_NOTIFICATION,url_encode(host_name));
-		printf("&service=%s'>Send custom service notification</a></td></tr>\n",url_encode(service_desc));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='今すぐ通知する' TITLE='今すぐ通知する'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,NOTIFICATION_ICON,COMMAND_CGI,CMD_SEND_CUSTOM_SVC_NOTIFICATION,url_encode(host_name));
+		printf("&service=%s'>今すぐ通知する</a></td></tr>\n",url_encode(service_desc));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Schedule Downtime For This Service' TITLE='Schedule Downtime For This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DOWNTIME_ICON,COMMAND_CGI,CMD_SCHEDULE_SVC_DOWNTIME,url_encode(host_name));
-		printf("&service=%s'>Schedule downtime for this service</a></td></tr>\n",url_encode(service_desc));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスのダウンタイムをスケジュール' TITLE='このサービスのダウンタイムをスケジュール'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DOWNTIME_ICON,COMMAND_CGI,CMD_SCHEDULE_SVC_DOWNTIME,url_encode(host_name));
+		printf("&service=%s'>このサービスのダウンタイムをスケジュール</a></td></tr>\n",url_encode(service_desc));
 
 		/*
 		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Cancel Scheduled Downtime For This Service' TITLE='Cancel Scheduled Downtime For This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,SCHEDULED_DOWNTIME_ICON,COMMAND_CGI,CMD_CANCEL_SVC_DOWNTIME,url_encode(host_name));
@@ -1625,31 +1623,31 @@
 		*/
 
 		if(temp_svcstatus->event_handler_enabled==TRUE){
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Event Handler For This Service' TITLE='Disable Event Handler For This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_SVC_EVENT_HANDLER,url_encode(host_name));
-			printf("&service=%s'>Disable event handler for this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスのイベントハンドラを無効' TITLE='このサービスのイベントハンドラを無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_SVC_EVENT_HANDLER,url_encode(host_name));
+			printf("&service=%s'>このサービスのイベントハンドラを無効</a></td></tr>\n",url_encode(service_desc));
 		        }
 		else{
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Event Handler For This Service' TITLE='Enable Event Handler For This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_SVC_EVENT_HANDLER,url_encode(host_name));
-			printf("&service=%s'>Enable event handler for this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスのイベントハンドラを有効' TITLE='このサービスのイベントハンドラを有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_SVC_EVENT_HANDLER,url_encode(host_name));
+			printf("&service=%s'>このサービスのイベントハンドラを有効</a></td></tr>\n",url_encode(service_desc));
 		        }
 
 		if(temp_svcstatus->flap_detection_enabled==TRUE){
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Flap Detection For This Service' TITLE='Disable Flap Detection For This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_SVC_FLAP_DETECTION,url_encode(host_name));
-			printf("&service=%s'>Disable flap detection for this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスのフラップ検知を無効' TITLE='このサービスのフラップ検知を無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_SVC_FLAP_DETECTION,url_encode(host_name));
+			printf("&service=%s'>このサービスのフラップ検知を無効</a></td></tr>\n",url_encode(service_desc));
 		        }
 		else{
-			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Flap Detection For This Service' TITLE='Enable Flap Detection For This Service'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_SVC_FLAP_DETECTION,url_encode(host_name));
-			printf("&service=%s'>Enable flap detection for this service</a></td></tr>\n",url_encode(service_desc));
+			printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このサービスのフラップ検知を有効' TITLE='このサービスのフラップ検知を有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&host=%s",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_SVC_FLAP_DETECTION,url_encode(host_name));
+			printf("&service=%s'>このサービスのフラップ検知を有効</a></td></tr>\n",url_encode(service_desc));
 		        }
 
 		printf("</table>\n");
 		}
         else if (is_authorized_for_read_only(&current_authdata)==TRUE){
-                printf("<DIV ALIGN=CENTER CLASS='infoMessage'>Your account does not have permissions to execute commands.<br>\n");
+                printf("<DIV ALIGN=CENTER CLASS='infoMessage'>あなたのアカウントはコマンドを実行する権限を持っていません。<br>\n");
                 }
 	else{
-		printf("<DIV CLASS='infoMessage'>It appears as though Nagios is not running, so commands are temporarily unavailable...<br>\n");
-		printf("Click <a href='%s?type=%d'>here</a> to view Nagios process information</DIV>\n",EXTINFO_CGI,DISPLAY_PROCESS_INFO);
+		printf("<DIV CLASS='infoMessage'>Nagiosが動作していないため、コマンドは使えません。<br>\n");
+		printf("<a href='%s?type=%d'>ここをクリック</a>してNagiosプロセス情報を確認してください。</DIV>\n",EXTINFO_CGI,DISPLAY_PROCESS_INFO);
 	        }
 
 	printf("</td></tr>\n");
@@ -1691,16 +1689,15 @@
 	/* make sure the user has rights to view hostgroup information */
 	if(is_authorized_for_hostgroup(temp_hostgroup,&current_authdata)==FALSE){
 
-		printf("<P><DIV CLASS='errorMessage'>It appears as though you do not have permission to view information for this hostgroup...</DIV></P>\n");
-		printf("<P><DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-		printf("and check the authorization options in your CGI configuration file.</DIV></P>\n");
+		printf("<P><DIV CLASS='errorMessage'>ホストグループ情報を閲覧する権限が無いようです。</DIV></P>\n");
+		printf("<P><DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV></P>\n");
 
 		return;
 	        }
 
 	/* make sure hostgroup information exists */
 	if(temp_hostgroup==NULL){
-		printf("<P><DIV CLASS='errorMessage'>Error: Hostgroup Not Found!</DIV></P>");
+		printf("<P><DIV CLASS='errorMessage'>エラー: このホストグループは存在しません。</DIV></P>");
 		return;
 		}
 
@@ -1716,7 +1713,7 @@
 	/* right top panel */
 	printf("</TD><TD ALIGN=CENTER VALIGN=TOP CLASS='stateInfoPanel' ROWSPAN=2>\n");
 
-	printf("<DIV CLASS='dataTitle'>Hostgroup Commands</DIV>\n");
+	printf("<DIV CLASS='dataTitle'>ホストグループコマンド</DIV>\n");
 
 	if(nagios_process_state==STATE_OK && is_authorized_for_read_only(&current_authdata)==FALSE){
 
@@ -1725,21 +1722,21 @@
 
 		printf("<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 CLASS='command'>\n");
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Schedule Downtime For All Hosts In This Hostgroup' TITLE='Schedule Downtime For All Hosts In This Hostgroup'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>Schedule downtime for all hosts in this hostgroup</a></td></tr>\n",url_images_path,DOWNTIME_ICON,COMMAND_CGI,CMD_SCHEDULE_HOSTGROUP_HOST_DOWNTIME,url_encode(hostgroup_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストグループ上全ホストのダウンタイムをスケジュール' TITLE='このホストグループ上全ホストのダウンタイムをスケジュール'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>このホストグループ上全ホストのダウンタイムをスケジュール</a></td></tr>\n",url_images_path,DOWNTIME_ICON,COMMAND_CGI,CMD_SCHEDULE_HOSTGROUP_HOST_DOWNTIME,url_encode(hostgroup_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Schedule Downtime For All Services In This Hostgroup' TITLE='Schedule Downtime For All Services In This Hostgroup'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>Schedule downtime for all services in this hostgroup</a></td></tr>\n",url_images_path,DOWNTIME_ICON,COMMAND_CGI,CMD_SCHEDULE_HOSTGROUP_SVC_DOWNTIME,url_encode(hostgroup_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストグループ上全サービスのダウンタイムをスケジュール' TITLE='このホストグループ上全サービスのダウンタイムをスケジュール'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>このホストグループ上全サービスのダウンタイムをスケジュール</a></td></tr>\n",url_images_path,DOWNTIME_ICON,COMMAND_CGI,CMD_SCHEDULE_HOSTGROUP_SVC_DOWNTIME,url_encode(hostgroup_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Notifications For All Hosts In This Hostgroup' TITLE='Enable Notifications For All Hosts In This Hostgroup'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>Enable notifications for all hosts in this hostgroup</a></td></tr>\n",url_images_path,NOTIFICATION_ICON,COMMAND_CGI,CMD_ENABLE_HOSTGROUP_HOST_NOTIFICATIONS,url_encode(hostgroup_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストグループ上の全ホストの通知を有効' TITLE='このホストグループ上の全ホストの通知を有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>このホストグループ上の全ホストの通知を有効</a></td></tr>\n",url_images_path,NOTIFICATION_ICON,COMMAND_CGI,CMD_ENABLE_HOSTGROUP_HOST_NOTIFICATIONS,url_encode(hostgroup_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Notifications For All Hosts In This Hostgroup' TITLE='Disable Notifications For All Hosts In This Hostgroup'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>Disable notifications for all hosts in this hostgroup</a></td></tr>\n",url_images_path,NOTIFICATIONS_DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOSTGROUP_HOST_NOTIFICATIONS,url_encode(hostgroup_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストグループ上の全ホストの通知を無効' TITLE='このホストグループ上の全ホストの通知を無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>このホストグループ上の全ホストの通知を無効</a></td></tr>\n",url_images_path,NOTIFICATIONS_DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOSTGROUP_HOST_NOTIFICATIONS,url_encode(hostgroup_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Notifications For All Services In This Hostgroup' TITLE='Enable Notifications For All Services In This Hostgroup'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>Enable notifications for all services in this hostgroup</a></td></tr>\n",url_images_path,NOTIFICATION_ICON,COMMAND_CGI,CMD_ENABLE_HOSTGROUP_SVC_NOTIFICATIONS,url_encode(hostgroup_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストグループ上の全サービスの通知を有効' TITLE='このホストグループ上の全サービスの通知を有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>このホストグループ上の全サービスの通知を有効</a></td></tr>\n",url_images_path,NOTIFICATION_ICON,COMMAND_CGI,CMD_ENABLE_HOSTGROUP_SVC_NOTIFICATIONS,url_encode(hostgroup_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Notifications For All Services In This Hostgroup' TITLE='Disable Notifications For All Services In This Hostgroup'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>Disable notifications for all services in this hostgroup</a></td></tr>\n",url_images_path,NOTIFICATIONS_DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOSTGROUP_SVC_NOTIFICATIONS,url_encode(hostgroup_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストグループ上の全サービスの通知を無効' TITLE='このホストグループ上の全サービスの通知を無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>このホストグループ上の全サービスの通知を無効</a></td></tr>\n",url_images_path,NOTIFICATIONS_DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOSTGROUP_SVC_NOTIFICATIONS,url_encode(hostgroup_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Enable Active Checks Of All Services In This Hostgroup' TITLE='Enable Active Checks Of All Services In This Hostgroup'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>Enable active checks of all services in this hostgroup</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOSTGROUP_SVC_CHECKS,url_encode(hostgroup_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストグループ上の全サービスのチェックを有効' TITLE='このホストグループ上の全サービスのチェックを有効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>このホストグループ上の全サービスのチェックを有効</a></td></tr>\n",url_images_path,ENABLED_ICON,COMMAND_CGI,CMD_ENABLE_HOSTGROUP_SVC_CHECKS,url_encode(hostgroup_name));
 
-		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='Disable Active Checks Of All Services In This Hostgroup' TITLE='Disable Active Checks Of All Services In This Hostgroup'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>Disable active checks of all services in this hostgroup</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOSTGROUP_SVC_CHECKS,url_encode(hostgroup_name));
+		printf("<tr CLASS='command'><td><img src='%s%s' border=0 ALT='このホストグループ上の全サービスのチェックを無効' TITLE='このホストグループ上の全サービスのチェックを無効'></td><td CLASS='command'><a href='%s?cmd_typ=%d&hostgroup=%s'>このホストグループ上の全サービスのチェックを無効</a></td></tr>\n",url_images_path,DISABLED_ICON,COMMAND_CGI,CMD_DISABLE_HOSTGROUP_SVC_CHECKS,url_encode(hostgroup_name));
 
 		printf("</table>\n");
 
@@ -1843,8 +1840,8 @@
 		printf("</TABLE>\n");
 	        }
 	else{
-		printf("<DIV CLASS='infoMessage'>It appears as though Nagios is not running, so commands are temporarily unavailable...<br>\n");
-		printf("Click <a href='%s?type=%d'>here</a> to view Nagios process information</DIV>\n",EXTINFO_CGI,DISPLAY_PROCESS_INFO);
+		printf("<DIV CLASS='infoMessage'>Nagiosが動作していないため、コマンドは使えません。<br>\n");
+		printf("<a href='%s?type=%d'>ここをクリック</a>してNagiosプロセス情報を確認してください。</DIV>\n",EXTINFO_CGI,DISPLAY_PROCESS_INFO);
 	        }
 
 	printf("</TD></TR>\n");
@@ -1882,26 +1879,26 @@
 
 
         if(is_authorized_for_read_only(&current_authdata)==TRUE){
-                printf("<DIV ALIGN=CENTER CLASS='infoMessage'>Your account does not have permissions to view comments.<br>\n");
+                printf("<DIV ALIGN=CENTER CLASS='infoMessage'>あなたのアカウントはコメントを閲覧する権限を持っていません。<br>\n");
 		return;
 		}
 
 
 	printf("<BR />\n");
-	printf("<DIV CLASS='commentNav'>[&nbsp;<A HREF='#HOSTCOMMENTS' CLASS='commentNav'>Host Comments</A>&nbsp;|&nbsp;<A HREF='#SERVICECOMMENTS' CLASS='commentNav'>Service Comments</A>&nbsp;]</DIV>\n");
+	printf("<DIV CLASS='commentNav'>[&nbsp;<A HREF='#HOSTCOMMENTS' CLASS='commentNav'>ホストコメント</A>&nbsp;|&nbsp;<A HREF='#SERVICECOMMENTS' CLASS='commentNav'>サービスコメント</A>&nbsp;]</DIV>\n");
 	printf("<BR />\n");
 
 	printf("<A NAME=HOSTCOMMENTS></A>\n");
-	printf("<DIV CLASS='commentTitle'>Host Comments</DIV>\n");
+	printf("<DIV CLASS='commentTitle'>ホストコメント</DIV>\n");
 
 	printf("<div CLASS='comment'><img src='%s%s' border=0>&nbsp;",url_images_path,COMMENT_ICON);
 	printf("<a href='%s?cmd_typ=%d'>",COMMAND_CGI,CMD_ADD_HOST_COMMENT);
-	printf("Add a new host comment</a></div>\n");
+	printf("新規コメント追加</a></div>\n");
 
 	printf("<BR />\n");
 	printf("<DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='comment'>\n");
-	printf("<TR CLASS='comment'><TH CLASS='comment'>Host Name</TH><TH CLASS='comment'>Entry Time</TH><TH CLASS='comment'>Author</TH><TH CLASS='comment'>Comment</TH><TH CLASS='comment'>Comment ID</TH><TH CLASS='comment'>Persistent</TH><TH CLASS='comment'>Type</TH><TH CLASS='comment'>Expires</TH><TH CLASS='comment'>Actions</TH></TR>\n");
+	printf("<TR CLASS='comment'><TH CLASS='comment'>ホスト名</TH><TH CLASS='comment'>記入日</TH><TH CLASS='comment'>記入者</TH><TH CLASS='comment'>コメント</TH><TH CLASS='comment'>コメントID</TH><TH CLASS='comment'>保持設定</TH><TH CLASS='comment'>種類</TH><TH CLASS='comment'>期限</TH><TH CLASS='comment'>アクション</TH></TR>\n");
 
 	/* display all the host comments */
 	for(temp_comment=comment_list,total_comments=0;temp_comment!=NULL;temp_comment=temp_comment->next){
@@ -1947,13 +1944,13 @@
 		get_time_string(&temp_comment->expire_time,expire_time,(int)sizeof(date_time),SHORT_DATE_TIME);
 		printf("<tr CLASS='%s'>",bg_class);
 		printf("<td CLASS='%s'><A HREF='%s?type=%d&host=%s'>%s</A></td>",bg_class,EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_comment->host_name),temp_comment->host_name);
-		printf("<td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%ld</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td>",bg_class,date_time,bg_class,temp_comment->author,bg_class,temp_comment->comment_data,bg_class,temp_comment->comment_id,bg_class,(temp_comment->persistent)?"Yes":"No",bg_class,comment_type,bg_class,(temp_comment->expires==TRUE)?expire_time:"N/A");
-		printf("<td><a href='%s?cmd_typ=%d&com_id=%lu'><img src='%s%s' border=0 ALT='Delete This Comment' TITLE='Delete This Comment'></td>",COMMAND_CGI,CMD_DEL_HOST_COMMENT,temp_comment->comment_id,url_images_path,DELETE_ICON);
+		printf("<td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%ld</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td>",bg_class,date_time,bg_class,temp_comment->author,bg_class,temp_comment->comment_data,bg_class,temp_comment->comment_id,bg_class,(temp_comment->persistent)?"はい":"いいえ",bg_class,comment_type,bg_class,(temp_comment->expires==TRUE)?expire_time:"N/A");
+		printf("<td><a href='%s?cmd_typ=%d&com_id=%lu'><img src='%s%s' border=0 ALT='このコメントを削除する' TITLE='このコメントを削除する'></td>",COMMAND_CGI,CMD_DEL_HOST_COMMENT,temp_comment->comment_id,url_images_path,DELETE_ICON);
 		printf("</tr>\n");
 	        }
 
 	if(total_comments==0)
-		printf("<TR CLASS='commentOdd'><TD CLASS='commentOdd' COLSPAN=9>There are no host comments</TD></TR>");
+		printf("<TR CLASS='commentOdd'><TD CLASS='commentOdd' COLSPAN=9>ホストのコメントはありません。</TD></TR>");
 
 	printf("</TABLE>\n");
 	printf("</DIV>\n");
@@ -1962,16 +1959,16 @@
 
 
 	printf("<A NAME=SERVICECOMMENTS></A>\n");
-	printf("<DIV CLASS='commentTitle'>Service Comments</DIV>\n");
+	printf("<DIV CLASS='commentTitle'>サービスコメント</DIV>\n");
 
 	printf("<div CLASS='comment'><img src='%s%s' border=0>&nbsp;",url_images_path,COMMENT_ICON);
 	printf("<a href='%s?cmd_typ=%d'>",COMMAND_CGI,CMD_ADD_SVC_COMMENT);
-	printf("Add a new service comment</a></div>\n");
+	printf("新規コメント追加</a></div>\n");
 
 	printf("<BR />\n");
 	printf("<DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='comment'>\n");
-	printf("<TR CLASS='comment'><TH CLASS='comment'>Host Name</TH><TH CLASS='comment'>Service</TH><TH CLASS='comment'>Entry Time</TH><TH CLASS='comment'>Author</TH><TH CLASS='comment'>Comment</TH><TH CLASS='comment'>Comment ID</TH><TH CLASS='comment'>Persistent</TH><TH CLASS='comment'>Type</TH><TH CLASS='comment'>Expires</TH><TH CLASS='comment'>Actions</TH></TR>\n");
+	printf("<TR CLASS='comment'><TH CLASS='comment'>ホスト名</TH><TH CLASS='comment'>サービス名</TH><TH CLASS='comment'>記入日</TH><TH CLASS='comment'>記入者</TH><TH CLASS='comment'>コメント</TH><TH CLASS='comment'>コメントID</TH><TH CLASS='comment'>保持設定</TH><TH CLASS='comment'>種類</TH><TH CLASS='comment'>期限</TH><TH CLASS='comment'>アクション</TH></TR>\n");
 
 	/* display all the service comments */
 	for(temp_comment=comment_list,total_comments=0;temp_comment!=NULL;temp_comment=temp_comment->next){
@@ -2019,13 +2016,13 @@
 		printf("<td CLASS='%s'><A HREF='%s?type=%d&host=%s'>%s</A></td>",bg_class,EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_comment->host_name),temp_comment->host_name);
 		printf("<td CLASS='%s'><A HREF='%s?type=%d&host=%s",bg_class,EXTINFO_CGI,DISPLAY_SERVICE_INFO,url_encode(temp_comment->host_name));
 		printf("&service=%s'>%s</A></td>",url_encode(temp_comment->service_description),temp_comment->service_description);
-		printf("<td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%ld</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td>",bg_class,date_time,bg_class,temp_comment->author,bg_class,temp_comment->comment_data,bg_class,temp_comment->comment_id,bg_class,(temp_comment->persistent)?"Yes":"No",bg_class,comment_type,bg_class,(temp_comment->expires==TRUE)?expire_time:"N/A");
-		printf("<td><a href='%s?cmd_typ=%d&com_id=%ld'><img src='%s%s' border=0 ALT='Delete This Comment' TITLE='Delete This Comment'></td>",COMMAND_CGI,CMD_DEL_SVC_COMMENT,temp_comment->comment_id,url_images_path,DELETE_ICON);
+		printf("<td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%ld</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td>",bg_class,date_time,bg_class,temp_comment->author,bg_class,temp_comment->comment_data,bg_class,temp_comment->comment_id,bg_class,(temp_comment->persistent)?"はい":"いいえ",bg_class,comment_type,bg_class,(temp_comment->expires==TRUE)?expire_time:"N/A");
+		printf("<td><a href='%s?cmd_typ=%d&com_id=%ld'><img src='%s%s' border=0 ALT='このコメントを削除する' TITLE='このコメントを削除する'></td>",COMMAND_CGI,CMD_DEL_SVC_COMMENT,temp_comment->comment_id,url_images_path,DELETE_ICON);
 		printf("</tr>\n");
 	        }
 
 	if(total_comments==0)
-		printf("<TR CLASS='commentOdd'><TD CLASS='commentOdd' COLSPAN=10>There are no service comments</TD></TR>");
+		printf("<TR CLASS='commentOdd'><TD CLASS='commentOdd' COLSPAN=10>サービスのコメントはありません。</TD></TR>");
 
 	printf("</TABLE>\n");
 	printf("</DIV>\n");
@@ -2291,7 +2288,7 @@
 	printf("<div align=center>\n");
 
 
-	printf("<DIV CLASS='dataTitle'>Program-Wide Performance Information</DIV>\n");
+	printf("<DIV CLASS='dataTitle'>監視のパフォーマンス情報</DIV>\n");
 
 	printf("<table border='0' cellpadding='10'>\n");
 
@@ -2299,7 +2296,7 @@
 	/***** ACTIVE SERVICE CHECKS *****/
 
 	printf("<tr>\n");
-	printf("<td valign=middle><div class='perfTypeTitle'>Services Actively Checked:</div></td>\n");
+	printf("<td valign=middle><div class='perfTypeTitle'>サービスの動作チェック:</div></td>\n");
 	printf("<td valign=top>\n");
 
 	/* fake this so we don't divide by zero for just showing the table */
@@ -2310,12 +2307,12 @@
 	printf("<TR><TD class='stateInfoTable1'>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<tr class='data'><th class='data'>Time Frame</th><th class='data'>Services Checked</th></tr>\n");
-	printf("<tr><td class='dataVar'>&lt;= 1 minute:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_service_checks_1min,(double)(((double)active_service_checks_1min*100.0)/(double)total_active_service_checks));
-	printf("<tr><td class='dataVar'>&lt;= 5 minutes:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_service_checks_5min,(double)(((double)active_service_checks_5min*100.0)/(double)total_active_service_checks));
-	printf("<tr><td class='dataVar'>&lt;= 15 minutes:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_service_checks_15min,(double)(((double)active_service_checks_15min*100.0)/(double)total_active_service_checks));
-	printf("<tr><td class='dataVar'>&lt;= 1 hour:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_service_checks_1hour,(double)(((double)active_service_checks_1hour*100.0)/(double)total_active_service_checks));
-	printf("<tr><td class='dataVar'>Since program start:&nbsp;&nbsp;</td><td class='dataVal'>%d (%.1f%%)</td>",active_service_checks_start,(double)(((double)active_service_checks_start*100.0)/(double)total_active_service_checks));
+	printf("<tr class='data'><th class='data'>間隔</th><th class='data'>件数(率)</th></tr>\n");
+	printf("<tr><td class='dataVar'>&lt;= 1分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_service_checks_1min,(double)(((double)active_service_checks_1min*100.0)/(double)total_active_service_checks));
+	printf("<tr><td class='dataVar'>&lt;= 5分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_service_checks_5min,(double)(((double)active_service_checks_5min*100.0)/(double)total_active_service_checks));
+	printf("<tr><td class='dataVar'>&lt;= 15分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_service_checks_15min,(double)(((double)active_service_checks_15min*100.0)/(double)total_active_service_checks));
+	printf("<tr><td class='dataVar'>&lt;= 1時間(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_service_checks_1hour,(double)(((double)active_service_checks_1hour*100.0)/(double)total_active_service_checks));
+	printf("<tr><td class='dataVar'>プログラム開始以来:&nbsp;&nbsp;</td><td class='dataVal'>%d (%.1f%%)</td>",active_service_checks_start,(double)(((double)active_service_checks_start*100.0)/(double)total_active_service_checks));
 
 	printf("</TABLE>\n");
 	printf("</TD></TR>\n");
@@ -2327,13 +2324,13 @@
 	printf("<TR><TD class='stateInfoTable2'>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<tr class='data'><th class='data'>Metric</th><th class='data'>Min.</th><th class='data'>Max.</th><th class='data'>Average</th></tr>\n");
+	printf("<tr class='data'><th class='data'>メトリック</th><th class='data'>最小</th><th class='data'>最大</th><th class='data'>平均</th></tr>\n");
 
-	printf("<tr><td class='dataVar'>Check Execution Time:&nbsp;&nbsp;</td><td class='dataVal'>%.2f sec</td><td class='dataVal'>%.2f sec</td><td class='dataVal'>%.3f sec</td></tr>\n",min_service_execution_time,max_service_execution_time,(double)((double)total_service_execution_time/(double)total_active_service_checks));
+	printf("<tr><td class='dataVar'>チェック実行時間:&nbsp;&nbsp;</td><td class='dataVal'>%.2f 秒</td><td class='dataVal'>%.2f 秒</td><td class='dataVal'>%.3f 秒</td></tr>\n",min_service_execution_time,max_service_execution_time,(double)((double)total_service_execution_time/(double)total_active_service_checks));
 
-	printf("<tr><td class='dataVar'>Check Latency:</td><td class='dataVal'>%.2f sec</td><td class='dataVal'>%.2f sec</td><td class='dataVal'>%.3f sec</td></tr>\n",min_service_latency,max_service_latency,(double)((double)total_service_latency/(double)total_active_service_checks));
+	printf("<tr><td class='dataVar'>チェック遅延:</td><td class='dataVal'>%.2f 秒</td><td class='dataVal'>%.2f 秒</td><td class='dataVal'>%.3f 秒</td></tr>\n",min_service_latency,max_service_latency,(double)((double)total_service_latency/(double)total_active_service_checks));
 
-	printf("<tr><td class='dataVar'>Percent State Change:</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td></tr>\n",min_service_percent_change_a,max_service_percent_change_a,(double)((double)total_service_percent_change_a/(double)total_active_service_checks));
+	printf("<tr><td class='dataVar'>状態変化率:</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td></tr>\n",min_service_percent_change_a,max_service_percent_change_a,(double)((double)total_service_percent_change_a/(double)total_active_service_checks));
 
 	printf("</TABLE>\n");
 	printf("</TD></TR>\n");
@@ -2347,7 +2344,7 @@
 	/***** PASSIVE SERVICE CHECKS *****/
 
 	printf("<tr>\n");
-	printf("<td valign=middle><div class='perfTypeTitle'>Services Passively Checked:</div></td>\n");
+	printf("<td valign=middle><div class='perfTypeTitle'>サービスのパッシブチェック:</div></td>\n");
 	printf("<td valign=top>\n");
 	
 
@@ -2359,12 +2356,12 @@
 	printf("<TR><TD class='stateInfoTable1'>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<tr class='data'><th class='data'>Time Frame</th><th class='data'>Services Checked</th></tr>\n");
-	printf("<tr><td class='dataVar'>&lt;= 1 minute:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_service_checks_1min,(double)(((double)passive_service_checks_1min*100.0)/(double)total_passive_service_checks));
-	printf("<tr><td class='dataVar'>&lt;= 5 minutes:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_service_checks_5min,(double)(((double)passive_service_checks_5min*100.0)/(double)total_passive_service_checks));
-	printf("<tr><td class='dataVar'>&lt;= 15 minutes:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_service_checks_15min,(double)(((double)passive_service_checks_15min*100.0)/(double)total_passive_service_checks));
-	printf("<tr><td class='dataVar'>&lt;= 1 hour:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_service_checks_1hour,(double)(((double)passive_service_checks_1hour*100.0)/(double)total_passive_service_checks));
-	printf("<tr><td class='dataVar'>Since program start:&nbsp;&nbsp;</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_service_checks_start,(double)(((double)passive_service_checks_start*100.0)/(double)total_passive_service_checks));
+	printf("<tr class='data'><th class='data'>間隔</th><th class='data'>件数(率)</th></tr>\n");
+	printf("<tr><td class='dataVar'>&lt;= 1分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_service_checks_1min,(double)(((double)passive_service_checks_1min*100.0)/(double)total_passive_service_checks));
+	printf("<tr><td class='dataVar'>&lt;= 5分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_service_checks_5min,(double)(((double)passive_service_checks_5min*100.0)/(double)total_passive_service_checks));
+	printf("<tr><td class='dataVar'>&lt;= 15分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_service_checks_15min,(double)(((double)passive_service_checks_15min*100.0)/(double)total_passive_service_checks));
+	printf("<tr><td class='dataVar'>&lt;= 1時間(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_service_checks_1hour,(double)(((double)passive_service_checks_1hour*100.0)/(double)total_passive_service_checks));
+	printf("<tr><td class='dataVar'>プログラム開始以来:&nbsp;&nbsp;</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_service_checks_start,(double)(((double)passive_service_checks_start*100.0)/(double)total_passive_service_checks));
 
 	printf("</TABLE>\n");
 	printf("</TD></TR>\n");
@@ -2376,8 +2373,8 @@
 	printf("<TR><TD class='stateInfoTable2'>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<tr class='data'><th class='data'>Metric</th><th class='data'>Min.</th><th class='data'>Max.</th><th class='data'>Average</th></tr>\n");
-	printf("<tr><td class='dataVar'>Percent State Change:&nbsp;&nbsp;</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td></tr>\n",min_service_percent_change_b,max_service_percent_change_b,(double)((double)total_service_percent_change_b/(double)total_passive_service_checks));
+	printf("<tr class='data'><th class='data'>メトリック</th><th class='data'>最小</th><th class='data'>最大</th><th class='data'>平均</th></tr>\n");
+	printf("<tr><td class='dataVar'>状態変化率:&nbsp;&nbsp;</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td></tr>\n",min_service_percent_change_b,max_service_percent_change_b,(double)((double)total_service_percent_change_b/(double)total_passive_service_checks));
 
 	printf("</TABLE>\n");
 	printf("</TD></TR>\n");
@@ -2390,7 +2387,7 @@
 	/***** ACTIVE HOST CHECKS *****/
 
 	printf("<tr>\n");
-	printf("<td valign=middle><div class='perfTypeTitle'>Hosts Actively Checked:</div></td>\n");
+	printf("<td valign=middle><div class='perfTypeTitle'>ホストの動作チェック:</div></td>\n");
 	printf("<td valign=top>\n");
 
 	/* fake this so we don't divide by zero for just showing the table */
@@ -2401,12 +2398,12 @@
 	printf("<TR><TD class='stateInfoTable1'>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<tr class='data'><th class='data'>Time Frame</th><th class='data'>Hosts Checked</th></tr>\n");
-	printf("<tr><td class='dataVar'>&lt;= 1 minute:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_host_checks_1min,(double)(((double)active_host_checks_1min*100.0)/(double)total_active_host_checks));
-	printf("<tr><td class='dataVar'>&lt;= 5 minutes:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_host_checks_5min,(double)(((double)active_host_checks_5min*100.0)/(double)total_active_host_checks));
-	printf("<tr><td class='dataVar'>&lt;= 15 minutes:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_host_checks_15min,(double)(((double)active_host_checks_15min*100.0)/(double)total_active_host_checks));
-	printf("<tr><td class='dataVar'>&lt;= 1 hour:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_host_checks_1hour,(double)(((double)active_host_checks_1hour*100.0)/(double)total_active_host_checks));
-	printf("<tr><td class='dataVar'>Since program start:&nbsp;&nbsp;</td><td class='dataVal'>%d (%.1f%%)</td>",active_host_checks_start,(double)(((double)active_host_checks_start*100.0)/(double)total_active_host_checks));
+	printf("<tr class='data'><th class='data'>間隔</th><th class='data'>件数(率)</th></tr>\n");
+	printf("<tr><td class='dataVar'>&lt;= 1分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_host_checks_1min,(double)(((double)active_host_checks_1min*100.0)/(double)total_active_host_checks));
+	printf("<tr><td class='dataVar'>&lt;= 5分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_host_checks_5min,(double)(((double)active_host_checks_5min*100.0)/(double)total_active_host_checks));
+	printf("<tr><td class='dataVar'>&lt;= 15分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_host_checks_15min,(double)(((double)active_host_checks_15min*100.0)/(double)total_active_host_checks));
+	printf("<tr><td class='dataVar'>&lt;= 1時間(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",active_host_checks_1hour,(double)(((double)active_host_checks_1hour*100.0)/(double)total_active_host_checks));
+	printf("<tr><td class='dataVar'>プログラム開始以来:&nbsp;&nbsp;</td><td class='dataVal'>%d (%.1f%%)</td>",active_host_checks_start,(double)(((double)active_host_checks_start*100.0)/(double)total_active_host_checks));
 
 	printf("</TABLE>\n");
 	printf("</TD></TR>\n");
@@ -2418,13 +2415,13 @@
 	printf("<TR><TD class='stateInfoTable2'>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<tr class='data'><th class='data'>Metric</th><th class='data'>Min.</th><th class='data'>Max.</th><th class='data'>Average</th></tr>\n");
+	printf("<tr class='data'><th class='data'>メトリック</th><th class='data'>最小</th><th class='data'>最大</th><th class='data'>平均</th></tr>\n");
 
-	printf("<tr><td class='dataVar'>Check Execution Time:&nbsp;&nbsp;</td><td class='dataVal'>%.2f sec</td><td class='dataVal'>%.2f sec</td><td class='dataVal'>%.3f sec</td></tr>\n",min_host_execution_time,max_host_execution_time,(double)((double)total_host_execution_time/(double)total_active_host_checks));
+	printf("<tr><td class='dataVar'>チェック実行時間:&nbsp;&nbsp;</td><td class='dataVal'>%.2f 秒</td><td class='dataVal'>%.2f 秒</td><td class='dataVal'>%.3f 秒</td></tr>\n",min_host_execution_time,max_host_execution_time,(double)((double)total_host_execution_time/(double)total_active_host_checks));
 
-	printf("<tr><td class='dataVar'>Check Latency:</td><td class='dataVal'>%.2f sec</td><td class='dataVal'>%.2f sec</td><td class='dataVal'>%.3f sec</td></tr>\n",min_host_latency,max_host_latency,(double)((double)total_host_latency/(double)total_active_host_checks));
+	printf("<tr><td class='dataVar'>チェック遅延:</td><td class='dataVal'>%.2f 秒</td><td class='dataVal'>%.2f 秒</td><td class='dataVal'>%.3f 秒</td></tr>\n",min_host_latency,max_host_latency,(double)((double)total_host_latency/(double)total_active_host_checks));
 
-	printf("<tr><td class='dataVar'>Percent State Change:</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td></tr>\n",min_host_percent_change_a,max_host_percent_change_a,(double)((double)total_host_percent_change_a/(double)total_active_host_checks));
+	printf("<tr><td class='dataVar'>状態変化率:</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td></tr>\n",min_host_percent_change_a,max_host_percent_change_a,(double)((double)total_host_percent_change_a/(double)total_active_host_checks));
 
 	printf("</TABLE>\n");
 	printf("</TD></TR>\n");
@@ -2438,7 +2435,7 @@
 	/***** PASSIVE HOST CHECKS *****/
 
 	printf("<tr>\n");
-	printf("<td valign=middle><div class='perfTypeTitle'>Hosts Passively Checked:</div></td>\n");
+	printf("<td valign=middle><div class='perfTypeTitle'>ホストのパッシブチェック:</div></td>\n");
 	printf("<td valign=top>\n");
 	
 
@@ -2450,12 +2447,12 @@
 	printf("<TR><TD class='stateInfoTable1'>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<tr class='data'><th class='data'>Time Frame</th><th class='data'>Hosts Checked</th></tr>\n");
-	printf("<tr><td class='dataVar'>&lt;= 1 minute:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_host_checks_1min,(double)(((double)passive_host_checks_1min*100.0)/(double)total_passive_host_checks));
-	printf("<tr><td class='dataVar'>&lt;= 5 minutes:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_host_checks_5min,(double)(((double)passive_host_checks_5min*100.0)/(double)total_passive_host_checks));
-	printf("<tr><td class='dataVar'>&lt;= 15 minutes:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_host_checks_15min,(double)(((double)passive_host_checks_15min*100.0)/(double)total_passive_host_checks));
-	printf("<tr><td class='dataVar'>&lt;= 1 hour:</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_host_checks_1hour,(double)(((double)passive_host_checks_1hour*100.0)/(double)total_passive_host_checks));
-	printf("<tr><td class='dataVar'>Since program start:&nbsp;&nbsp;</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_host_checks_start,(double)(((double)passive_host_checks_start*100.0)/(double)total_passive_host_checks));
+	printf("<tr class='data'><th class='data'>間隔</th><th class='data'>件数(率)</th></tr>\n");
+	printf("<tr><td class='dataVar'>&lt;= 1分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_host_checks_1min,(double)(((double)passive_host_checks_1min*100.0)/(double)total_passive_host_checks));
+	printf("<tr><td class='dataVar'>&lt;= 5分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_host_checks_5min,(double)(((double)passive_host_checks_5min*100.0)/(double)total_passive_host_checks));
+	printf("<tr><td class='dataVar'>&lt;= 15分(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_host_checks_15min,(double)(((double)passive_host_checks_15min*100.0)/(double)total_passive_host_checks));
+	printf("<tr><td class='dataVar'>&lt;= 1時間(以前):</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_host_checks_1hour,(double)(((double)passive_host_checks_1hour*100.0)/(double)total_passive_host_checks));
+	printf("<tr><td class='dataVar'>プログラム開始以来:&nbsp;&nbsp;</td><td class='dataVal'>%d (%.1f%%)</td></tr>",passive_host_checks_start,(double)(((double)passive_host_checks_start*100.0)/(double)total_passive_host_checks));
 
 	printf("</TABLE>\n");
 	printf("</TD></TR>\n");
@@ -2467,8 +2464,8 @@
 	printf("<TR><TD class='stateInfoTable2'>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<tr class='data'><th class='data'>Metric</th><th class='data'>Min.</th><th class='data'>Max.</th><th class='data'>Average</th></tr>\n");
-	printf("<tr><td class='dataVar'>Percent State Change:&nbsp;&nbsp;</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td></tr>\n",min_host_percent_change_b,max_host_percent_change_b,(double)((double)total_host_percent_change_b/(double)total_passive_host_checks));
+	printf("<tr class='data'><th class='data'>メトリック</th><th class='data'>最小</th><th class='data'>最大</th><th class='data'>平均</th></tr>\n");
+	printf("<tr><td class='dataVar'>状態変化率:&nbsp;&nbsp;</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td><td class='dataVal'>%.2f%%</td></tr>\n",min_host_percent_change_b,max_host_percent_change_b,(double)((double)total_host_percent_change_b/(double)total_passive_host_checks));
 
 	printf("</TABLE>\n");
 	printf("</TD></TR>\n");
@@ -2482,7 +2479,7 @@
 	/***** CHECK STATS *****/
 
 	printf("<tr>\n");
-	printf("<td valign=center><div class='perfTypeTitle'>Check Statistics:</div></td>\n");
+	printf("<td valign=center><div class='perfTypeTitle'>統計データ:</div></td>\n");
 	printf("<td valign=top colspan='2'>\n");
 	
 
@@ -2490,20 +2487,20 @@
 	printf("<TR><TD class='stateInfoTable1'>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<tr class='data'><th class='data'>Type</th><th class='data'>Last 1 Min</th><th class='data'>Last 5 Min</th><th class='data'>Last 15 Min</th></tr>\n");
-	printf("<tr><td class='dataVar'>Active Scheduled Host Checks</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_SCHEDULED_HOST_CHECK_STATS][0],program_stats[ACTIVE_SCHEDULED_HOST_CHECK_STATS][1],program_stats[ACTIVE_SCHEDULED_HOST_CHECK_STATS][2]);
-	printf("<tr><td class='dataVar'>Active On-Demand Host Checks</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_ONDEMAND_HOST_CHECK_STATS][0],program_stats[ACTIVE_ONDEMAND_HOST_CHECK_STATS][1],program_stats[ACTIVE_ONDEMAND_HOST_CHECK_STATS][2]);
-	printf("<tr><td class='dataVar'>Parallel Host Checks</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[PARALLEL_HOST_CHECK_STATS][0],program_stats[PARALLEL_HOST_CHECK_STATS][1],program_stats[PARALLEL_HOST_CHECK_STATS][2]);
-	printf("<tr><td class='dataVar'>Serial Host Checks</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[SERIAL_HOST_CHECK_STATS][0],program_stats[SERIAL_HOST_CHECK_STATS][1],program_stats[SERIAL_HOST_CHECK_STATS][2]);
-	printf("<tr><td class='dataVar'>Cached Host Checks</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_CACHED_HOST_CHECK_STATS][0],program_stats[ACTIVE_CACHED_HOST_CHECK_STATS][1],program_stats[ACTIVE_CACHED_HOST_CHECK_STATS][2]);
-	printf("<tr><td class='dataVar'>Passive Host Checks</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[PASSIVE_HOST_CHECK_STATS][0],program_stats[PASSIVE_HOST_CHECK_STATS][1],program_stats[PASSIVE_HOST_CHECK_STATS][2]);
-
-	printf("<tr><td class='dataVar'>Active Scheduled Service Checks</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_SCHEDULED_SERVICE_CHECK_STATS][0],program_stats[ACTIVE_SCHEDULED_SERVICE_CHECK_STATS][1],program_stats[ACTIVE_SCHEDULED_SERVICE_CHECK_STATS][2]);
-	printf("<tr><td class='dataVar'>Active On-Demand Service Checks</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_ONDEMAND_SERVICE_CHECK_STATS][0],program_stats[ACTIVE_ONDEMAND_SERVICE_CHECK_STATS][1],program_stats[ACTIVE_ONDEMAND_SERVICE_CHECK_STATS][2]);
-	printf("<tr><td class='dataVar'>Cached Service Checks</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_CACHED_SERVICE_CHECK_STATS][0],program_stats[ACTIVE_CACHED_SERVICE_CHECK_STATS][1],program_stats[ACTIVE_CACHED_SERVICE_CHECK_STATS][2]);
-	printf("<tr><td class='dataVar'>Passive Service Checks</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[PASSIVE_SERVICE_CHECK_STATS][0],program_stats[PASSIVE_SERVICE_CHECK_STATS][1],program_stats[PASSIVE_SERVICE_CHECK_STATS][2]);
+	printf("<tr class='data'><th class='data'>タイプ</th><th class='data'>1分前</th><th class='data'>5分前</th><th class='data'>15分前</th></tr>\n");
+	printf("<tr><td class='dataVar'>スケジュールホストチェック</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_SCHEDULED_HOST_CHECK_STATS][0],program_stats[ACTIVE_SCHEDULED_HOST_CHECK_STATS][1],program_stats[ACTIVE_SCHEDULED_HOST_CHECK_STATS][2]);
+	printf("<tr><td class='dataVar'>オンデマンドホストチェック</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_ONDEMAND_HOST_CHECK_STATS][0],program_stats[ACTIVE_ONDEMAND_HOST_CHECK_STATS][1],program_stats[ACTIVE_ONDEMAND_HOST_CHECK_STATS][2]);
+	printf("<tr><td class='dataVar'>並列ホストチェック</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[PARALLEL_HOST_CHECK_STATS][0],program_stats[PARALLEL_HOST_CHECK_STATS][1],program_stats[PARALLEL_HOST_CHECK_STATS][2]);
+	printf("<tr><td class='dataVar'>連続ホストチェック</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[SERIAL_HOST_CHECK_STATS][0],program_stats[SERIAL_HOST_CHECK_STATS][1],program_stats[SERIAL_HOST_CHECK_STATS][2]);
+	printf("<tr><td class='dataVar'>キャッシュホストチェック</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_CACHED_HOST_CHECK_STATS][0],program_stats[ACTIVE_CACHED_HOST_CHECK_STATS][1],program_stats[ACTIVE_CACHED_HOST_CHECK_STATS][2]);
+	printf("<tr><td class='dataVar'>パッシブホストチェック</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[PASSIVE_HOST_CHECK_STATS][0],program_stats[PASSIVE_HOST_CHECK_STATS][1],program_stats[PASSIVE_HOST_CHECK_STATS][2]);
+
+	printf("<tr><td class='dataVar'>スケジュールサービスチェック</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_SCHEDULED_SERVICE_CHECK_STATS][0],program_stats[ACTIVE_SCHEDULED_SERVICE_CHECK_STATS][1],program_stats[ACTIVE_SCHEDULED_SERVICE_CHECK_STATS][2]);
+	printf("<tr><td class='dataVar'>オンデマンドサービスチェック</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_ONDEMAND_SERVICE_CHECK_STATS][0],program_stats[ACTIVE_ONDEMAND_SERVICE_CHECK_STATS][1],program_stats[ACTIVE_ONDEMAND_SERVICE_CHECK_STATS][2]);
+	printf("<tr><td class='dataVar'>キャッシュサービスチェック</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[ACTIVE_CACHED_SERVICE_CHECK_STATS][0],program_stats[ACTIVE_CACHED_SERVICE_CHECK_STATS][1],program_stats[ACTIVE_CACHED_SERVICE_CHECK_STATS][2]);
+	printf("<tr><td class='dataVar'>パッシブサービスチェック</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[PASSIVE_SERVICE_CHECK_STATS][0],program_stats[PASSIVE_SERVICE_CHECK_STATS][1],program_stats[PASSIVE_SERVICE_CHECK_STATS][2]);
 
-	printf("<tr><td class='dataVar'>External Commands</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[EXTERNAL_COMMAND_STATS][0],program_stats[EXTERNAL_COMMAND_STATS][1],program_stats[EXTERNAL_COMMAND_STATS][2]);
+	printf("<tr><td class='dataVar'>外部コマンド</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",program_stats[EXTERNAL_COMMAND_STATS][0],program_stats[EXTERNAL_COMMAND_STATS][1],program_stats[EXTERNAL_COMMAND_STATS][2]);
 
 	printf("</TABLE>\n");
 	printf("</TD></TR>\n");
@@ -2517,7 +2514,7 @@
 	/***** BUFFER STATS *****/
 
 	printf("<tr>\n");
-	printf("<td valign=center><div class='perfTypeTitle'>Buffer Usage:</div></td>\n");
+	printf("<td valign=center><div class='perfTypeTitle'>バッファリング:</div></td>\n");
 	printf("<td valign=top colspan='2'>\n");
 	
 
@@ -2525,8 +2522,8 @@
 	printf("<TR><TD class='stateInfoTable1'>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<tr class='data'><th class='data'>Type</th><th class='data'>In Use</th><th class='data'>Max Used</th><th class='data'>Total Available</th></tr>\n");
-	printf("<tr><td class='dataVar'>External Commands&nbsp;</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",buffer_stats[0][1],buffer_stats[0][2],buffer_stats[0][0]);
+	printf("<tr class='data'><th class='data'>種類</th><th class='data'>使用数</th><th class='data'>最大使用可能数</th><th class='data'>合計</th></tr>\n");
+	printf("<tr><td class='dataVar'>外部コマンド&nbsp;</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td><td class='dataVal'>%d</td></tr>",buffer_stats[0][1],buffer_stats[0][2],buffer_stats[0][0]);
 
 	printf("</TABLE>\n");
 	printf("</TD></TR>\n");
@@ -2574,7 +2571,7 @@
 
 
 	printf("<A NAME=comments></A>\n");
-	printf("<DIV CLASS='commentTitle'>%s Comments</DIV>\n",(type==HOST_COMMENT)?"Host":"Service");
+	printf("<DIV CLASS='commentTitle'>%sコメント</DIV>\n",(type==HOST_COMMENT)?"ホスト":"サービス");
 	printf("<TABLE BORDER=0>\n");
 
 	printf("<tr>\n");
@@ -2585,7 +2582,7 @@
 		printf("<a href='%s?cmd_typ=%d&host=%s&",COMMAND_CGI,CMD_ADD_SVC_COMMENT,url_encode(host_name));
 		printf("service=%s' CLASS='comment'>",url_encode(service_desc));
 	        }
-	printf("Add a new comment</a></td>\n");
+	printf("コメントを追加する</a></td>\n");
 
 	printf("<td valign=middle><img src='%s%s' border=0 align=center></td><td CLASS='comment'>",url_images_path,DELETE_ICON);
 	if(type==HOST_COMMENT)
@@ -2594,7 +2591,7 @@
 		printf("<a href='%s?cmd_typ=%d&host=%s&",COMMAND_CGI,CMD_DEL_ALL_SVC_COMMENTS,url_encode(host_name));
 		printf("service=%s' CLASS='comment'>",url_encode(service_desc));
 	        }
-	printf("Delete all comments</a></td>\n");
+	printf("全てのコメントを削除する</a></td>\n");
 	printf("</tr>\n");
 
 	printf("</TABLE>\n");
@@ -2603,7 +2600,7 @@
 
 	printf("<DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='comment'>\n");
-	printf("<TR CLASS='comment'><TH CLASS='comment'>Entry Time</TH><TH CLASS='comment'>Author</TH><TH CLASS='comment'>Comment</TH><TH CLASS='comment'>Comment ID</TH><TH CLASS='comment'>Persistent</TH><TH CLASS='comment'>Type</TH><TH CLASS='comment'>Expires</TH><TH CLASS='comment'>Actions</TH></TR>\n");
+	printf("<TR CLASS='comment'><TH CLASS='comment'>記入日</TH><TH CLASS='comment'>記入者</TH><TH CLASS='comment'>コメント</TH><TH CLASS='comment'>コメントID</TH><TH CLASS='comment'>保持設定</TH><TH CLASS='comment'>種類</TH><TH CLASS='comment'>期限</TH><TH CLASS='comment'>アクション</TH></TR>\n");
 
 	/* check all the comments to see if they apply to this host or service */
 	/* Comments are displayed in the order they are read from the status.dat file */
@@ -2648,8 +2645,8 @@
 			get_time_string(&temp_comment->entry_time,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
 			get_time_string(&temp_comment->expire_time,expire_time,(int)sizeof(date_time),SHORT_DATE_TIME);
 			printf("<tr CLASS='%s'>",bg_class);
-			printf("<td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%lu</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td>",bg_class,date_time,bg_class,temp_comment->author,bg_class,temp_comment->comment_data,bg_class,temp_comment->comment_id,bg_class,(temp_comment->persistent)?"Yes":"No",bg_class,comment_type,bg_class,(temp_comment->expires==TRUE)?expire_time:"N/A");
-			printf("<td><a href='%s?cmd_typ=%d&com_id=%lu'><img src='%s%s' border=0 ALT='Delete This Comment' TITLE='Delete This Comment'></td>",COMMAND_CGI,(type==HOST_COMMENT)?CMD_DEL_HOST_COMMENT:CMD_DEL_SVC_COMMENT,temp_comment->comment_id,url_images_path,DELETE_ICON);
+			printf("<td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%lu</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td><td CLASS='%s'>%s</td>",bg_class,date_time,bg_class,temp_comment->author,bg_class,temp_comment->comment_data,bg_class,temp_comment->comment_id,bg_class,(temp_comment->persistent)?"はい":"いいえ",bg_class,comment_type,bg_class,(temp_comment->expires==TRUE)?expire_time:"N/A");
+			printf("<td><a href='%s?cmd_typ=%d&com_id=%lu'><img src='%s%s' border=0 ALT='このコメントを削除' TITLE='このコメントを削除'></td>",COMMAND_CGI,(type==HOST_COMMENT)?CMD_DEL_HOST_COMMENT:CMD_DEL_SVC_COMMENT,temp_comment->comment_id,url_images_path,DELETE_ICON);
 			printf("</tr>\n");
 
 			total_comments++;
@@ -2658,7 +2655,7 @@
 
 	/* see if this host or service has any comments associated with it */
 	if(total_comments==0)
-		printf("<TR CLASS='commentOdd'><TD CLASS='commentOdd' COLSPAN='%d'>This %s has no comments associated with it</TD></TR>",(type==HOST_COMMENT)?9:10,(type==HOST_COMMENT)?"host":"service");
+		printf("<TR CLASS='commentOdd'><TD CLASS='commentOdd' COLSPAN='%d'>この%sにはコメントがありません。</TD></TR>",(type==HOST_COMMENT)?9:10,(type==HOST_COMMENT)?"ホスト":"サービス");
 
 	printf("</TABLE></DIV>\n");
 
@@ -2684,20 +2681,20 @@
 
 
 	printf("<BR />\n");
-	printf("<DIV CLASS='downtimeNav'>[&nbsp;<A HREF='#HOSTDOWNTIME' CLASS='downtimeNav'>Host Downtime</A>&nbsp;|&nbsp;<A HREF='#SERVICEDOWNTIME' CLASS='downtimeNav'>Service Downtime</A>&nbsp;]</DIV>\n");
+	printf("<DIV CLASS='downtimeNav'>[&nbsp;<A HREF='#HOSTDOWNTIME' CLASS='downtimeNav'>ホストのダウンタイム</A>&nbsp;|&nbsp;<A HREF='#SERVICEDOWNTIME' CLASS='downtimeNav'>サービスのダウンタイム</A>&nbsp;]</DIV>\n");
 	printf("<BR />\n");
 
 	printf("<A NAME=HOSTDOWNTIME></A>\n");
-	printf("<DIV CLASS='downtimeTitle'>Scheduled Host Downtime</DIV>\n");
+	printf("<DIV CLASS='downtimeTitle'>ホストのダウンタイムのスケジュール設定</DIV>\n");
 
 	printf("<div CLASS='comment'><img src='%s%s' border=0>&nbsp;",url_images_path,DOWNTIME_ICON);
 	printf("<a href='%s?cmd_typ=%d'>",COMMAND_CGI,CMD_SCHEDULE_HOST_DOWNTIME);
-	printf("Schedule host downtime</a></div>\n");
+	printf("ホストのダウンタイムをスケジュールする</a></div>\n");
 
 	printf("<BR />\n");
 	printf("<DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='downtime'>\n");
-	printf("<TR CLASS='downtime'><TH CLASS='downtime'>Host Name</TH><TH CLASS='downtime'>Entry Time</TH><TH CLASS='downtime'>Author</TH><TH CLASS='downtime'>Comment</TH><TH CLASS='downtime'>Start Time</TH><TH CLASS='downtime'>End Time</TH><TH CLASS='downtime'>Type</TH><TH CLASS='downtime'>Duration</TH><TH CLASS='downtime'>Downtime ID</TH><TH CLASS='downtime'>Trigger ID</TH><TH CLASS='downtime'>Actions</TH></TR>\n");
+	printf("<TR CLASS='downtime'><TH CLASS='downtime'>ホスト名</TH><TH CLASS='downtime'>登録日</TH><TH CLASS='downtime'>登録者</TH><TH CLASS='downtime'>コメント</TH><TH CLASS='downtime'>開始時間</TH><TH CLASS='downtime'>終了時間</TH><TH CLASS='downtime'>種類</TH><TH CLASS='downtime'>期間</TH><TH CLASS='downtime'>ダウンタイムID</TH><TH CLASS='downtime'>トリガーID</TH><TH CLASS='downtime'>アクション</TH></TR>\n");
 
 	/* display all the host downtime */
 	for(temp_downtime=scheduled_downtime_list,total_downtime=0;temp_downtime!=NULL;temp_downtime=temp_downtime->next){
@@ -2732,7 +2729,7 @@
 		printf("<td CLASS='%s'>%s</td>",bg_class,date_time);
 		get_time_string(&temp_downtime->end_time,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
 		printf("<td CLASS='%s'>%s</td>",bg_class,date_time);
-		printf("<td CLASS='%s'>%s</td>",bg_class,(temp_downtime->fixed==TRUE)?"Fixed":"Flexible");
+		printf("<td CLASS='%s'>%s</td>",bg_class,(temp_downtime->fixed==TRUE)?"固定":"フレキシブル");
 		get_time_breakdown(temp_downtime->duration,&days,&hours,&minutes,&seconds);
 		printf("<td CLASS='%s'>%dd %dh %dm %ds</td>",bg_class,days,hours,minutes,seconds);
 		printf("<td CLASS='%s'>%lu</td>",bg_class,temp_downtime->downtime_id);
@@ -2742,12 +2739,12 @@
 		else
 			printf("%lu",temp_downtime->triggered_by);
 		printf("</td>\n");
-		printf("<td><a href='%s?cmd_typ=%d&down_id=%lu'><img src='%s%s' border=0 ALT='Delete/Cancel This Scheduled Downtime Entry' TITLE='Delete/Cancel This Scheduled Downtime Entry'></td>",COMMAND_CGI,CMD_DEL_HOST_DOWNTIME,temp_downtime->downtime_id,url_images_path,DELETE_ICON);
+		printf("<td><a href='%s?cmd_typ=%d&down_id=%lu'><img src='%s%s' border=0 ALT='このスケジュールエントリを削除もしくはキャンセル' TITLE='このスケジュールエントリを削除もしくはキャンセル'></td>",COMMAND_CGI,CMD_DEL_HOST_DOWNTIME,temp_downtime->downtime_id,url_images_path,DELETE_ICON);
 		printf("</tr>\n");
 	        }
 
 	if(total_downtime==0)
-		printf("<TR CLASS='downtimeOdd'><TD CLASS='downtimeOdd' COLSPAN=11>There are no hosts with scheduled downtime</TD></TR>");
+		printf("<TR CLASS='downtimeOdd'><TD CLASS='downtimeOdd' COLSPAN=11>ダウンタイムがスケジュールされたホストはありません。</TD></TR>");
 
 	printf("</TABLE>\n");
 	printf("</DIV>\n");
@@ -2756,16 +2753,16 @@
 
 
 	printf("<A NAME=SERVICEDOWNTIME></A>\n");
-	printf("<DIV CLASS='downtimeTitle'>Scheduled Service Downtime</DIV>\n");
+	printf("<DIV CLASS='downtimeTitle'>サービスのダウンタイムのスケジュール設定</DIV>\n");
 
 	printf("<div CLASS='comment'><img src='%s%s' border=0>&nbsp;",url_images_path,DOWNTIME_ICON);
 	printf("<a href='%s?cmd_typ=%d'>",COMMAND_CGI,CMD_SCHEDULE_SVC_DOWNTIME);
-	printf("Schedule service downtime</a></div>\n");
+	printf("サービスのダウンタイムをスケジュールする</a></div>\n");
 
 	printf("<BR />\n");
 	printf("<DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='downtime'>\n");
-	printf("<TR CLASS='downtime'><TH CLASS='downtime'>Host Name</TH><TH CLASS='downtime'>Service</TH><TH CLASS='downtime'>Entry Time</TH><TH CLASS='downtime'>Author</TH><TH CLASS='downtime'>Comment</TH><TH CLASS='downtime'>Start Time</TH><TH CLASS='downtime'>End Time</TH><TH CLASS='downtime'>Type</TH><TH CLASS='downtime'>Duration</TH><TH CLASS='downtime'>Downtime ID</TH><TH CLASS='downtime'>Trigger ID</TH><TH CLASS='downtime'>Actions</TH></TR>\n");
+	printf("<TR CLASS='downtime'><TH CLASS='downtime'>ホスト名</TH><TH CLASS='downtime'>サービス名</TH><TH CLASS='downtime'>登録日</TH><TH CLASS='downtime'>登録者</TH><TH CLASS='downtime'>コメント</TH><TH CLASS='downtime'>開始時間</TH><TH CLASS='downtime'>終了時間</TH><TH CLASS='downtime'>種類</TH><TH CLASS='downtime'>期間</TH><TH CLASS='downtime'>ダウンタイムID</TH><TH CLASS='downtime'>トリガーID</TH><TH CLASS='downtime'>アクション</TH></TR>\n");
 
 	/* display all the service downtime */
 	for(temp_downtime=scheduled_downtime_list,total_downtime=0;temp_downtime!=NULL;temp_downtime=temp_downtime->next){
@@ -2802,7 +2799,7 @@
 		printf("<td CLASS='%s'>%s</td>",bg_class,date_time);
 		get_time_string(&temp_downtime->end_time,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
 		printf("<td CLASS='%s'>%s</td>",bg_class,date_time);
-		printf("<td CLASS='%s'>%s</td>",bg_class,(temp_downtime->fixed==TRUE)?"Fixed":"Flexible");
+		printf("<td CLASS='%s'>%s</td>",bg_class,(temp_downtime->fixed==TRUE)?"固定":"フレキシブル");
 		get_time_breakdown(temp_downtime->duration,&days,&hours,&minutes,&seconds);
 		printf("<td CLASS='%s'>%dd %dh %dm %ds</td>",bg_class,days,hours,minutes,seconds);
 		printf("<td CLASS='%s'>%lu</td>",bg_class,temp_downtime->downtime_id);
@@ -2812,12 +2809,12 @@
 		else
 			printf("%lu",temp_downtime->triggered_by);
 		printf("</td>\n");
-		printf("<td><a href='%s?cmd_typ=%d&down_id=%lu'><img src='%s%s' border=0 ALT='Delete/Cancel This Scheduled Downtime Entry' TITLE='Delete/Cancel This Scheduled Downtime Entry'></td>",COMMAND_CGI,CMD_DEL_SVC_DOWNTIME,temp_downtime->downtime_id,url_images_path,DELETE_ICON);
+		printf("<td><a href='%s?cmd_typ=%d&down_id=%lu'><img src='%s%s' border=0 ALT='このスケジュールエントリを削除もしくはキャンセル' TITLE='このスケジュールエントリを削除もしくはキャンセル'></td>",COMMAND_CGI,CMD_DEL_SVC_DOWNTIME,temp_downtime->downtime_id,url_images_path,DELETE_ICON);
 		printf("</tr>\n");
 	        }
 
 	if(total_downtime==0)
-		printf("<TR CLASS='downtimeOdd'><TD CLASS='downtimeOdd' COLSPAN=12>There are no services with scheduled downtime</TD></TR>");
+		printf("<TR CLASS='downtimeOdd'><TD CLASS='downtimeOdd' COLSPAN=12>ダウンタイムがスケジュールされたサービスはありません。</TD></TR>");
 
 	printf("</TABLE>\n");
 	printf("</DIV>\n");
@@ -2841,9 +2838,8 @@
 	/* make sure the user has rights to view system information */
 	if(is_authorized_for_system_information(&current_authdata)==FALSE){
 
-		printf("<P><DIV CLASS='errorMessage'>It appears as though you do not have permission to view process information...</DIV></P>\n");
-		printf("<P><DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-		printf("and check the authorization options in your CGI configuration file.</DIV></P>\n");
+		printf("<P><DIV CLASS='errorMessage'>プロセス情報を閲覧する権限がありません。</DIV></P>\n");
+		printf("<P><DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV></P>\n");
 
 		return;
 	        }
@@ -2851,18 +2847,18 @@
 	/* sort hosts and services */
 	sort_data(sort_type,sort_option);
 
-	printf("<DIV ALIGN=CENTER CLASS='statusSort'>Entries sorted by <b>");
+	printf("<DIV ALIGN=CENTER CLASS='statusSort'>エントリの並順<b>");
 	if(sort_option==SORT_HOSTNAME)
-		printf("host name");
+		printf("ホスト名");
 	else if(sort_option==SORT_SERVICENAME)
-		printf("service name");
+		printf("サービス名");
 	else if(sort_option==SORT_SERVICESTATUS)
-		printf("service status");
+		printf("サービスステータス");
 	else if(sort_option==SORT_LASTCHECKTIME)
-		printf("last check time");
+		printf("最終チェック時刻");
 	else if(sort_option==SORT_NEXTCHECKTIME)
-		printf("next check time");
-	printf("</b> (%s)\n",(sort_type==SORT_ASCENDING)?"ascending":"descending");
+		printf("次回チェック時間");
+	printf("</b> (%s)\n",(sort_type==SORT_ASCENDING)?"昇順":"降順");
 	printf("</DIV>\n");
 
 	printf("<P>\n");
@@ -2873,16 +2869,16 @@
 	snprintf(temp_url,sizeof(temp_url)-1,"%s?type=%d",EXTINFO_CGI,DISPLAY_SCHEDULING_QUEUE);
 	temp_url[sizeof(temp_url)-1]='\x0';
 
-	printf("<TH CLASS='queue'>Host&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by host name (ascending)' TITLE='Sort by host name (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by host name (descending)' TITLE='Sort by host name (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_HOSTNAME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_HOSTNAME,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='queue'>ホスト名&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='ホスト名で並び替え(昇順)' TITLE='ホスト名で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='ホスト名で並び替え(降順)' TITLE='ホスト名で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_HOSTNAME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_HOSTNAME,url_images_path,DOWN_ARROW_ICON);
 
-	printf("<TH CLASS='queue'>Service&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by service name (ascending)' TITLE='Sort by service name (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by service name (descending)' TITLE='Sort by service name (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_SERVICENAME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_SERVICENAME,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='queue'>サービス名&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='サービス名で並び替え(降順)' TITLE='サービス名で並び替え(降順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='サービス名で並び替え(降順)' TITLE='サービス名で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_SERVICENAME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_SERVICENAME,url_images_path,DOWN_ARROW_ICON);
 
-	printf("<TH CLASS='queue'>Last Check&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by last check time (ascending)' TITLE='Sort by last check time (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by last check time (descending)' TITLE='Sort by last check time (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_LASTCHECKTIME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_LASTCHECKTIME,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='queue'>最終チェック時刻&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='最終チェック時刻で並び替え(昇順)' TITLE='最終チェック時刻で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='最終チェック時刻で並び替え(降順)' TITLE='最終チェック時刻で並び替え(降順)''></A></TH>",temp_url,SORT_ASCENDING,SORT_LASTCHECKTIME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_LASTCHECKTIME,url_images_path,DOWN_ARROW_ICON);
 
-	printf("<TH CLASS='queue'>Next Check&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by next check time (ascending)' TITLE='Sort by next check time (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by next check time (descending)' TITLE='Sort by next check time (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_NEXTCHECKTIME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_NEXTCHECKTIME,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='queue'>次回チェック時間&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='次回チェック時間で並び替え(昇順)' TITLE='次回チェック時間で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='次回チェック時間で並び替え(降順)' TITLE='次回チェック時間で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_NEXTCHECKTIME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_NEXTCHECKTIME,url_images_path,DOWN_ARROW_ICON);
 
 
-	printf("<TH CLASS='queue'>Type</TH><TH CLASS='queue'>Active Checks</TH><TH CLASS='queue'>Actions</TH></TR>\n");
+	printf("<TH CLASS='queue'>タイプ</TH><TH CLASS='queue'>動作チェック</TH><TH CLASS='queue'>アクション</TH></TR>\n");
 
 
 	/* display all services and hosts */
@@ -2933,10 +2929,10 @@
 
 			printf("<TD CLASS='queue%s'>",bgclass);
 			if(temp_svcstatus->check_options==CHECK_OPTION_NONE)
-				printf("Normal ");
+				printf("通常 ");
 			else{
 				if(temp_svcstatus->check_options & CHECK_OPTION_FORCE_EXECUTION)
-					printf("Forced ");
+					printf("強制 ");
 				if(temp_svcstatus->check_options & CHECK_OPTION_FRESHNESS_CHECK)
 					printf("Freshness ");
 				if(temp_svcstatus->check_options & CHECK_OPTION_ORPHAN_CHECK)
@@ -2949,14 +2945,14 @@
 			printf("<TD CLASS='queue%s'>",bgclass);
 			if(temp_svcstatus->checks_enabled==TRUE){
 				printf("<a href='%s?cmd_typ=%d&host=%s",COMMAND_CGI,CMD_DISABLE_SVC_CHECK,url_encode(temp_svcstatus->host_name));
-				printf("&service=%s'><img src='%s%s' border=0 ALT='Disable Active Checks Of This Service' TITLE='Disable Active Checks Of This Service'></a>\n",url_encode(temp_svcstatus->description),url_images_path,DISABLED_ICON);
+				printf("&service=%s'><img src='%s%s' border=0 ALT='このサービスのアクティブチェックを無効にする' TITLE='このサービスのアクティブチェックを無効にする'></a>\n",url_encode(temp_svcstatus->description),url_images_path,DISABLED_ICON);
 		                }
 			else{
 				printf("<a href='%s?cmd_typ=%d&host=%s",COMMAND_CGI,CMD_ENABLE_SVC_CHECK,url_encode(temp_svcstatus->host_name));
-				printf("&service=%s'><img src='%s%s' border=0 ALT='Enable Active Checks Of This Service' TITLE='Enable Active Checks Of This Service'></a>\n",url_encode(temp_svcstatus->description),url_images_path,ENABLED_ICON);
+				printf("&service=%s'><img src='%s%s' border=0 ALT='このサービスのアクティブチェックを有効にする' TITLE='このサービスのアクティブチェックを有効にする'></a>\n",url_encode(temp_svcstatus->description),url_images_path,ENABLED_ICON);
 		                }
 			printf("<a href='%s?cmd_typ=%d&host=%s",COMMAND_CGI,CMD_SCHEDULE_SVC_CHECK,url_encode(temp_svcstatus->host_name));
-			printf("&service=%s'><img src='%s%s' border=0 ALT='Re-schedule This Service Check' TITLE='Re-schedule This Service Check'></a>\n",url_encode(temp_svcstatus->description),url_images_path,DELAY_ICON);
+			printf("&service=%s'><img src='%s%s' border=0 ALT='このサービスのチェックを次回スケジュールに追加する' TITLE='このサービスのチェックを次回スケジュールに追加する'></a>\n",url_encode(temp_svcstatus->description),url_images_path,DELAY_ICON);
 			printf("</TD>\n");
 		        }
 
@@ -2975,10 +2971,10 @@
 
 			printf("<TD CLASS='queue%s'>",bgclass);
 			if(temp_hststatus->check_options==CHECK_OPTION_NONE)
-				printf("Normal ");
+				printf("通常 ");
 			else{
 				if(temp_hststatus->check_options & CHECK_OPTION_FORCE_EXECUTION)
-					printf("Forced ");
+					printf("強制 ");
 				if(temp_hststatus->check_options & CHECK_OPTION_FRESHNESS_CHECK)
 					printf("Freshness ");
 				if(temp_hststatus->check_options & CHECK_OPTION_ORPHAN_CHECK)
@@ -2991,14 +2987,14 @@
 			printf("<TD CLASS='queue%s'>",bgclass);
 			if(temp_hststatus->checks_enabled==TRUE){
 				printf("<a href='%s?cmd_typ=%d&host=%s",COMMAND_CGI,CMD_DISABLE_HOST_CHECK,url_encode(temp_hststatus->host_name));
-				printf("'><img src='%s%s' border=0 ALT='Disable Active Checks Of This Host' TITLE='Disable Active Checks Of This Host'></a>\n",url_images_path,DISABLED_ICON);
+				printf("'><img src='%s%s' border=0 ALT='このホストのアクティブチェックを無効にする' TITLE='このホストのアクティブチェックを無効にする'></a>\n",url_images_path,DISABLED_ICON);
 		                }
 			else{
 				printf("<a href='%s?cmd_typ=%d&host=%s",COMMAND_CGI,CMD_ENABLE_HOST_CHECK,url_encode(temp_hststatus->host_name));
-				printf("'><img src='%s%s' border=0 ALT='Enable Active Checks Of This Host' TITLE='Enable Active Checks Of This Host'></a>\n",url_images_path,ENABLED_ICON);
+				printf("'><img src='%s%s' border=0 ALT='このホストのアクティブチェックを有効にする' TITLE='このホストのアクティブチェックを有効にする'></a>\n",url_images_path,ENABLED_ICON);
 		                }
 			printf("<a href='%s?cmd_typ=%d&host=%s",COMMAND_CGI,CMD_SCHEDULE_HOST_CHECK,url_encode(temp_hststatus->host_name));
-			printf("'><img src='%s%s' border=0 ALT='Re-schedule This Host Check' TITLE='Re-schedule This Host Check'></a>\n",url_images_path,DELAY_ICON);
+			printf("'><img src='%s%s' border=0 ALT='このホストのチェックを次回スケジュールに追加する' TITLE='このホストのチェックを次回スケジュールに追加する'></a>\n",url_images_path,DELAY_ICON);
 			printf("</TD>\n");
 		        }
 
diff -urN nagios-3.2.3.orig/cgi/histogram.c nagios-3.2.3/cgi/histogram.c
--- nagios-3.2.3.orig/cgi/histogram.c	2009-07-04 01:07:15.000000000 +0900
+++ nagios-3.2.3/cgi/histogram.c	2010-12-12 19:59:07.000000000 +0900
@@ -121,11 +121,13 @@
 #define GRAPH_HARD_STATETYPES           2
 #define GRAPH_ALL_STATETYPES            3
 
+#define SMALL_FONT_SIZE  10
 
 
 
 extern char main_config_file[MAX_FILENAME_LENGTH];
 extern char url_html_path[MAX_FILENAME_LENGTH];
+extern char ttf_file[MAX_FILENAME_LENGTH];
 extern char url_images_path[MAX_FILENAME_LENGTH];
 extern char url_stylesheets_path[MAX_FILENAME_LENGTH];
 extern char physical_images_path[MAX_FILENAME_LENGTH];
@@ -328,11 +330,11 @@
 		printf("<td align=left valign=top width=33%%>\n");
 
 		if(display_type==DISPLAY_HOST_HISTOGRAM)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Host Alert Histogram");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホストの警報ヒストグラム");
 		else if(display_type==DISPLAY_SERVICE_HISTOGRAM)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Service Alert Histogram");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"サービスの警報ヒストグラム");
 		else
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Host and Service Alert Histogram");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホスト・サービスの警報ヒストグラム");
 		temp_buffer[sizeof(temp_buffer)-1]='\x0';
 		display_info_table(temp_buffer,FALSE,&current_authdata);
 
@@ -343,24 +345,24 @@
 
 			if(display_type==DISPLAY_HOST_HISTOGRAM){
 #ifdef USE_TRENDS
-				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&assumestateretention=%s'>View Trends For This Host</a><BR>\n",TRENDS_CGI,url_encode(host_name),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
+				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&assumestateretention=%s'>このホストの傾向を見る</a><BR>\n",TRENDS_CGI,url_encode(host_name),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
 #endif
-				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&assumestateretention=%s&show_log_entries'>View Availability Report For This Host</a><BR>\n",AVAIL_CGI,url_encode(host_name),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
-				printf("<a href='%s?host=%s'>View Status Detail For This Host</a><BR>\n",STATUS_CGI,url_encode(host_name));
-				printf("<a href='%s?host=%s'>View History For This Host</a><BR>\n",HISTORY_CGI,url_encode(host_name));
-				printf("<a href='%s?host=%s'>View Notifications For This Host</a><BR>\n",NOTIFICATIONS_CGI,url_encode(host_name));
+				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&assumestateretention=%s&show_log_entries'>このホストの稼働レポートを表示</a><BR>\n",AVAIL_CGI,url_encode(host_name),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
+				printf("<a href='%s?host=%s'>このホストのステータス詳細を見る</a><BR>\n",STATUS_CGI,url_encode(host_name));
+				printf("<a href='%s?host=%s'>このホストの履歴を見る</a><BR>\n",HISTORY_CGI,url_encode(host_name));
+				printf("<a href='%s?host=%s'>このホストの通知履歴を見る</a><BR>\n",NOTIFICATIONS_CGI,url_encode(host_name));
 		                }
 			else{
 #ifdef USE_TRENDS
 				printf("<a href='%s?host=%s",TRENDS_CGI,url_encode(host_name));
 #endif
-				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s'>View Trends For This Service</a><BR>\n",url_encode(svc_description),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
+				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s'>このサービスの傾向を見る</a><BR>\n",url_encode(svc_description),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
 				printf("<a href='%s?host=%s",AVAIL_CGI,url_encode(host_name));
-				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s&show_log_entries'>View Availability Report For This Service</a><BR>\n",url_encode(svc_description),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
+				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s&show_log_entries'>このサービスの稼働レポートを見る</a><BR>\n",url_encode(svc_description),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
 				printf("<A HREF='%s?host=%s&",HISTORY_CGI,url_encode(host_name));
-				printf("service=%s'>View History For This Service</A><BR>\n",url_encode(svc_description));
+				printf("service=%s'>このサービスの履歴を見る</A><BR>\n",url_encode(svc_description));
 				printf("<A HREF='%s?host=%s&",NOTIFICATIONS_CGI,url_encode(host_name));
-				printf("service=%s'>View Notifications For This Service</A><BR>\n",url_encode(svc_description));
+				printf("service=%s'>このサービスの通知履歴を見る</A><BR>\n",url_encode(svc_description));
 		                }
 
 			printf("</TD></TR>\n");
@@ -376,23 +378,23 @@
 
 			printf("<DIV ALIGN=CENTER CLASS='dataTitle'>\n");
 			if(display_type==DISPLAY_HOST_HISTOGRAM)
-				printf("Host '%s'",host_name);
+				printf("ホスト '%s'",host_name);
 			else if(display_type==DISPLAY_SERVICE_HISTOGRAM)
-				printf("Service '%s' On Host '%s'",svc_description,host_name);
+				printf("ホスト '%s' 上の '%s' サービス",host_name,svc_description);
 			printf("</DIV>\n");
 
 			printf("<BR>\n");
 
-			printf("<IMG SRC='%s%s' BORDER=0 ALT='%s Event Histogram' TITLE='%s Event Histogram'>\n",url_images_path,TRENDS_ICON,(display_type==DISPLAY_HOST_HISTOGRAM)?"Host":"Service",(display_type==DISPLAY_HOST_HISTOGRAM)?"Host":"Service");
+			printf("<IMG SRC='%s%s' BORDER=0 ALT='%sイベントヒストグラム' TITLE='%sイベントヒストグラム'>\n",url_images_path,TRENDS_ICON,(display_type==DISPLAY_HOST_HISTOGRAM)?"ホスト":"サービス",(display_type==DISPLAY_HOST_HISTOGRAM)?"ホスト":"サービス");
 
 			printf("<BR CLEAR=ALL>\n");
 
 			get_time_string(&t1,start_timestring,sizeof(start_timestring)-1,SHORT_DATE_TIME);
 			get_time_string(&t2,end_timestring,sizeof(end_timestring)-1,SHORT_DATE_TIME);
-			printf("<div align=center class='reportRange'>%s to %s</div>\n",start_timestring,end_timestring);
+			printf("<div align=center class='reportRange'>%s から %s</div>\n",start_timestring,end_timestring);
 
 			get_time_breakdown((time_t)(t2-t1),&days,&hours,&minutes,&seconds);
-			printf("<div align=center class='reportDuration'>Duration: %dd %dh %dm %ds</div>\n",days,hours,minutes,seconds);
+			printf("<div align=center class='reportDuration'>期間: %d日間と %d時間 %d分 %d秒</div>\n",days,hours,minutes,seconds);
 		        }
 
 		printf("</td>\n");
@@ -412,79 +414,79 @@
 				printf("<input type='hidden' name='service' value='%s'>\n",escape_string(svc_description));
 
 
-			printf("<tr><td CLASS='optBoxItem' valign=top align=left>Report period:</td><td CLASS='optBoxItem' valign=top align=left>Assume state retention:</td></tr>\n");
+			printf("<tr><td CLASS='optBoxItem' valign=top align=left>レポート期間:</td><td CLASS='optBoxItem' valign=top align=left>保存状態を考慮:</td></tr>\n");
 			printf("<tr><td CLASS='optBoxItem' valign=top align=left>\n");
 			printf("<select name='timeperiod'>\n");
-			printf("<option value=custom>[ Current time range ]\n");
-			printf("<option value=today %s>Today\n",(timeperiod_type==TIMEPERIOD_TODAY)?"SELECTED":"");
-			printf("<option value=last24hours %s>Last 24 Hours\n",(timeperiod_type==TIMEPERIOD_LAST24HOURS)?"SELECTED":"");
-			printf("<option value=yesterday %s>Yesterday\n",(timeperiod_type==TIMEPERIOD_YESTERDAY)?"SELECTED":"");
-			printf("<option value=thisweek %s>This Week\n",(timeperiod_type==TIMEPERIOD_THISWEEK)?"SELECTED":"");
-			printf("<option value=last7days %s>Last 7 Days\n",(timeperiod_type==TIMEPERIOD_LAST7DAYS)?"SELECTED":"");
-			printf("<option value=lastweek %s>Last Week\n",(timeperiod_type==TIMEPERIOD_LASTWEEK)?"SELECTED":"");
-			printf("<option value=thismonth %s>This Month\n",(timeperiod_type==TIMEPERIOD_THISMONTH)?"SELECTED":"");
-			printf("<option value=last31days %s>Last 31 Days\n",(timeperiod_type==TIMEPERIOD_LAST31DAYS)?"SELECTED":"");
-			printf("<option value=lastmonth %s>Last Month\n",(timeperiod_type==TIMEPERIOD_LASTMONTH)?"SELECTED":"");
-			printf("<option value=thisyear %s>This Year\n",(timeperiod_type==TIMEPERIOD_THISYEAR)?"SELECTED":"");
-			printf("<option value=lastyear %s>Last Year\n",(timeperiod_type==TIMEPERIOD_LASTYEAR)?"SELECTED":"");
+			printf("<option value=custom>[ 現在の期間 ]\n");
+			printf("<option value=today %s>今日\n",(timeperiod_type==TIMEPERIOD_TODAY)?"SELECTED":"");
+			printf("<option value=last24hours %s>過去24時間\n",(timeperiod_type==TIMEPERIOD_LAST24HOURS)?"SELECTED":"");
+			printf("<option value=yesterday %s>昨日\n",(timeperiod_type==TIMEPERIOD_YESTERDAY)?"SELECTED":"");
+			printf("<option value=thisweek %s>今週\n",(timeperiod_type==TIMEPERIOD_THISWEEK)?"SELECTED":"");
+			printf("<option value=last7days %s>過去7日間\n",(timeperiod_type==TIMEPERIOD_LAST7DAYS)?"SELECTED":"");
+			printf("<option value=lastweek %s>先週\n",(timeperiod_type==TIMEPERIOD_LASTWEEK)?"SELECTED":"");
+			printf("<option value=thismonth %s>今月\n",(timeperiod_type==TIMEPERIOD_THISMONTH)?"SELECTED":"");
+			printf("<option value=last31days %s>過去31日間\n",(timeperiod_type==TIMEPERIOD_LAST31DAYS)?"SELECTED":"");
+			printf("<option value=lastmonth %s>先月\n",(timeperiod_type==TIMEPERIOD_LASTMONTH)?"SELECTED":"");
+			printf("<option value=thisyear %s>今年\n",(timeperiod_type==TIMEPERIOD_THISYEAR)?"SELECTED":"");
+			printf("<option value=lastyear %s>去年\n",(timeperiod_type==TIMEPERIOD_LASTYEAR)?"SELECTED":"");
 			printf("</select>\n");
 			printf("</td><td CLASS='optBoxItem' valign=top align=left>\n");
 			printf("<select name='assumestateretention'>\n");
-			printf("<option value=yes %s>yes\n",(assume_state_retention==TRUE)?"SELECTED":"");
-			printf("<option value=no %s>no\n",(assume_state_retention==TRUE)?"":"SELECTED");
+			printf("<option value=yes %s>する\n",(assume_state_retention==TRUE)?"SELECTED":"");
+			printf("<option value=no %s>しない\n",(assume_state_retention==TRUE)?"":"SELECTED");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td CLASS='optBoxItem' valign=top align=left>Breakdown type:</td><td CLASS='optBoxItem' valign=top align=left>Initial states logged:</td></tr>\n");
+			printf("<tr><td CLASS='optBoxItem' valign=top align=left>表示区分:</td><td CLASS='optBoxItem' valign=top align=left>初期状態を考慮:</td></tr>\n");
 			printf("<tr><td CLASS='optBoxItem' valign=top align=left>\n");
 			printf("<select name='breakdown'>\n");
-			printf("<option value=monthly %s>Month\n",(breakdown_type==BREAKDOWN_MONTHLY)?"SELECTED":"");
-			printf("<option value=dayofmonth %s>Day of the Month\n",(breakdown_type==BREAKDOWN_DAY_OF_MONTH)?"SELECTED":"");
-			printf("<option value=dayofweek %s>Day of the Week\n",(breakdown_type==BREAKDOWN_DAY_OF_WEEK)?"SELECTED":"");
-			printf("<option value=hourly %s>Hour of the Day\n",(breakdown_type==BREAKDOWN_HOURLY)?"SELECTED":"");
+			printf("<option value=monthly %s>月別\n",(breakdown_type==BREAKDOWN_MONTHLY)?"SELECTED":"");
+			printf("<option value=dayofmonth %s>日別\n",(breakdown_type==BREAKDOWN_DAY_OF_MONTH)?"SELECTED":"");
+			printf("<option value=dayofweek %s>週別\n",(breakdown_type==BREAKDOWN_DAY_OF_WEEK)?"SELECTED":"");
+			printf("<option value=hourly %s>時間別\n",(breakdown_type==BREAKDOWN_HOURLY)?"SELECTED":"");
 			printf("</select>\n");
 			printf("</td><td CLASS='optBoxItem' valign=top align=left>\n");
 			printf("<select name='initialstateslogged'>\n");
-			printf("<option value=yes %s>yes\n",(initial_states_logged==TRUE)?"SELECTED":"");
-			printf("<option value=no %s>no\n",(initial_states_logged==TRUE)?"":"SELECTED");
+			printf("<option value=yes %s>する\n",(initial_states_logged==TRUE)?"SELECTED":"");
+			printf("<option value=no %s>しない\n",(initial_states_logged==TRUE)?"":"SELECTED");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td CLASS='optBoxItem' valign=top align=left>Events to graph:</td><td CLASS='optBoxItem' valign=top align=left>Ignore repeated states:</td></tr>\n");
+			printf("<tr><td CLASS='optBoxItem' valign=top align=left>グラフにするイベント:</td><td CLASS='optBoxItem' valign=top align=left>繰り返しを無視:</td></tr>\n");
 			printf("<tr><td CLASS='optBoxItem' valign=top align=left>\n");
 			printf("<select name='graphevents'>\n");
 			if(display_type==DISPLAY_HOST_HISTOGRAM){
-				printf("<option value=%d %s>All host events\n",GRAPH_HOST_ALL,(graph_events==GRAPH_HOST_ALL)?"SELECTED":"");
-				printf("<option value=%d %s>Host problem events\n",GRAPH_HOST_PROBLEMS,(graph_events==GRAPH_HOST_PROBLEMS)?"SELECTED":"");
-				printf("<option value=%d %s>Host up events\n",GRAPH_HOST_UP,(graph_events==GRAPH_HOST_UP)?"SELECTED":"");
-				printf("<option value=%d %s>Host down events\n",GRAPH_HOST_DOWN,(graph_events==GRAPH_HOST_DOWN)?"SELECTED":"");
-				printf("<option value=%d %s>Host unreachable events\n",GRAPH_HOST_UNREACHABLE,(graph_events==GRAPH_HOST_UNREACHABLE)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの全てのイベント\n",GRAPH_HOST_ALL,(graph_events==GRAPH_HOST_ALL)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの障害状態\n",GRAPH_HOST_PROBLEMS,(graph_events==GRAPH_HOST_PROBLEMS)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの稼働状態(UP)\n",GRAPH_HOST_UP,(graph_events==GRAPH_HOST_UP)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの停止状態(DOWN)\n",GRAPH_HOST_DOWN,(graph_events==GRAPH_HOST_DOWN)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの未到達状態(UNREACHABLE)\n",GRAPH_HOST_UNREACHABLE,(graph_events==GRAPH_HOST_UNREACHABLE)?"SELECTED":"");
 			        }
 			else{
-				printf("<option value=%d %s>All service events\n",GRAPH_SERVICE_ALL,(graph_events==GRAPH_SERVICE_ALL)?"SELECTED":"");
-				printf("<option value=%d %s>Service problem events\n",GRAPH_SERVICE_PROBLEMS,(graph_events==GRAPH_SERVICE_PROBLEMS)?"SELECTED":"");
-				printf("<option value=%d %s>Service ok events\n",GRAPH_SERVICE_OK,(graph_events==GRAPH_SERVICE_OK)?"SELECTED":"");
-				printf("<option value=%d %s>Service warning events\n",GRAPH_SERVICE_WARNING,(graph_events==GRAPH_SERVICE_WARNING)?"SELECTED":"");
-				printf("<option value=%d %s>Service unknown events\n",GRAPH_SERVICE_UNKNOWN,(graph_events==GRAPH_SERVICE_UNKNOWN)?"SELECTED":"");
-				printf("<option value=%d %s>Service critical events\n",GRAPH_SERVICE_CRITICAL,(graph_events==GRAPH_SERVICE_CRITICAL)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの全てのイベント\n",GRAPH_SERVICE_ALL,(graph_events==GRAPH_SERVICE_ALL)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの障害状態\n",GRAPH_SERVICE_PROBLEMS,(graph_events==GRAPH_SERVICE_PROBLEMS)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの正常状態(OK)\n",GRAPH_SERVICE_OK,(graph_events==GRAPH_SERVICE_OK)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの警告状態(WARNING)\n",GRAPH_SERVICE_WARNING,(graph_events==GRAPH_SERVICE_WARNING)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの不明状態(UNKNOWN)\n",GRAPH_SERVICE_UNKNOWN,(graph_events==GRAPH_SERVICE_UNKNOWN)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの異常状態(CRITICAL)\n",GRAPH_SERVICE_CRITICAL,(graph_events==GRAPH_SERVICE_CRITICAL)?"SELECTED":"");
 			        }
 			printf("</select>\n");
 			printf("</td><td CLASS='optBoxItem' valign=top align=left>\n");
 			printf("<select name='newstatesonly'>\n");
-			printf("<option value=yes %s>yes\n",(new_states_only==TRUE)?"SELECTED":"");
-			printf("<option value=no %s>no\n",(new_states_only==TRUE)?"":"SELECTED");
+			printf("<option value=yes %s>する\n",(new_states_only==TRUE)?"SELECTED":"");
+			printf("<option value=no %s>しない\n",(new_states_only==TRUE)?"":"SELECTED");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td CLASS='optBoxItem' valign=top align=left>State types to graph:</td><td CLASS='optBoxItem' valign=top align=left></td></tr>\n");
+			printf("<tr><td CLASS='optBoxItem' valign=top align=left>グラフにするステータスタイプ:</td><td CLASS='optBoxItem' valign=top align=left></td></tr>\n");
 			printf("<tr><td CLASS='optBoxItem' valign=top align=left>\n");
 			printf("<select name='graphstatetypes'>\n");
-			printf("<option value=%d %s>Hard states\n",GRAPH_HARD_STATETYPES,(graph_statetypes==GRAPH_HARD_STATETYPES)?"SELECTED":"");
-			printf("<option value=%d %s>Soft states\n",GRAPH_SOFT_STATETYPES,(graph_statetypes==GRAPH_SOFT_STATETYPES)?"SELECTED":"");
-			printf("<option value=%d %s>Hard and soft states\n",GRAPH_ALL_STATETYPES,(graph_statetypes==GRAPH_ALL_STATETYPES)?"SELECTED":"");
+			printf("<option value=%d %s>ハード\n",GRAPH_HARD_STATETYPES,(graph_statetypes==GRAPH_HARD_STATETYPES)?"SELECTED":"");
+			printf("<option value=%d %s>ソフト\n",GRAPH_SOFT_STATETYPES,(graph_statetypes==GRAPH_SOFT_STATETYPES)?"SELECTED":"");
+			printf("<option value=%d %s>ハードおよびソフト\n",GRAPH_ALL_STATETYPES,(graph_statetypes==GRAPH_ALL_STATETYPES)?"SELECTED":"");
 			printf("</select>\n");
 			printf("</td><td CLASS='optBoxItem' valign=top align=left>\n");
-			printf("<input type='submit' value='Update'>\n");
+			printf("<input type='submit' value='更新'>\n");
 			printf("</td></tr>\n");
 
 			printf("</form>\n");
@@ -535,7 +537,7 @@
 	if(is_authorized==FALSE){
 
 		if(mode==CREATE_HTML)
-			printf("<P><DIV ALIGN=CENTER CLASS='errorMessage'>It appears as though you are not authorized to view information for the specified %s...</DIV></P>\n",(display_type==DISPLAY_HOST_HISTOGRAM)?"host":"service");
+			printf("<P><DIV ALIGN=CENTER CLASS='errorMessage'>%sの情報を見る権限がありません。</DIV></P>\n",(display_type==DISPLAY_HOST_HISTOGRAM)?"ホスト":"サービス");
 
 		document_footer();
 		free_memory();
@@ -603,7 +605,7 @@
 			read_archived_state_data();
 
 #ifdef DEBUG
-			printf("Done reading archived state data.\n");
+			printf("アーカイブされた状態情報を読み込みました。\n");
 #endif
 
 			/* location of image template */
@@ -620,7 +622,7 @@
 				histogram_image=gdImageCreate(image_width,image_height);
 			if(histogram_image==NULL){
 #ifdef DEBUG
-				printf("Error: Could not allocate memory for image\n");
+				printf("エラー: 画像を表示するためのメモリの割り当てが出来ませんでした。\n");
 #endif
 				return ERROR;
 	                        }
@@ -642,14 +644,14 @@
 			gdImageInterlace(histogram_image,1);
 
 #ifdef DEBUG
-			printf("Starting to graph data...\n");
+			printf("データをグラフ化しています...\n");
 #endif
 
 			/* graph archived state histogram data */
 			graph_all_histogram_data();
 
 #ifdef DEBUG
-			printf("Done graphing data.\n");
+			printf("完了しました。\n");
 #endif
 
 			/* use STDOUT for writing the image data... */
@@ -682,7 +684,7 @@
 		if(input_type==GET_INPUT_HOST_TARGET){
 
 			printf("<P><DIV ALIGN=CENTER>\n");
-			printf("<DIV CLASS='reportSelectTitle'>Step 2: Select Host</DIV>\n");
+			printf("<DIV CLASS='reportSelectTitle'>ステップ２: ホストの選択</DIV>\n");
 			printf("</DIV></P>\n");
 
 			printf("<P><DIV ALIGN=CENTER>\n");
@@ -691,7 +693,7 @@
 			printf("<form method=\"GET\" action=\"%s\">\n",HISTOGRAM_CGI);
 			printf("<input type='hidden' name='input' value='getoptions'>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' valign=center>Host:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' valign=center>ホスト:</td>\n");
 			printf("<td class='reportSelectItem' valign=center>\n");
 			printf("<select name='host'>\n");
 
@@ -704,7 +706,7 @@
 			printf("</td></tr>\n");
 
 			printf("<tr><td></td><td class='reportSelectItem'>\n");
-			printf("<input type='submit' value='Continue to Step 3'>\n");
+			printf("<input type='submit' value='ステップ２へ'>\n");
 			printf("</td></tr>\n");
 
 			printf("</form>\n");
@@ -738,7 +740,7 @@
 
 
 			printf("<P><DIV ALIGN=CENTER>\n");
-			printf("<DIV CLASS='reportSelectTitle'>Step 2: Select Service</DIV>\n");
+			printf("<DIV CLASS='reportSelectTitle'>ステップ２: サービスの選択</DIV>\n");
 			printf("</DIV></P>\n");
 
 			printf("<P><DIV ALIGN=CENTER>\n");
@@ -748,7 +750,7 @@
 			printf("<input type='hidden' name='input' value='getoptions'>\n");
 			printf("<input type='hidden' name='host' value='%s'>\n",(first_service==NULL)?"unknown":(char *)escape_string(first_service));
 
-			printf("<tr><td class='reportSelectSubTitle'>Service:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle'>サービス:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='service' onFocus='document.serviceform.host.value=gethostname(this.selectedIndex);' onChange='document.serviceform.host.value=gethostname(this.selectedIndex);'>\n");
 
@@ -761,7 +763,7 @@
 			printf("</td></tr>\n");
 
 			printf("<tr><td></td><td class='reportSelectItem'>\n");
-			printf("<input type='submit' value='Continue to Step 3'>\n");
+			printf("<input type='submit' value='ステップ３へ'>\n");
 			printf("</td></tr>\n");
 
 			printf("</form>\n");
@@ -782,7 +784,7 @@
 			end_year=t->tm_year+1900;
 
 			printf("<P><DIV ALIGN=CENTER>\n");
-			printf("<DIV CLASS='reportSelectTitle'>Step 3: Select Report Options</DIV>\n");
+			printf("<DIV CLASS='reportSelectTitle'>ステップ３: レポートオプションの選択</DIV>\n");
 			printf("</DIV></P>\n");
 
 			printf("<P><DIV ALIGN=CENTER>\n");
@@ -793,45 +795,48 @@
 			if(display_type==DISPLAY_SERVICE_HISTOGRAM)
 				printf("<input type='hidden' name='service' value='%s'>\n",escape_string(svc_description));
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Report Period:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>レポート期間:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='timeperiod'>\n");
-			printf("<option value=today>Today\n");
-			printf("<option value=last24hours>Last 24 Hours\n");
-			printf("<option value=yesterday>Yesterday\n");
-			printf("<option value=thisweek>This Week\n");
-			printf("<option value=last7days SELECTED>Last 7 Days\n");
-			printf("<option value=lastweek>Last Week\n");
-			printf("<option value=thismonth>This Month\n");
-			printf("<option value=last31days>Last 31 Days\n");
-			printf("<option value=lastmonth>Last Month\n");
-			printf("<option value=thisyear>This Year\n");
-			printf("<option value=lastyear>Last Year\n");
-			printf("<option value=custom>* CUSTOM REPORT PERIOD *\n");
+			printf("<option value=today>今日\n");
+			printf("<option value=last24hours>過去24時間\n");
+			printf("<option value=yesterday>昨日\n");
+			printf("<option value=thisweek>今週\n");
+			printf("<option value=last7days SELECTED>過去7日間\n");
+			printf("<option value=lastweek>先週\n");
+			printf("<option value=thismonth>今月\n");
+			printf("<option value=last31days>過去31日間\n");
+			printf("<option value=lastmonth>先月\n");
+			printf("<option value=thisyear>今年\n");
+			printf("<option value=lastyear>去年\n");
+			printf("<option value=custom>* カスタム期間設定 *\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td valign=top calss='reportSelectSubTitle'>If Custom Report Period...</td></tr>\n");
+			printf("<tr><td valign=top calss='reportSelectSubTitle'>期間をカスタマイズ...</td></tr>\n");
 
 			printf("<tr>");
-			printf("<td valign=top class='reportSelectSubTitle'>Start Date (Inclusive):</td>\n");
+			printf("<td valign=top class='reportSelectSubTitle'>開始日(指定日を含む):</td>\n");
 			printf("<td align=left valign=top class='reportSelectItem'>");
+			printf("<input type='text' size='4' maxlength='4' name='syear' value='%d'>",start_year);
+			printf("年");
 			printf("<select name='smon'>\n");
-			printf("<option value='1' %s>January\n",(t->tm_mon==0)?"SELECTED":"");
-			printf("<option value='2' %s>February\n",(t->tm_mon==1)?"SELECTED":"");
-			printf("<option value='3' %s>March\n",(t->tm_mon==2)?"SELECTED":"");
-			printf("<option value='4' %s>April\n",(t->tm_mon==3)?"SELECTED":"");
-			printf("<option value='5' %s>May\n",(t->tm_mon==4)?"SELECTED":"");
-			printf("<option value='6' %s>June\n",(t->tm_mon==5)?"SELECTED":"");
-			printf("<option value='7' %s>July\n",(t->tm_mon==6)?"SELECTED":"");
-			printf("<option value='8' %s>August\n",(t->tm_mon==7)?"SELECTED":"");
-			printf("<option value='9' %s>September\n",(t->tm_mon==8)?"SELECTED":"");
-			printf("<option value='10' %s>October\n",(t->tm_mon==9)?"SELECTED":"");
-			printf("<option value='11' %s>November\n",(t->tm_mon==10)?"SELECTED":"");
-			printf("<option value='12' %s>December\n",(t->tm_mon==11)?"SELECTED":"");
+			printf("<option value='1' %s>1\n",(t->tm_mon==0)?"SELECTED":"");
+			printf("<option value='2' %s>2\n",(t->tm_mon==1)?"SELECTED":"");
+			printf("<option value='3' %s>3\n",(t->tm_mon==2)?"SELECTED":"");
+			printf("<option value='4' %s>4\n",(t->tm_mon==3)?"SELECTED":"");
+			printf("<option value='5' %s>5\n",(t->tm_mon==4)?"SELECTED":"");
+			printf("<option value='6' %s>6\n",(t->tm_mon==5)?"SELECTED":"");
+			printf("<option value='7' %s>7\n",(t->tm_mon==6)?"SELECTED":"");
+			printf("<option value='8' %s>8\n",(t->tm_mon==7)?"SELECTED":"");
+			printf("<option value='9' %s>9\n",(t->tm_mon==8)?"SELECTED":"");
+			printf("<option value='10' %s>10\n",(t->tm_mon==9)?"SELECTED":"");
+			printf("<option value='11' %s>11\n",(t->tm_mon==10)?"SELECTED":"");
+			printf("<option value='12' %s>12\n",(t->tm_mon==11)?"SELECTED":"");
 			printf("</select>\n ");
+			printf("月");
 			printf("<input type='text' size='2' maxlength='2' name='sday' value='%d'> ",start_day);
-			printf("<input type='text' size='4' maxlength='4' name='syear' value='%d'>",start_year);
+			printf("日");
 			printf("<input type='hidden' name='shour' value='0'>\n");
 			printf("<input type='hidden' name='smin' value='0'>\n");
 			printf("<input type='hidden' name='ssec' value='0'>\n");
@@ -839,24 +844,27 @@
 			printf("</tr>\n");
 
 			printf("<tr>");
-			printf("<td valign=top class='reportSelectSubTitle'>End Date (Inclusive):</td>\n");
+			printf("<td valign=top class='reportSelectSubTitle'>終了日(指定日を含む):</td>\n");
 			printf("<td align=left valign=top class='reportSelectItem'>");
+			printf("<input type='text' size='4' maxlength='4' name='eyear' value='%d'>",end_year);
+			printf("年");
 			printf("<select name='emon'>\n");
-			printf("<option value='1' %s>January\n",(t->tm_mon==0)?"SELECTED":"");
-			printf("<option value='2' %s>February\n",(t->tm_mon==1)?"SELECTED":"");
-			printf("<option value='3' %s>March\n",(t->tm_mon==2)?"SELECTED":"");
-			printf("<option value='4' %s>April\n",(t->tm_mon==3)?"SELECTED":"");
-			printf("<option value='5' %s>May\n",(t->tm_mon==4)?"SELECTED":"");
-			printf("<option value='6' %s>June\n",(t->tm_mon==5)?"SELECTED":"");
-			printf("<option value='7' %s>July\n",(t->tm_mon==6)?"SELECTED":"");
-			printf("<option value='8' %s>August\n",(t->tm_mon==7)?"SELECTED":"");
-			printf("<option value='9' %s>September\n",(t->tm_mon==8)?"SELECTED":"");
-			printf("<option value='10' %s>October\n",(t->tm_mon==9)?"SELECTED":"");
-			printf("<option value='11' %s>November\n",(t->tm_mon==10)?"SELECTED":"");
-			printf("<option value='12' %s>December\n",(t->tm_mon==11)?"SELECTED":"");
+			printf("<option value='1' %s>1\n",(t->tm_mon==0)?"SELECTED":"");
+			printf("<option value='2' %s>2\n",(t->tm_mon==1)?"SELECTED":"");
+			printf("<option value='3' %s>3\n",(t->tm_mon==2)?"SELECTED":"");
+			printf("<option value='4' %s>4\n",(t->tm_mon==3)?"SELECTED":"");
+			printf("<option value='5' %s>5\n",(t->tm_mon==4)?"SELECTED":"");
+			printf("<option value='6' %s>6\n",(t->tm_mon==5)?"SELECTED":"");
+			printf("<option value='7' %s>7\n",(t->tm_mon==6)?"SELECTED":"");
+			printf("<option value='8' %s>8\n",(t->tm_mon==7)?"SELECTED":"");
+			printf("<option value='9' %s>9\n",(t->tm_mon==8)?"SELECTED":"");
+			printf("<option value='10' %s>10\n",(t->tm_mon==9)?"SELECTED":"");
+			printf("<option value='11' %s>11\n",(t->tm_mon==10)?"SELECTED":"");
+			printf("<option value='12' %s>12\n",(t->tm_mon==11)?"SELECTED":"");
 			printf("</select>\n ");
+			printf("月");
 			printf("<input type='text' size='2' maxlength='2' name='eday' value='%d'> ",end_day);
-			printf("<input type='text' size='4' maxlength='4' name='eyear' value='%d'>",end_year);
+			printf("日");
 			printf("<input type='hidden' name='ehour' value='24'>\n");
 			printf("<input type='hidden' name='emin' value='0'>\n");
 			printf("<input type='hidden' name='esec' value='0'>\n");
@@ -865,71 +873,71 @@
 
 			printf("<tr><td colspan=2><br></td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Statistics Breakdown:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>表示区分:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='breakdown'>\n");
-			printf("<option value=monthly>Month\n");
-			printf("<option value=dayofmonth SELECTED>Day of the Month\n");
-			printf("<option value=dayofweek>Day of the Week\n");
-			printf("<option value=hourly>Hour of the Day\n");
+			printf("<option value=monthly>月別\n");
+			printf("<option value=dayofmonth SELECTED>日別\n");
+			printf("<option value=dayofweek>週別\n");
+			printf("<option value=hourly>時間別\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Events To Graph:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>グラフにするイベント:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='graphevents'>\n");
 			if(display_type==DISPLAY_HOST_HISTOGRAM){
-				printf("<option value=%d %s>All host events\n",GRAPH_HOST_ALL,(graph_events==GRAPH_HOST_ALL)?"SELECTED":"");
-				printf("<option value=%d %s>Host problem events\n",GRAPH_HOST_PROBLEMS,(graph_events==GRAPH_HOST_PROBLEMS)?"SELECTED":"");
-				printf("<option value=%d %s>Host up events\n",GRAPH_HOST_UP,(graph_events==GRAPH_HOST_UP)?"SELECTED":"");
-				printf("<option value=%d %s>Host down events\n",GRAPH_HOST_DOWN,(graph_events==GRAPH_HOST_DOWN)?"SELECTED":"");
-				printf("<option value=%d %s>Host unreachable events\n",GRAPH_HOST_UNREACHABLE,(graph_events==GRAPH_HOST_UNREACHABLE)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの全てのイベント\n",GRAPH_HOST_ALL,(graph_events==GRAPH_HOST_ALL)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの障害状態\n",GRAPH_HOST_PROBLEMS,(graph_events==GRAPH_HOST_PROBLEMS)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの稼働状態(UP)\n",GRAPH_HOST_UP,(graph_events==GRAPH_HOST_UP)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの停止状態(DOWN)\n",GRAPH_HOST_DOWN,(graph_events==GRAPH_HOST_DOWN)?"SELECTED":"");
+				printf("<option value=%d %s>ホストの未到達状態(UNREACHABLE)\n",GRAPH_HOST_UNREACHABLE,(graph_events==GRAPH_HOST_UNREACHABLE)?"SELECTED":"");
 			        }
 			else{
-				printf("<option value=%d %s>All service events\n",GRAPH_SERVICE_ALL,(graph_events==GRAPH_SERVICE_ALL)?"SELECTED":"");
-				printf("<option value=%d %s>Service problem events\n",GRAPH_SERVICE_PROBLEMS,(graph_events==GRAPH_SERVICE_PROBLEMS)?"SELECTED":"");
-				printf("<option value=%d %s>Service ok events\n",GRAPH_SERVICE_OK,(graph_events==GRAPH_SERVICE_OK)?"SELECTED":"");
-				printf("<option value=%d %s>Service warning events\n",GRAPH_SERVICE_WARNING,(graph_events==GRAPH_SERVICE_WARNING)?"SELECTED":"");
-				printf("<option value=%d %s>Service unknown events\n",GRAPH_SERVICE_UNKNOWN,(graph_events==GRAPH_SERVICE_UNKNOWN)?"SELECTED":"");
-				printf("<option value=%d %s>Service critical events\n",GRAPH_SERVICE_CRITICAL,(graph_events==GRAPH_SERVICE_CRITICAL)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの全てのイベント\n",GRAPH_SERVICE_ALL,(graph_events==GRAPH_SERVICE_ALL)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの障害状態\n",GRAPH_SERVICE_PROBLEMS,(graph_events==GRAPH_SERVICE_PROBLEMS)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの正常状態(OK)\n",GRAPH_SERVICE_OK,(graph_events==GRAPH_SERVICE_OK)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの警告状態(WARNING)\n",GRAPH_SERVICE_WARNING,(graph_events==GRAPH_SERVICE_WARNING)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの不明状態(UNKNOWN)\n",GRAPH_SERVICE_UNKNOWN,(graph_events==GRAPH_SERVICE_UNKNOWN)?"SELECTED":"");
+				printf("<option value=%d %s>サービスの異常状態(CRITICAL)\n",GRAPH_SERVICE_CRITICAL,(graph_events==GRAPH_SERVICE_CRITICAL)?"SELECTED":"");
 			        }
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>State Types To Graph:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>グラフにするステータスタイプ:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='graphstatetypes'>\n");
-			printf("<option value=%d>Hard states\n",GRAPH_HARD_STATETYPES);
-			printf("<option value=%d>Soft states\n",GRAPH_SOFT_STATETYPES);
-			printf("<option value=%d SELECTED>Hard and soft states\n",GRAPH_ALL_STATETYPES);
+			printf("<option value=%d>ハード\n",GRAPH_HARD_STATETYPES);
+			printf("<option value=%d>ソフト\n",GRAPH_SOFT_STATETYPES);
+			printf("<option value=%d SELECTED>ハードおよびソフト\n",GRAPH_ALL_STATETYPES);
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Assume State Retention:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>保存状態を考慮:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='assumestateretention'>\n");
-			printf("<option value='yes'>Yes\n");
-			printf("<option value='no'>No\n");
+			printf("<option value='yes'>する\n");
+			printf("<option value='no'>しない\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Initial States Logged:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>初期状態を考慮:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='initialstateslogged'>\n");
-			printf("<option value='yes'>Yes\n");
-			printf("<option value='no' SELECTED>No\n");
+			printf("<option value='yes'>する\n");
+			printf("<option value='no' SELECTED>しない\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Ignore Repeated States:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>繰り返しを無視:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='newstatesonly'>\n");
-			printf("<option value='yes'>Yes\n");
-			printf("<option value='no' SELECTED>No\n");
+			printf("<option value='yes'>する\n");
+			printf("<option value='no' SELECTED>しない\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td></td><td class='reportSelectItem'><input type='submit' value='Create Report'></td></tr>\n");
+			printf("<tr><td></td><td class='reportSelectItem'><input type='submit' value='レポートを作成'></td></tr>\n");
 
 			printf("</form>\n");
 			printf("</TABLE>\n");
@@ -940,7 +948,7 @@
 		/* as the user whether they want a graph for a host or service */
 		else{
 			printf("<P><DIV ALIGN=CENTER>\n");
-			printf("<DIV CLASS='reportSelectTitle'>Step 1: Select Report Type</DIV>\n");
+			printf("<DIV CLASS='reportSelectTitle'>ステップ１: レポートタイプ選択</DIV>\n");
 			printf("</DIV></P>\n");
 
 			printf("<P><DIV ALIGN=CENTER>\n");
@@ -948,16 +956,16 @@
 			printf("<TABLE BORDER=0 cellpadding=5>\n");
 			printf("<form method=\"GET\" action=\"%s\">\n",HISTOGRAM_CGI);
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Type:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>タイプ:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='input'>\n");
-			printf("<option value=gethost>Host\n");
-			printf("<option value=getservice>Service\n");
+			printf("<option value=gethost>ホスト\n");
+			printf("<option value=getservice>サービス\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
 			printf("<tr><td></td><td class='reportSelectItem'>\n");
-			printf("<input type='submit' value='Continue to Step 2'>\n");
+			printf("<input type='submit' value='ステップ２へ'>\n");
 			printf("</td></tr>\n");
 
 			printf("</form>\n");
@@ -1002,8 +1010,9 @@
 		printf("<html>\n");
 		printf("<head>\n");
 		printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
+		printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
 		printf("<title>\n");
-		printf("Nagios Histogram\n");
+		printf("ヒストグラム\n");
 		printf("</title>\n");
 
 		if(use_stylesheet==TRUE){
@@ -1085,7 +1094,7 @@
 
 			if((host_name=(char *)strdup(variables[x]))==NULL)
 				host_name="";
-			strip_html_brackets(host_name);
+			else
 
 			display_type=DISPLAY_HOST_HISTOGRAM;
 		        }
@@ -1522,8 +1531,10 @@
 	char temp_buffer[MAX_INPUT_BUFFER];
 	int string_width;
 	int string_height;
-	char *days[7]={"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};
-	char *months[12]={"January","February","March","April","May","June","July","August","September","October","November","December"};
+	char *days[7]={"Sun","Mon","Tue","Wed","Thu","Fri","Sat"};
+//	char *days[7]={"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};
+	char *months[12]={"1","2","3","4","5","6","7","8","9","10","11","12"};
+//	char *months[12]={"January","February","March","April","May","June","July","August","September","October","November","December"};
 	char start_time[MAX_INPUT_BUFFER];
 	char end_time[MAX_INPUT_BUFFER];
 
@@ -1548,6 +1559,7 @@
 	unsigned long state4_sum=0L;
 	double state4_avg=0.0;
 
+	int brect[8];
 
 #ifdef DEBUG
 	printf("Total Buckets: %d\n",total_buckets);
@@ -1619,7 +1631,7 @@
 	string_height=gdFontSmall->h;
 
 #ifdef DEBUG
-	printf("Starting to draw Y grid lines...\n");
+	printf("Y軸を描画中...\n");
 #endif
 
 	/* draw y grid lines */
@@ -1633,7 +1645,7 @@
 	        }
 
 #ifdef DEBUG
-	printf("Starting to draw X grid lines...\n");
+	printf("X軸を描画中...\n");
 #endif
 
 	/* draw x grid lines */
@@ -1641,7 +1653,7 @@
 		draw_dashed_line(DRAWING_X_OFFSET+(int)(current_unit*x_units),DRAWING_Y_OFFSET,DRAWING_X_OFFSET+(int)(current_unit*x_units),DRAWING_Y_OFFSET-DRAWING_HEIGHT,color_lightgray);
 
 #ifdef DEBUG
-	printf("Starting to draw grid units...\n");
+	printf("グリッドを描画中...\n");
 #endif
 
 	/* draw y units */
@@ -1672,52 +1684,103 @@
 		temp_buffer[sizeof(temp_buffer)-1]='\x0';
 		string_width=gdFontSmall->w*strlen(temp_buffer);
 
-		gdImageStringUp(histogram_image,gdFontSmall,DRAWING_X_OFFSET+(current_unit*x_units)-(string_height/2),DRAWING_Y_OFFSET+5+string_width,(unsigned char *)temp_buffer,color_black);
+		if( (breakdown_type==BREAKDOWN_MONTHLY) || (breakdown_type==BREAKDOWN_DAY_OF_MONTH) || (breakdown_type==BREAKDOWN_DAY_OF_WEEK) ){
+			gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+(current_unit*x_units)-(string_width/2),DRAWING_Y_OFFSET+5,(unsigned char *)temp_buffer,color_black);	//EDIT
+		}else{
+			gdImageStringUp(histogram_image,gdFontSmall,DRAWING_X_OFFSET+(current_unit*x_units)-(string_height/2),DRAWING_Y_OFFSET+5+string_width,(unsigned char *)temp_buffer,color_black);
+		}
 	        }
 
 	/* draw y unit measure */
-	snprintf(temp_buffer,sizeof(temp_buffer)-1,"Number of Events");
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageStringUp(histogram_image,gdFontSmall,0,DRAWING_Y_OFFSET-(DRAWING_HEIGHT/2)+(string_width/2),(unsigned char *)temp_buffer,color_black);
+	if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"回");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET-(string_width*4), DRAWING_Y_OFFSET-(DRAWING_HEIGHT/2)-15, (unsigned char *)temp_buffer);
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"数");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET-(string_width*4), DRAWING_Y_OFFSET-(DRAWING_HEIGHT/2)+5, (unsigned char *)temp_buffer);
+	}else{
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"Number of Events");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringUp(histogram_image,gdFontSmall,0,DRAWING_Y_OFFSET-(DRAWING_HEIGHT/2)+(string_width/2),(unsigned char *)temp_buffer,color_black);
+	}
 
 	/* draw x unit measure */
-	if(breakdown_type==BREAKDOWN_MONTHLY)
-		snprintf(temp_buffer,sizeof(temp_buffer)-1,"Month");
-	else if(breakdown_type==BREAKDOWN_DAY_OF_MONTH)
-		snprintf(temp_buffer,sizeof(temp_buffer)-1,"Day of the Month");
-	else if(breakdown_type==BREAKDOWN_DAY_OF_WEEK)
-		snprintf(temp_buffer,sizeof(temp_buffer)-1,"Day of the Week");
-	else
-		snprintf(temp_buffer,sizeof(temp_buffer)-1,"Hour of the Day (15 minute increments)");
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+(DRAWING_WIDTH/2)-(string_width/2),DRAWING_Y_OFFSET+70,(unsigned char *)temp_buffer,color_black);
+	if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+		if(breakdown_type==BREAKDOWN_MONTHLY)
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"［ 月別 ］");	//EDIT
+		else if(breakdown_type==BREAKDOWN_DAY_OF_MONTH)
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"［ 日別 ］");	//EDIT
+		else if(breakdown_type==BREAKDOWN_DAY_OF_WEEK)
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"［ 週別 ］");	//EDIT
+		else
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"［ 時間別 (15分間隔) ］");	//EDIT
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		if( (breakdown_type==BREAKDOWN_MONTHLY) || (breakdown_type==BREAKDOWN_DAY_OF_MONTH) || (breakdown_type==BREAKDOWN_DAY_OF_WEEK) ){
+			gdImageStringTTF(histogram_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+(DRAWING_WIDTH/2)-(string_width/2), DRAWING_Y_OFFSET+50, (unsigned char *)temp_buffer);//EDIT
+		}else{
+			gdImageStringTTF(histogram_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+(DRAWING_WIDTH/2)-(string_width/2), DRAWING_Y_OFFSET+75, (unsigned char *)temp_buffer);//EDIT
+		}
+	}else{
+		if(breakdown_type==BREAKDOWN_MONTHLY)
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Month");
+		else if(breakdown_type==BREAKDOWN_DAY_OF_MONTH)
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Day of the Month");
+		else if(breakdown_type==BREAKDOWN_DAY_OF_WEEK)
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Day of the Week");
+		else
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Hour of the Day (15 minute increments)");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+(DRAWING_WIDTH/2)-(string_width/2),DRAWING_Y_OFFSET+70,(unsigned char *)temp_buffer,color_black);
+	}
 
 	/* draw title */
-	snprintf(start_time,sizeof(start_time)-1,"%s",ctime(&t1));
-	start_time[sizeof(start_time)-1]='\x0';
-	start_time[strlen(start_time)-1]='\x0';
-	snprintf(end_time,sizeof(end_time)-1,"%s",ctime(&t2));
-	end_time[sizeof(end_time)-1]='\x0';
-	end_time[strlen(end_time)-1]='\x0';
+	if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+		get_time_string(&t1, start_time, sizeof(start_time)-1, LONG_DATE_TIME);
+		get_time_string(&t1, end_time, sizeof(end_time)-1, LONG_DATE_TIME);
 
-	if(display_type==DISPLAY_HOST_HISTOGRAM)
-		snprintf(temp_buffer,sizeof(temp_buffer)-1,"Event History For Host '%s'",host_name);
-	else
-		snprintf(temp_buffer,sizeof(temp_buffer)-1,"Event History For Service '%s' On Host '%s'",svc_description,host_name);
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+(DRAWING_WIDTH/2)-(string_width/2),0,(unsigned char *)temp_buffer,color_black);
-
-	snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s to %s",start_time,end_time);
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+(DRAWING_WIDTH/2)-(string_width/2),string_height+5,(unsigned char *)temp_buffer,color_black);
+		if(display_type==DISPLAY_HOST_HISTOGRAM)
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホスト '%s' のイベント履歴",host_name);
+		else
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホスト '%s' 上の '%s' サービスのイベント履歴",host_name,svc_description);
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+(DRAWING_WIDTH/2)-(string_width/2),string_height,(unsigned char *)temp_buffer);//EDIT
+	
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s から %s",start_time,end_time);
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+(DRAWING_WIDTH/2)-(string_width/2),(string_height*2)+5,(unsigned char *)temp_buffer);//EDIT
+	}else{
+		snprintf(start_time,sizeof(start_time)-1,"%s",ctime(&t1));
+		start_time[sizeof(start_time)-1]='\x0';
+		start_time[strlen(start_time)-1]='\x0';
+		snprintf(end_time,sizeof(end_time)-1,"%s",ctime(&t2));
+		end_time[sizeof(end_time)-1]='\x0';
+		end_time[strlen(end_time)-1]='\x0';
+
+		if(display_type==DISPLAY_HOST_HISTOGRAM)
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Event History For Host '%s'",host_name);
+		else
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Event History For Service '%s' On Host '%s'",svc_description,host_name);
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+(DRAWING_WIDTH/2)-(string_width/2),0,(unsigned char *)temp_buffer,color_black);
+	
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s to %s",start_time,end_time);
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+(DRAWING_WIDTH/2)-(string_width/2),string_height+5,(unsigned char *)temp_buffer,color_black);
+	}
 
 
 #ifdef DEBUG
-	printf("About to starting graphing (total_buckets=%d)...\n",total_buckets);
+	printf("グラフについて(total_buckets=%d)...\n",total_buckets);
 #endif
 	
 
@@ -1755,7 +1818,7 @@
 	                }
 
 #ifdef DEBUG
-		printf("Done graphing HOST UP states...\n");
+		printf("ホスト稼動(UP)状態のグラフを描画しました。\n");
 #endif
 
 		/* graph host down states */
@@ -1789,7 +1852,7 @@
 	                }
 
 #ifdef DEBUG
-		printf("Done graphing HOST DOWN states...\n");
+		printf("ホスト停止(DOWN)状態のグラフを描画しました。\n");
 #endif
 
 		/* graph host unreachable states */
@@ -1823,7 +1886,7 @@
 	                }
 
 #ifdef DEBUG
-		printf("Done graphing HOST UNREACHABLE states...\n");
+		printf("ホスト未到達(UNREACHABLE)状態のグラフを描画しました。\n");
 #endif
 
 	        }
@@ -1953,7 +2016,7 @@
 	        }
 
 #ifdef DEBUG
-	printf("Done graphing states...\n");
+	printf("状態のグラフを描画しました。\n");
 #endif
 
 	/* draw graph boundaries */
@@ -1963,64 +2026,125 @@
 
 
 	/* graph stats */
-	snprintf(temp_buffer,sizeof(temp_buffer)-1,"EVENT TYPE");
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT,(unsigned char *)temp_buffer,color_black);
-
-	snprintf(temp_buffer,sizeof(temp_buffer)-1,"  MIN   MAX   SUM   AVG");
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+115,DRAWING_Y_OFFSET-DRAWING_HEIGHT,(unsigned char *)temp_buffer,color_black);
-
-	draw_line(DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+string_height+2,DRAWING_X_OFFSET+DRAWING_WIDTH+275,DRAWING_Y_OFFSET-DRAWING_HEIGHT+string_height+2,color_black);
-
-	snprintf(temp_buffer,sizeof(temp_buffer)-1,"Recovery (%s):",(display_type==DISPLAY_SERVICE_HISTOGRAM)?"Ok":"Up");
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*1),(unsigned char *)temp_buffer,color_green);
-
-	state1_avg=(double)((double)state1_sum/(double)total_buckets);
-	snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu   %.2f",state1_min,state1_max,state1_sum,state1_avg);
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+115,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*1),(unsigned char *)temp_buffer,color_black);
-
-	snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s:",(display_type==DISPLAY_SERVICE_HISTOGRAM)?"Warning":"Down");
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*2),(unsigned char *)temp_buffer,(display_type==DISPLAY_SERVICE_HISTOGRAM)?color_yellow:color_red);
-
-	state2_avg=(double)((double)state2_sum/(double)total_buckets);
-	snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu   %.2f",state2_min,state2_max,state2_sum,state2_avg);
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+115,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*2),(unsigned char *)temp_buffer,color_black);
-
-	snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s:",(display_type==DISPLAY_SERVICE_HISTOGRAM)?"Unknown":"Unreachable");
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*3),(unsigned char *)temp_buffer,(display_type==DISPLAY_SERVICE_HISTOGRAM)?color_orange:color_darkred);
-
-	state3_avg=(double)((double)state3_sum/(double)total_buckets);
-	snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu   %.2f",state3_min,state3_max,state3_sum,state3_avg);
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	string_width=gdFontSmall->w*strlen(temp_buffer);
-	gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+115,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*3),(unsigned char *)temp_buffer,color_black);
+	if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"[ イベントの種類 ]");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT-10,(unsigned char *)temp_buffer);
+	
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"  最小  最大  合計    平均");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+DRAWING_WIDTH+100,DRAWING_Y_OFFSET-DRAWING_HEIGHT+10,(unsigned char *)temp_buffer);
+	
+		draw_line(DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+string_height+2,DRAWING_X_OFFSET+DRAWING_WIDTH+275,DRAWING_Y_OFFSET-DRAWING_HEIGHT+string_height+2,color_black);
+	
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"復旧(%s):",(display_type==DISPLAY_SERVICE_HISTOGRAM)?"正常":"稼動");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], color_green, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*2),(unsigned char *)temp_buffer);
+	
+		state1_avg=(double)((double)state1_sum/(double)total_buckets);
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu    %.2f",state1_min,state1_max,state1_sum,state1_avg);
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+DRAWING_WIDTH+105,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*2),(unsigned char *)temp_buffer);
+	
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s:",(display_type==DISPLAY_SERVICE_HISTOGRAM)?"警告":"停止");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], (display_type==DISPLAY_SERVICE_HISTOGRAM)?color_yellow:color_red, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*3),(unsigned char *)temp_buffer);
 
-	if(display_type==DISPLAY_SERVICE_HISTOGRAM){
+		state2_avg=(double)((double)state2_sum/(double)total_buckets);
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu    %.2f",state2_min,state2_max,state2_sum,state2_avg);
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+DRAWING_WIDTH+105,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*3),(unsigned char *)temp_buffer);
+	
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s:",(display_type==DISPLAY_SERVICE_HISTOGRAM)?"不明":"未到達");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], (display_type==DISPLAY_SERVICE_HISTOGRAM)?color_orange:color_darkred, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*4),(unsigned char *)temp_buffer);
+	
+		state3_avg=(double)((double)state3_sum/(double)total_buckets);
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu    %.2f",state3_min,state3_max,state3_sum,state3_avg);
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageStringTTF(histogram_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+DRAWING_WIDTH+105,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*4),(unsigned char *)temp_buffer);
 
-		snprintf(temp_buffer,sizeof(temp_buffer)-1,"Critical:");
+		if(display_type==DISPLAY_SERVICE_HISTOGRAM){
+	
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"異常:");
+			temp_buffer[sizeof(temp_buffer)-1]='\x0';
+			string_width=gdFontSmall->w*strlen(temp_buffer);
+			gdImageStringTTF(histogram_image, &brect[0],color_red, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*5),(unsigned char *)temp_buffer);
+	
+			state4_avg=(double)((double)state4_sum/(double)total_buckets);
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu    %.2f",state4_min,state4_max,state4_sum,state4_avg);
+			temp_buffer[sizeof(temp_buffer)-1]='\x0';
+			string_width=gdFontSmall->w*strlen(temp_buffer);
+			gdImageStringTTF(histogram_image, &brect[0],color_black, ttf_file, SMALL_FONT_SIZE, 0.0, DRAWING_X_OFFSET+DRAWING_WIDTH+105,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*5),(unsigned char *)temp_buffer);
+		}
+	}else{
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"EVENT TYPE");
 		temp_buffer[sizeof(temp_buffer)-1]='\x0';
 		string_width=gdFontSmall->w*strlen(temp_buffer);
-		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*4),(unsigned char *)temp_buffer,color_red);
+		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT,(unsigned char *)temp_buffer,color_black);
+	
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"  MIN   MAX   SUM   AVG");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+115,DRAWING_Y_OFFSET-DRAWING_HEIGHT,(unsigned char *)temp_buffer,color_black);
+	
+		draw_line(DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+string_height+2,DRAWING_X_OFFSET+DRAWING_WIDTH+275,DRAWING_Y_OFFSET-DRAWING_HEIGHT+string_height+2,color_black);
+	
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"Recovery (%s):",(display_type==DISPLAY_SERVICE_HISTOGRAM)?"Ok":"Up");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*1),(unsigned char *)temp_buffer,color_green);
+	
+		state1_avg=(double)((double)state1_sum/(double)total_buckets);
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu   %.2f",state1_min,state1_max,state1_sum,state1_avg);
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+115,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*1),(unsigned char *)temp_buffer,color_black);
+	
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s:",(display_type==DISPLAY_SERVICE_HISTOGRAM)?"Warning":"Down");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*2),(unsigned char *)temp_buffer,(display_type==DISPLAY_SERVICE_HISTOGRAM)?color_yellow:color_red);
 
-		state4_avg=(double)((double)state4_sum/(double)total_buckets);
-		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu   %.2f",state4_min,state4_max,state4_sum,state4_avg);
+		state2_avg=(double)((double)state2_sum/(double)total_buckets);
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu   %.2f",state2_min,state2_max,state2_sum,state2_avg);
 		temp_buffer[sizeof(temp_buffer)-1]='\x0';
 		string_width=gdFontSmall->w*strlen(temp_buffer);
-		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+115,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*4),(unsigned char *)temp_buffer,color_black);
-	        }
+		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+115,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*2),(unsigned char *)temp_buffer,color_black);
+	
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s:",(display_type==DISPLAY_SERVICE_HISTOGRAM)?"Unknown":"Unreachable");
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*3),(unsigned char *)temp_buffer,(display_type==DISPLAY_SERVICE_HISTOGRAM)?color_orange:color_darkred);
+	
+		state3_avg=(double)((double)state3_sum/(double)total_buckets);
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu   %.2f",state3_min,state3_max,state3_sum,state3_avg);
+		temp_buffer[sizeof(temp_buffer)-1]='\x0';
+		string_width=gdFontSmall->w*strlen(temp_buffer);
+		gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+115,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*3),(unsigned char *)temp_buffer,color_black);
+
+		if(display_type==DISPLAY_SERVICE_HISTOGRAM){
+	
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Critical:");
+			temp_buffer[sizeof(temp_buffer)-1]='\x0';
+			string_width=gdFontSmall->w*strlen(temp_buffer);
+			gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+15,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*4),(unsigned char *)temp_buffer,color_red);
+	
+			state4_avg=(double)((double)state4_sum/(double)total_buckets);
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"%5lu %5lu %5lu   %.2f",state4_min,state4_max,state4_sum,state4_avg);
+			temp_buffer[sizeof(temp_buffer)-1]='\x0';
+			string_width=gdFontSmall->w*strlen(temp_buffer);
+			gdImageString(histogram_image,gdFontSmall,DRAWING_X_OFFSET+DRAWING_WIDTH+115,DRAWING_Y_OFFSET-DRAWING_HEIGHT+((string_height+5)*4),(unsigned char *)temp_buffer,color_black);
+		        }
+	}
 
 	return;
         }
@@ -2033,13 +2157,13 @@
 	int skip_state=FALSE;
 
 #ifdef DEBUG2
-	printf("NEW ENTRY: last=%d this=%d\n",last_state,state_type);
+	printf("新しい項目: 最終状態=%d ,現在の状態=%d\n",last_state,state_type);
 #endif
 
 	/* don't record program starts/stops, just make a note that one occurred */
 	if(state_type==AS_PROGRAM_START || state_type==AS_PROGRAM_END){
 #ifdef DEBUG2
-		printf("Recording a program start: %d\n",state_type);
+		printf("プログラムの開始を記録します: %d\n",state_type);
 #endif
 		program_restart_has_occurred=TRUE;
 		return;
@@ -2075,7 +2199,7 @@
 		if(skip_state==TRUE){
 			program_restart_has_occurred=FALSE;
 #ifdef DEBUG2
-			printf("Skipping state...\n");
+			printf("スキップしています...\n");
 #endif
 			return;
 		        }
@@ -2087,13 +2211,13 @@
 	/* are we only processing new states */
 	if(new_states_only==TRUE && state_type==last_state){
 #ifdef DEBUG2
-		printf("Skipping state (not a new state)...\n");
+		printf("スキップしています(新しいステートはありません)...\n");
 #endif
 		return;
 	        }
 
 #ifdef DEBUG2
-	printf("GOODSTATE: %d @ %lu\n",state_type,(unsigned long)time_stamp);
+	printf("正常状態: %d @ %lu\n",state_type,(unsigned long)time_stamp);
 #endif
 		
 
@@ -2149,7 +2273,7 @@
 	int current_archive;
 
 #ifdef DEBUG2
-	printf("Determining archives to use...\n");
+	printf("使用するアーカイブを決定しています...\n");
 #endif
 
 	/* determine earliest archive to use */
@@ -2164,8 +2288,8 @@
 		oldest_archive=newest_archive;
 
 #ifdef DEBUG2
-	printf("Oldest archive: %d\n",oldest_archive);
-	printf("Newest archive: %d\n",newest_archive);
+	printf("最も古いアーカイブ: %d\n",oldest_archive);
+	printf("最も新しいアーカイブ: %d\n",newest_archive);
 #endif
 
 	/* read in all the necessary archived logs */
@@ -2175,7 +2299,7 @@
 		get_log_archive_to_use(current_archive,filename,sizeof(filename)-1);
 
 #ifdef DEBUG2
-		printf("\tCurrent archive: %d (%s)\n",current_archive,filename);
+		printf("\t現在のアーカイブ: %d (%s)\n",current_archive,filename);
 #endif
 
 		/* scan the log file for archived state data */
@@ -2205,13 +2329,13 @@
 
 	if((thefile=mmap_fopen(filename))==NULL){
 #ifdef DEBUG2
-		printf("Could not open file '%s' for reading.\n",filename);
+		printf("'%s' を開くことが出来なかったため読み込めませんでした。\n",filename);
 #endif
 		return;
 	        }
 
 #ifdef DEBUG2
-	printf("Scanning log file '%s' for archived state data...\n",filename);
+	printf("ステートデータをアーカイブするためにログファイル '%s' から取得しています...\n",filename);
 #endif
 
 	while(1){
diff -urN nagios-3.2.3.orig/cgi/history.c nagios-3.2.3/cgi/history.c
--- nagios-3.2.3.orig/cgi/history.c	2009-05-13 10:00:40.000000000 +0900
+++ nagios-3.2.3/cgi/history.c	2010-12-12 19:59:07.000000000 +0900
@@ -140,32 +140,32 @@
 		printf("<td align=left valign=top width=33%%>\n");
 
 		if(display_type==DISPLAY_SERVICES)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Service Alert History");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"サービスの警報履歴");
 		else if(show_all_hosts==TRUE)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Alert History");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"警報履歴");
 		else
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Host Alert History");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホストの警報履歴");
 		temp_buffer[sizeof(temp_buffer)-1]='\x0';
 		display_info_table(temp_buffer,FALSE,&current_authdata);
 
 		printf("<TABLE BORDER=1 CELLPADDING=0 CELLSPACING=0 CLASS='linkBox'>\n");
 		printf("<TR><TD CLASS='linkBox'>\n");
 		if(display_type==DISPLAY_HOSTS){
-			printf("<A HREF='%s?host=%s'>View Status Detail For %s</A><BR />\n",STATUS_CGI,(show_all_hosts==TRUE)?"all":url_encode(host_name),(show_all_hosts==TRUE)?"All Hosts":"This Host");
-			printf("<A HREF='%s?host=%s'>View Notifications For %s</A><BR />\n",NOTIFICATIONS_CGI,(show_all_hosts==TRUE)?"all":url_encode(host_name),(show_all_hosts==TRUE)?"All Hosts":"This Host");
+			printf("<A HREF='%s?host=%s'>%sの稼動状態を見る</A><BR />\n",STATUS_CGI,(show_all_hosts==TRUE)?"all":url_encode(host_name),(show_all_hosts==TRUE)?"全ホスト":"このホスト");
+			printf("<A HREF='%s?host=%s'>%sの通知履歴を見る</A><BR />\n",NOTIFICATIONS_CGI,(show_all_hosts==TRUE)?"all":url_encode(host_name),(show_all_hosts==TRUE)?"全ホスト":"このホスト");
 #ifdef USE_TRENDS
 			if(show_all_hosts==FALSE)
-				printf("<A HREF='%s?host=%s'>View Trends For This Host</A>\n",TRENDS_CGI,url_encode(host_name));
+				printf("<A HREF='%s?host=%s'>このホストの傾向を見る</A>\n",TRENDS_CGI,url_encode(host_name));
 #endif
 	                }
 		else{
 			printf("<A HREF='%s?host=%s&",NOTIFICATIONS_CGI,url_encode(host_name));
-			printf("service=%s'>View Notifications For This Service</A><BR />\n",url_encode(svc_description));
+			printf("service=%s'>このサービスの通知履歴を見る</A><BR />\n",url_encode(svc_description));
 #ifdef USE_TRENDS
 			printf("<A HREF='%s?host=%s&",TRENDS_CGI,url_encode(host_name));
-			printf("service=%s'>View Trends For This Service</A><BR />\n",url_encode(svc_description));
+			printf("service=%s'>このサービスの傾向を見る</A><BR />\n",url_encode(svc_description));
 #endif
-			printf("<A HREF='%s?host=%s'>View History For This Host</A>\n",HISTORY_CGI,url_encode(host_name));
+			printf("<A HREF='%s?host=%s'>このホストの履歴を見る</A>\n",HISTORY_CGI,url_encode(host_name));
 	                }
 		printf("</TD></TR>\n");
 		printf("</TABLE>\n");
@@ -178,11 +178,11 @@
 
 		printf("<DIV ALIGN=CENTER CLASS='dataTitle'>\n");
 		if(display_type==DISPLAY_SERVICES)
-			printf("Service '%s' On Host '%s'",svc_description,host_name);
+			printf("ホスト '%s' 上の '%s' サービス",host_name,svc_description);
 		else if(show_all_hosts==TRUE)
-			printf("All Hosts and Services");
+			printf("全てのホストとサービス");
 		else
-			printf("Host '%s'",host_name);
+			printf("ホスト '%s'",host_name);
 		printf("</DIV>\n");
 		printf("<BR />\n");
 
@@ -210,61 +210,61 @@
 		printf("<input type='hidden' name='archive' value='%d'>\n",log_archive);
 
 		printf("<tr>\n");
-		printf("<td align=left CLASS='optBoxItem'>State type options:</td>\n");
+		printf("<td align=left CLASS='optBoxItem'>ステータスタイプ:</td>\n");
 		printf("</tr>\n");
 
 		printf("<tr>\n");
 		printf("<td align=left CLASS='optBoxItem'><select name='statetype'>\n");
-		printf("<option value=%d %s>All state types</option>\n",STATE_ALL,(state_options==STATE_ALL)?"selected":"");
-		printf("<option value=%d %s>Soft states</option>\n",STATE_SOFT,(state_options==STATE_SOFT)?"selected":"");
-		printf("<option value=%d %s>Hard states</option>\n",STATE_HARD,(state_options==STATE_HARD)?"selected":"");
+		printf("<option value=%d %s>全てのステータス</option>\n",STATE_ALL,(state_options==STATE_ALL)?"selected":"");
+		printf("<option value=%d %s>ソフト</option>\n",STATE_SOFT,(state_options==STATE_SOFT)?"selected":"");
+		printf("<option value=%d %s>ハード</option>\n",STATE_HARD,(state_options==STATE_HARD)?"selected":"");
 		printf("</select></td>\n");
 		printf("</tr>\n");
 
 		printf("<tr>\n");
-		printf("<td align=left CLASS='optBoxItem'>History detail level for ");
+		printf("<td align=left CLASS='optBoxItem'>");
 		if(display_type==DISPLAY_HOSTS)
-			printf("%s host%s",(show_all_hosts==TRUE)?"all":"this",(show_all_hosts==TRUE)?"s":"");
+			printf("%s host",(show_all_hosts==TRUE)?"全":"この");
 		else
-			printf("service");
+			printf("サービス");
+		printf("の履歴詳細レベル");
 		printf(":</td>\n");
-		printf("</tr>\n")
-;
+		printf("</tr>\n");
 		printf("<tr>\n");
 		printf("<td align=left CLASS='optBoxItem'><select name='type'>\n");
 		if(display_type==DISPLAY_HOSTS)
-			printf("<option value=%d %s>All alerts</option>\n",HISTORY_ALL,(history_options==HISTORY_ALL)?"selected":"");
-		printf("<option value=%d %s>All service alerts</option>\n",HISTORY_SERVICE_ALL,(history_options==HISTORY_SERVICE_ALL)?"selected":"");
+			printf("<option value=%d %s>全ての警報</option>\n",HISTORY_ALL,(history_options==HISTORY_ALL)?"selected":"");
+		printf("<option value=%d %s>全サービスの警報</option>\n",HISTORY_SERVICE_ALL,(history_options==HISTORY_SERVICE_ALL)?"selected":"");
 		if(display_type==DISPLAY_HOSTS)
-			printf("<option value=%d %s>All host alerts</option>\n",HISTORY_HOST_ALL,(history_options==HISTORY_HOST_ALL)?"selected":"");
-		printf("<option value=%d %s>Service warning</option>\n",HISTORY_SERVICE_WARNING,(history_options==HISTORY_SERVICE_WARNING)?"selected":"");
-		printf("<option value=%d %s>Service unknown</option>\n",HISTORY_SERVICE_UNKNOWN,(history_options==HISTORY_SERVICE_UNKNOWN)?"selected":"");
-		printf("<option value=%d %s>Service critical</option>\n",HISTORY_SERVICE_CRITICAL,(history_options==HISTORY_SERVICE_CRITICAL)?"selected":"");
-		printf("<option value=%d %s>Service recovery</option>\n",HISTORY_SERVICE_RECOVERY,(history_options==HISTORY_SERVICE_RECOVERY)?"selected":"");
+			printf("<option value=%d %s>全ホストの警報</option>\n",HISTORY_HOST_ALL,(history_options==HISTORY_HOST_ALL)?"selected":"");
+		printf("<option value=%d %s>サービスの警告状態(WARNING)</option>\n",HISTORY_SERVICE_WARNING,(history_options==HISTORY_SERVICE_WARNING)?"selected":"");
+		printf("<option value=%d %s>サービスの不明状態(UNKNOWN)</option>\n",HISTORY_SERVICE_UNKNOWN,(history_options==HISTORY_SERVICE_UNKNOWN)?"selected":"");
+		printf("<option value=%d %s>サービスの異常状態(CRITICAL)</option>\n",HISTORY_SERVICE_CRITICAL,(history_options==HISTORY_SERVICE_CRITICAL)?"selected":"");
+		printf("<option value=%d %s>サービスの復旧状態(RECOVERY)</option>\n",HISTORY_SERVICE_RECOVERY,(history_options==HISTORY_SERVICE_RECOVERY)?"selected":"");
 		if(display_type==DISPLAY_HOSTS){
-			printf("<option value=%d %s>Host down</option>\n",HISTORY_HOST_DOWN,(history_options==HISTORY_HOST_DOWN)?"selected":"");
-			printf("<option value=%d %s>Host unreachable</option>\n",HISTORY_HOST_UNREACHABLE,(history_options==HISTORY_HOST_UNREACHABLE)?"selected":"");
-		        printf("<option value=%d %s>Host recovery</option>\n",HISTORY_HOST_RECOVERY,(history_options==HISTORY_HOST_RECOVERY)?"selected":"");
+			printf("<option value=%d %s>ホストの停止状態(DOWN)</option>\n",HISTORY_HOST_DOWN,(history_options==HISTORY_HOST_DOWN)?"selected":"");
+			printf("<option value=%d %s>ホストの未到達状態(UNREACHABLE)</option>\n",HISTORY_HOST_UNREACHABLE,(history_options==HISTORY_HOST_UNREACHABLE)?"selected":"");
+		        printf("<option value=%d %s>ホストの復旧状態(RECOVERY)</option>\n",HISTORY_HOST_RECOVERY,(history_options==HISTORY_HOST_RECOVERY)?"selected":"");
 	                }
 		printf("</select></td>\n");
 		printf("</tr>\n");
 
 		printf("<tr>\n");
-		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='checkbox' name='noflapping' %s> Hide Flapping Alerts</td>",(display_flapping_alerts==FALSE)?"checked":"");
+		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='checkbox' name='noflapping' %s> フラッピングを除外する</td>",(display_flapping_alerts==FALSE)?"checked":"");
 		printf("</tr>\n");
 		printf("<tr>\n");
-		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='checkbox' name='nodowntime' %s> Hide Downtime Alerts</td>",(display_downtime_alerts==FALSE)?"checked":"");
+		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='checkbox' name='nodowntime' %s> ダウンタイムを除外する</td>",(display_downtime_alerts==FALSE)?"checked":"");
 		printf("</tr>\n");
 
 		printf("<tr>\n");
-		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='checkbox' name='nosystem' %s> Hide Process Messages</td>",(display_system_messages==FALSE)?"checked":"");
+		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='checkbox' name='nosystem' %s> プロセスメッセージを除外する</td>",(display_system_messages==FALSE)?"checked":"");
 		printf("</tr>\n");
 		printf("<tr>\n");
-		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='checkbox' name='oldestfirst' %s> Older Entries First</td>",(use_lifo==FALSE)?"checked":"");
+		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='checkbox' name='oldestfirst' %s> 古いものを先頭にする</td>",(use_lifo==FALSE)?"checked":"");
 		printf("</tr>\n");
 
 		printf("<tr>\n");
-		printf("<td align=left CLASS='optBoxItem'><input type='submit' value='Update'></td>\n");
+		printf("<td align=left CLASS='optBoxItem'><input type='submit' value='更新'></td>\n");
 		printf("</tr>\n");
 
 		/* display context-sensitive help */
@@ -323,8 +323,9 @@
 	printf("<html>\n");
 	printf("<head>\n");
 	printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
+	printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
 	printf("<title>\n");
-	printf("Nagios History\n");
+	printf("履歴\n");
 	printf("</title>\n");
 
 	if(use_stylesheet==TRUE){
@@ -515,10 +516,10 @@
 		result=read_file_into_lifo(log_file_to_use);
 		if(result!=LIFO_OK){
 			if(result==LIFO_ERROR_MEMORY){
-				printf("<P><DIV CLASS='warningMessage'>Not enough memory to reverse log file - displaying history in natural order...</DIV></P>\n");
+				printf("<P><DIV CLASS='warningMessage'>ログを逆順にするために必要なメモリが不足しているため通常の順番で表示しています。</DIV></P>\n");
 			        }
 			else if(result==LIFO_ERROR_FILE){
-				printf("<HR><P><DIV CLASS='errorMessage'>Error: Cannot open log file '%s' for reading!</DIV></P><HR>",log_file_to_use);
+				printf("<HR><P><DIV CLASS='errorMessage'>エラー: ログファイル'%s'が読み込めません。</DIV></P><HR>",log_file_to_use);
 				return;
 			        }
 			use_lifo=FALSE;
@@ -528,7 +529,7 @@
 	if(use_lifo==FALSE){
 
 		if((thefile=mmap_fopen(log_file_to_use))==NULL){
-			printf("<HR><P><DIV CLASS='errorMessage'>Error: Cannot open log file '%s' for reading!</DIV></P><HR>",log_file_to_use);
+			printf("<HR><P><DIV CLASS='errorMessage'>エラー: ログファイル'%s'が読み込めません。</DIV></P><HR>",log_file_to_use);
 			return;
 		        }
 	        }
@@ -943,12 +944,14 @@
 	
 	if(found_line==FALSE){
 		printf("<HR>\n");
-		printf("<P><DIV CLASS='warningMessage'>No history information was found ");
+		printf("<P><DIV CLASS='warningMessage'>");
 		if(display_type==DISPLAY_HOSTS)
-			printf("%s",(show_all_hosts==TRUE)?"":"for this host ");
+			printf("%s",(show_all_hosts==TRUE)?"":"このホストの");
 		else
-			printf("for this service ");
-		printf("in %s log file</DIV></P>",(log_archive==0)?"the current":"this archived");
+			printf("このサービスの");
+		printf("警告履歴");
+		printf("は、%sのログの中には</DIV></P>",(log_archive==0)?"現在":"このアーカイブ");
+		printf("見あたりません。</DIV></P>");
 	        }
 
 	printf("<HR>\n");
diff -urN nagios-3.2.3.orig/cgi/notifications.c nagios-3.2.3/cgi/notifications.c
--- nagios-3.2.3.orig/cgi/notifications.c	2010-12-12 00:47:54.000000000 +0900
+++ nagios-3.2.3/cgi/notifications.c	2010-12-12 19:59:07.000000000 +0900
@@ -135,34 +135,34 @@
 		printf("<td align=left valign=top width=33%%>\n");
 	
 		if(query_type==FIND_SERVICE)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Service Notifications");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"サービスの通知履歴");
 		else if(query_type==FIND_HOST){
 			if(find_all==TRUE)
-				snprintf(temp_buffer,sizeof(temp_buffer)-1,"Notifications");
+				snprintf(temp_buffer,sizeof(temp_buffer)-1,"通知履歴");
 			else
-				snprintf(temp_buffer,sizeof(temp_buffer)-1,"Host Notifications");
+				snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホストの通知履歴");
 		        }
 		else
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Contact Notifications");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"通知先の通知履歴");
 		display_info_table(temp_buffer,FALSE,&current_authdata);
 
 		if(query_type==FIND_HOST || query_type==FIND_SERVICE){
 			printf("<TABLE BORDER=1 CELLPADDING=0 CELLSPACING=0 CLASS='linkBox'>\n");
 			printf("<TR><TD CLASS='linkBox'>\n");
 			if(query_type==FIND_HOST){
-				printf("<A HREF='%s?host=%s'>View Status Detail For %s</A><BR>\n",STATUS_CGI,(find_all==TRUE)?"all":url_encode(query_host_name),(find_all==TRUE)?"All Hosts":"This Host");
-				printf("<A HREF='%s?host=%s'>View History For %s</A><BR>\n",HISTORY_CGI,(find_all==TRUE)?"all":url_encode(query_host_name),(find_all==TRUE)?"All Hosts":"This Host");
+				printf("<A HREF='%s?host=%s'>%sのステータス詳細を見る</A><BR>\n",STATUS_CGI,(find_all==TRUE)?"all":url_encode(query_host_name),(find_all==TRUE)?"全ホスト":"このホスト");
+				printf("<A HREF='%s?host=%s'>%sの履歴を見る</A><BR>\n",HISTORY_CGI,(find_all==TRUE)?"all":url_encode(query_host_name),(find_all==TRUE)?"全ホスト":"このホスト");
 #ifdef USE_TRENDS
 				if(find_all==FALSE)
-					printf("<A HREF='%s?host=%s'>View Trends For This Host</A><BR>\n",TRENDS_CGI,url_encode(query_host_name));
+					printf("<A HREF='%s?host=%s'>このホストの傾向を見る</A><BR>\n",TRENDS_CGI,url_encode(query_host_name));
 #endif
 	                        }
 			else if(query_type==FIND_SERVICE){
 				printf("<A HREF='%s?host=%s&",HISTORY_CGI,(find_all==TRUE)?"all":url_encode(query_host_name));
-				printf("service=%s'>View History For This Service</A><BR>\n",url_encode(query_svc_description));
+				printf("service=%s'>このサービスの履歴を見る</A><BR>\n",url_encode(query_svc_description));
 #ifdef USE_TRENDS
 				printf("<A HREF='%s?host=%s&",TRENDS_CGI,(find_all==TRUE)?"all":url_encode(query_host_name));
-				printf("service=%s'>View Trends For This Service</A><BR>\n",url_encode(query_svc_description));
+				printf("service=%s'>このサービスの傾向を見る</A><BR>\n",url_encode(query_svc_description));
 #endif
 	                        }
 			printf("</TD></TR>\n");
@@ -177,18 +177,18 @@
 
 		printf("<DIV ALIGN=CENTER CLASS='dataTitle'>\n");
 		if(query_type==FIND_SERVICE)
-			printf("Service '%s' On Host '%s'",query_svc_description,query_host_name);
+			printf("ホスト '%s' 上の '%s' サービス",query_host_name,query_svc_description);
 		else if(query_type==FIND_HOST){
 			if(find_all==TRUE)
-				printf("All Hosts and Services");
+				printf("全てのホストとサービス");
 			else
-				printf("Host '%s'",query_host_name);
+				printf("ホスト '%s'",query_host_name);
 		        }
 		else{
 			if(find_all==TRUE)
-				printf("All Contacts");
+				printf("全ての通知先");
 			else
-				printf("Contact '%s'",query_contact_name);
+				printf("通知先 '%s'",query_contact_name);
 		        }
 		printf("</DIV>\n");
 		printf("<BR>\n");
@@ -220,41 +220,41 @@
 		printf("<input type='hidden' name='archive' value='%d'>\n",log_archive);
 		printf("<tr>\n");
 		if(query_type==FIND_SERVICE)
-			printf("<td align=left colspan=2 CLASS='optBoxItem'>Notification detail level for this service:</td>");
+			printf("<td align=left colspan=2 CLASS='optBoxItem'>このサービスの通知履歴の詳細レベル:</td>");
 		else
-			printf("<td align=left colspan=2 CLASS='optBoxItem'>Notification detail level for %s %s%s:</td>",(find_all==TRUE)?"all":"this",(query_type==FIND_HOST)?"host":"contact",(find_all==TRUE)?"s":"");
+			printf("<td align=left colspan=2 CLASS='optBoxItem'>%s%sの通知履歴の詳細レベル:</td>",(find_all==TRUE)?"全":"この",(query_type==FIND_HOST)?"ホスト":"通知先");
 		printf("</tr>\n");
 		printf("<tr>\n");
 		printf("<td align=left colspan=2 CLASS='optBoxItem'><select name='type'>\n");
-		printf("<option value=%d %s>All notifications\n",NOTIFICATION_ALL,(notification_options==NOTIFICATION_ALL)?"selected":"");
+		printf("<option value=%d %s>全ての通知\n",NOTIFICATION_ALL,(notification_options==NOTIFICATION_ALL)?"selected":"");
 		if(query_type!=FIND_SERVICE){
-			printf("<option value=%d %s>All service notifications\n",NOTIFICATION_SERVICE_ALL,(notification_options==NOTIFICATION_SERVICE_ALL)?"selected":"");
-			printf("<option value=%d %s>All host notifications\n",NOTIFICATION_HOST_ALL,(notification_options==NOTIFICATION_HOST_ALL)?"selected":"");
+			printf("<option value=%d %s>全てのサービス\n",NOTIFICATION_SERVICE_ALL,(notification_options==NOTIFICATION_SERVICE_ALL)?"selected":"");
+			printf("<option value=%d %s>全てのホスト\n",NOTIFICATION_HOST_ALL,(notification_options==NOTIFICATION_HOST_ALL)?"selected":"");
 	                }
-		printf("<option value=%d %s>Service custom\n",NOTIFICATION_SERVICE_CUSTOM,(notification_options==NOTIFICATION_SERVICE_CUSTOM)?"selected":"");
-		printf("<option value=%d %s>Service acknowledgements\n",NOTIFICATION_SERVICE_ACK,(notification_options==NOTIFICATION_SERVICE_ACK)?"selected":"");
-		printf("<option value=%d %s>Service warning\n",NOTIFICATION_SERVICE_WARNING,(notification_options==NOTIFICATION_SERVICE_WARNING)?"selected":"");
-		printf("<option value=%d %s>Service unknown\n",NOTIFICATION_SERVICE_UNKNOWN,(notification_options==NOTIFICATION_SERVICE_UNKNOWN)?"selected":"");
-		printf("<option value=%d %s>Service critical\n",NOTIFICATION_SERVICE_CRITICAL,(notification_options==NOTIFICATION_SERVICE_CRITICAL)?"selected":"");
-		printf("<option value=%d %s>Service recovery\n",NOTIFICATION_SERVICE_RECOVERY,(notification_options==NOTIFICATION_SERVICE_RECOVERY)?"selected":"");
-		printf("<option value=%d %s>Service flapping\n",NOTIFICATION_SERVICE_FLAP,(notification_options==NOTIFICATION_SERVICE_FLAP)?"selected":"");
+		printf("<option value=%d %s>サービスの状態を今すぐ通知\n",NOTIFICATION_SERVICE_CUSTOM,(notification_options==NOTIFICATION_SERVICE_CUSTOM)?"selected":"");
+		printf("<option value=%d %s>サービスの障害認知状態(ACKNOWLEDGEMENT)\n",NOTIFICATION_SERVICE_ACK,(notification_options==NOTIFICATION_SERVICE_ACK)?"selected":"");
+		printf("<option value=%d %s>サービスの警告状態(WARNING)\n",NOTIFICATION_SERVICE_WARNING,(notification_options==NOTIFICATION_SERVICE_WARNING)?"selected":"");
+		printf("<option value=%d %s>サービスの不明状態(UNKNOWN)\n",NOTIFICATION_SERVICE_UNKNOWN,(notification_options==NOTIFICATION_SERVICE_UNKNOWN)?"selected":"");
+		printf("<option value=%d %s>サービスの異常状態(CRITICAL)\n",NOTIFICATION_SERVICE_CRITICAL,(notification_options==NOTIFICATION_SERVICE_CRITICAL)?"selected":"");
+		printf("<option value=%d %s>サービスの復旧状態(RECOVERY)\n",NOTIFICATION_SERVICE_RECOVERY,(notification_options==NOTIFICATION_SERVICE_RECOVERY)?"selected":"");
+		printf("<option value=%d %s>サービスのフラッピング状態(FLAPPING)\n",NOTIFICATION_SERVICE_FLAP,(notification_options==NOTIFICATION_SERVICE_FLAP)?"selected":"");
 		if(query_type!=FIND_SERVICE){
-			printf("<option value=%d %s>Host custom\n",NOTIFICATION_HOST_CUSTOM,(notification_options==NOTIFICATION_HOST_CUSTOM)?"selected":"");
-			printf("<option value=%d %s>Host acknowledgements\n",NOTIFICATION_HOST_ACK,(notification_options==NOTIFICATION_HOST_ACK)?"selected":"");
-			printf("<option value=%d %s>Host down\n",NOTIFICATION_HOST_DOWN,(notification_options==NOTIFICATION_HOST_DOWN)?"selected":"");
-			printf("<option value=%d %s>Host unreachable\n",NOTIFICATION_HOST_UNREACHABLE,(notification_options==NOTIFICATION_HOST_UNREACHABLE)?"selected":"");
-			printf("<option value=%d %s>Host recovery\n",NOTIFICATION_HOST_RECOVERY,(notification_options==NOTIFICATION_HOST_RECOVERY)?"selected":"");
-			printf("<option value=%d %s>Host flapping\n",NOTIFICATION_HOST_FLAP,(notification_options==NOTIFICATION_HOST_FLAP)?"selected":"");
+			printf("<option value=%d %s>ホストの状態を今すぐ通知\n",NOTIFICATION_HOST_CUSTOM,(notification_options==NOTIFICATION_HOST_CUSTOM)?"selected":"");
+			printf("<option value=%d %s>ホストの障害認知状態(ACKNOWLEDGEMENT)\n",NOTIFICATION_HOST_ACK,(notification_options==NOTIFICATION_HOST_ACK)?"selected":"");
+			printf("<option value=%d %s>ホストの停止状態(DOWN)\n",NOTIFICATION_HOST_DOWN,(notification_options==NOTIFICATION_HOST_DOWN)?"selected":"");
+			printf("<option value=%d %s>ホストの未到達状態(UNREACHABLE)\n",NOTIFICATION_HOST_UNREACHABLE,(notification_options==NOTIFICATION_HOST_UNREACHABLE)?"selected":"");
+			printf("<option value=%d %s>ホストの復旧状態(RECOVERY)\n",NOTIFICATION_HOST_RECOVERY,(notification_options==NOTIFICATION_HOST_RECOVERY)?"selected":"");
+			printf("<option value=%d %s>ホストのフラッピング状態(FLAPPING)\n",NOTIFICATION_HOST_FLAP,(notification_options==NOTIFICATION_HOST_FLAP)?"selected":"");
 	                }
 		printf("</select></td>\n");
 		printf("</tr>\n");
 		printf("<tr>\n");
-		printf("<td align=left CLASS='optBoxItem'>Older Entries First:</td>\n");
+		printf("<td align=left CLASS='optBoxItem'>古いものを先頭にする:</td>\n");
 		printf("<td></td>\n");
 		printf("</tr>\n");
 		printf("<tr>\n");
 		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='checkbox' name='oldestfirst' %s></td>",(use_lifo==FALSE)?"checked":"");
-		printf("<td align=right CLASS='optBoxItem'><input type='submit' value='Update'></td>\n");
+		printf("<td align=right CLASS='optBoxItem'><input type='submit' value='更新'></td>\n");
 		printf("</tr>\n");
 
 		/* display context-sensitive help */
@@ -311,8 +311,9 @@
 	printf("<html>\n");
 	printf("<head>\n");
 	printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
+	printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
 	printf("<title>\n");
-	printf("Alert Notifications\n");
+	printf("警報通知\n");
 	printf("</title>\n");
 
 	if(use_stylesheet==TRUE){
@@ -515,10 +516,10 @@
 		result=read_file_into_lifo(log_file_to_use);
 		if(result!=LIFO_OK){
 			if(result==LIFO_ERROR_MEMORY){
-				printf("<P><DIV CLASS='warningMessage'>Not enough memory to reverse log file - displaying notifications in natural order...</DIV></P>");
+				printf("<P><DIV CLASS='warningMessage'>ログを逆順にするために必要なメモリが不足しているため通常の順番で表示しています。</DIV></P>");
 			        }
 			else if(result==LIFO_ERROR_FILE){
-				printf("<P><DIV CLASS='errorMessage'>Error: Cannot open log file '%s' for reading!</DIV></P>",log_file_to_use);
+				printf("<P><DIV CLASS='errorMessage'>エラー: ログファイル'%s'が読み込めません。</DIV></P>",log_file_to_use);
 				return;
 			        }
 			use_lifo=FALSE;
@@ -528,7 +529,7 @@
 	if(use_lifo==FALSE){
 
 		if((thefile=mmap_fopen(log_file_to_use))==NULL){
-			printf("<P><DIV CLASS='errorMessage'>Error: Cannot open log file '%s' for reading!</DIV></P>",log_file_to_use);
+			printf("<P><DIV CLASS='errorMessage'>エラー: ログファイル'%s'が読み込めません。</DIV></P>",log_file_to_use);
 			return;
 		        }
 	        }
@@ -538,13 +539,13 @@
 
 	printf("<table border=0 CLASS='notifications'>\n");
 	printf("<tr>\n");
-	printf("<th CLASS='notifications'>Host</th>\n");
-	printf("<th CLASS='notifications'>Service</th>\n");
-	printf("<th CLASS='notifications'>Type</th>\n");
-	printf("<th CLASS='notifications'>Time</th>\n");
-	printf("<th CLASS='notifications'>Contact</th>\n");
-	printf("<th CLASS='notifications'>Notification Command</th>\n");
-	printf("<th CLASS='notifications'>Information</th>\n");
+	printf("<th CLASS='notifications'>ホスト</th>\n");
+	printf("<th CLASS='notifications'>サービス</th>\n");
+	printf("<th CLASS='notifications'>タイプ</th>\n");
+	printf("<th CLASS='notifications'>時刻</th>\n");
+	printf("<th CLASS='notifications'>通知先</th>\n");
+	printf("<th CLASS='notifications'>通知コマンド</th>\n");
+	printf("<th CLASS='notifications'>ステータス</th>\n");
 	printf("</tr>\n");
 
 	total_notifications=0;
@@ -604,15 +605,17 @@
 			if(notification_type==SERVICE_NOTIFICATION){
 
 				if(!strcmp(alert_level,"CRITICAL")){
+					strcpy(alert_level,"異常状態(CRITICAL)");
 					notification_detail_type=NOTIFICATION_SERVICE_CRITICAL;
 					strcpy(alert_level_class,"CRITICAL");
 				        }
 				else if(!strcmp(alert_level,"WARNING")){
+					strcpy(alert_level,"警告状態(WARNING)");
 					notification_detail_type=NOTIFICATION_SERVICE_WARNING;
 					strcpy(alert_level_class,"WARNING");
 				        }
 				else if(!strcmp(alert_level,"RECOVERY") || !strcmp(alert_level,"OK")){
-					strcpy(alert_level,"OK");
+					strcpy(alert_level,"正常状態(OK)");
 					notification_detail_type=NOTIFICATION_SERVICE_RECOVERY;
 					strcpy(alert_level_class,"OK");
 				        }
@@ -620,22 +623,23 @@
 					notification_detail_type=NOTIFICATION_SERVICE_CUSTOM;
 					strcpy(alert_level_class,"CUSTOM");
 				        }
-				else if(strstr(alert_level,"ACKNOWLEDGEMENT (")){
+				else if(strstr(alert_level,"ACKNOWLEDGEMENT")){
+					strcpy(alert_level,"障害認知状態(ACKNOWLEDGEMENT)");
 					notification_detail_type=NOTIFICATION_SERVICE_ACK;
 					strcpy(alert_level_class,"ACKNOWLEDGEMENT");
 				        }
-				else if(strstr(alert_level,"FLAPPINGSTART (")){
-					strcpy(alert_level,"FLAPPING START");
+				else if(strstr(alert_level,"FLAPPINGSTART")){
+					strcpy(alert_level,"フラッピング開始");
 					notification_detail_type=NOTIFICATION_SERVICE_FLAP;
 					strcpy(alert_level_class,"UNKNOWN");
 				        }
-				else if(strstr(alert_level,"FLAPPINGSTOP (")){
-					strcpy(alert_level,"FLAPPING STOP");
+				else if(strstr(alert_level,"FLAPPINGSTOP)")){
+					strcpy(alert_level,"フラッピング停止");
 					notification_detail_type=NOTIFICATION_SERVICE_FLAP;
 					strcpy(alert_level_class,"UNKNOWN");
 				        }
 				else{
-					strcpy(alert_level,"UNKNOWN");
+					strcpy(alert_level,"不明(UNKNOWN)");
 					notification_detail_type=NOTIFICATION_SERVICE_UNKNOWN;
 					strcpy(alert_level_class,"UNKNOWN");
 				        }
@@ -644,17 +648,17 @@
 			else{
 
 				if(!strcmp(alert_level,"DOWN")){
-					strncpy(alert_level,"HOST DOWN",sizeof(alert_level));
+					strncpy(alert_level,"ホストの停止状態(DOWN)",sizeof(alert_level));
 					strcpy(alert_level_class,"HOSTDOWN");
 					notification_detail_type=NOTIFICATION_HOST_DOWN;
 				        }
 				else if(!strcmp(alert_level,"UNREACHABLE")){
-					strncpy(alert_level,"HOST UNREACHABLE",sizeof(alert_level));
+					strncpy(alert_level,"ホストの未到達状態(UNREACHABLE)",sizeof(alert_level));
 					strcpy(alert_level_class,"HOSTUNREACHABLE");
 					notification_detail_type=NOTIFICATION_HOST_UNREACHABLE;
 				        }
 				else if(!strcmp(alert_level,"RECOVERY") || !strcmp(alert_level,"UP")){
-					strncpy(alert_level,"HOST UP",sizeof(alert_level));
+					strncpy(alert_level,"ホストの稼働状態(UP)",sizeof(alert_level));
 					strcpy(alert_level_class,"HOSTUP");
 					notification_detail_type=NOTIFICATION_HOST_RECOVERY;
 				        }
@@ -663,16 +667,17 @@
 					notification_detail_type=NOTIFICATION_HOST_CUSTOM;
 				        }
 				else if(strstr(alert_level,"ACKNOWLEDGEMENT (")){
+					strcpy(alert_level,"ホストの障害認知状態(ACKNOWLEDGEMENT)");
 					strcpy(alert_level_class,"HOSTACKNOWLEDGEMENT");
 					notification_detail_type=NOTIFICATION_HOST_ACK;
 				        }
 				else if(strstr(alert_level,"FLAPPINGSTART (")){
-					strcpy(alert_level,"FLAPPING START");
+					strcpy(alert_level,"フラッピング開始");
 					strcpy(alert_level_class,"UNKNOWN");
 					notification_detail_type=NOTIFICATION_HOST_FLAP;
 				        }
 				else if(strstr(alert_level,"FLAPPINGSTOP (")){
-					strcpy(alert_level,"FLAPPING STOP");
+					strcpy(alert_level,"フラッピング停止");
 					strcpy(alert_level_class,"UNKNOWN");
 					notification_detail_type=NOTIFICATION_HOST_FLAP;
 				        }
@@ -769,16 +774,18 @@
 	printf("</p>\n");
 
 	if(total_notifications==0){
-		printf("<P><DIV CLASS='errorMessage'>No notifications have been recorded");
+		printf("<P><DIV CLASS='errorMessage'>");
 		if(find_all==FALSE){
 			if(query_type==FIND_SERVICE)
-				printf(" for this service");
+				printf("このサービスの");
 			else if(query_type==FIND_CONTACT)
-				printf(" for this contact");
+				printf("この通知先の");
 			else
-				printf(" for this host");
+				printf("このホストの");
 		        }
-		printf(" in %s log file</DIV></P>",(log_archive==0)?"the current":"this archived");
+		printf("通知履歴");
+		printf("は%sのログの中には",(log_archive==0)?"現在":"このアーカイブ");
+		printf("見あたりません。</DIV></P>\n");
 	        }
 
 	free(input);
diff -urN nagios-3.2.3.orig/cgi/outages.c nagios-3.2.3/cgi/outages.c
--- nagios-3.2.3.orig/cgi/outages.c	2008-12-01 02:22:58.000000000 +0900
+++ nagios-3.2.3/cgi/outages.c	2010-12-12 19:59:07.000000000 +0900
@@ -160,7 +160,7 @@
 
 		/* left column of the first row */
 		printf("<td align=left valign=top width=33%%>\n");
-		display_info_table("Network Outages",TRUE,&current_authdata);
+		display_info_table("ネットワーク障害",TRUE,&current_authdata);
 		printf("</td>\n");
 
 		/* middle column of top row */
@@ -223,8 +223,9 @@
 	printf("<html>\n");
 	printf("<head>\n");
 	printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
+	printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
 	printf("<title>\n");
-	printf("Network Outages\n");
+	printf("ネットワーク障害\n");
 	printf("</title>\n");
 
 	if(use_stylesheet==TRUE){
@@ -315,6 +316,8 @@
 	int odd=0;
 	char *bg_class="";
 	char *status="";
+	/* ステータスを日本語表記にするために追加 sato */
+	char *string="";
 	int days;
 	int hours;
 	int minutes;
@@ -328,9 +331,8 @@
 	/* user must be authorized for all hosts.. */
 	if(is_authorized_for_all_hosts(&current_authdata)==FALSE){
 
-		printf("<P><DIV CLASS='errorMessage'>It appears as though you do not have permission to view information you requested...</DIV></P>\n");
-		printf("<P><DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-		printf("and check the authorization options in your CGI configuration file.</DIV></P>\n");
+		printf("<P><DIV CLASS='errorMessage'>要求したリクエストを閲覧する権限が無いようです。</DIV></P>\n");
+		printf("<P><DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください。</DIV></P>\n");
 
 		return;
 	        }
@@ -353,11 +355,11 @@
 
 	/* display the problem hosts... */
 	printf("<P><DIV ALIGN=CENTER>\n");
-	printf("<DIV CLASS='dataTitle'>Blocking Outages</DIV>\n");
+	printf("<DIV CLASS='dataTitle'>ネットワーク障害</DIV>\n");
 
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
 	printf("<TR>\n");
-	printf("<TH CLASS='data'>Severity</TH><TH CLASS='data'>Host</TH><TH CLASS='data'>State</TH><TH CLASS='data'>Notes</TH><TH CLASS='data'>State Duration</TH><TH CLASS='data'># Hosts Affected</TH><TH CLASS='data'># Services Affected</TH><TH CLASS='data'>Actions</TH>\n");
+	printf("<TH CLASS='data'>障害規模</TH><TH CLASS='data'>ホスト</TH><TH CLASS='data'>ステータス</TH><TH CLASS='data'>メモ</TH><TH CLASS='data'>経過時間</TH><TH CLASS='data'>影響するホスト数</TH><TH CLASS='data'>影響するサービス数</TH><TH CLASS='data'>アクション</TH>\n");
 	printf("</TR>\n");
 
 	for(temp_hostoutagesort=hostoutagesort_list;temp_hostoutagesort!=NULL;temp_hostoutagesort=temp_hostoutagesort->next){
@@ -389,20 +391,26 @@
 			bg_class="dataEven";
 		        }
 
-		if(temp_hoststatus->status==HOST_UNREACHABLE)
+		if(temp_hoststatus->status==HOST_UNREACHABLE){
 			status="UNREACHABLE";
-		else if(temp_hoststatus->status==HOST_DOWN)
+			/* sato */
+			string="未到達(UNREACHABLE)";
+		}
+		else if(temp_hoststatus->status==HOST_DOWN){
 			status="DOWN";
+			/* sato */
+			string="停止(DOWN)";
+		}
 
 		printf("<TR CLASS='%s'>\n",bg_class);
 
 		printf("<TD CLASS='%s'>%d</TD>\n",bg_class,temp_hostoutage->severity);
 		printf("<TD CLASS='%s'><A HREF='%s?type=%d&host=%s'>%s</A></TD>\n",bg_class,EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_hostoutage->hst->name),temp_hostoutage->hst->name);
-		printf("<TD CLASS='host%s'>%s</TD>\n",status,status);
+		printf("<TD CLASS='host%s'>%s</TD>\n",status,string);
 
 		total_comments=number_of_host_comments(temp_hostoutage->hst->name);
 		if(total_comments>0){
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"This host has %d comment%s associated with it",total_comments,(total_comments==1)?"":"s");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"このホストには %d 個のコメントがあります",total_comments);
 			temp_buffer[sizeof(temp_buffer)-1]='\x0';
 			printf("<TD CLASS='%s'><A HREF='%s?type=%d&host=%s#comments'><IMG SRC='%s%s' BORDER=0 ALT='%s' TITLE='%s'></A></TD>\n",bg_class,EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_hostoutage->hst->name),url_images_path,COMMENT_ICON,temp_buffer,temp_buffer);
 		        }
@@ -417,7 +425,7 @@
 		else
 			t=current_time-temp_hoststatus->last_state_change;
 		get_time_breakdown((unsigned long)t,&days,&hours,&minutes,&seconds);
-		snprintf(state_duration,sizeof(state_duration)-1,"%2dd %2dh %2dm %2ds%s",days,hours,minutes,seconds,(temp_hoststatus->last_state_change==(time_t)0)?"+":"");
+		snprintf(state_duration,sizeof(state_duration)-1,"%2d日間と %2d時間 %2d分 %2d秒",days,hours,minutes,seconds,(temp_hoststatus->last_state_change==(time_t)0)?"+":"");
 		state_duration[sizeof(state_duration)-1]='\x0';
 		printf("<TD CLASS='%s'>%s</TD>\n",bg_class,state_duration);
 
@@ -425,18 +433,18 @@
 		printf("<TD CLASS='%s'>%d</TD>\n",bg_class,temp_hostoutage->affected_child_services);
 
 		printf("<TD CLASS='%s'>",bg_class);
-		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='View status detail for this host' TITLE='View status detail for this host'></A>\n",STATUS_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,STATUS_DETAIL_ICON);
+		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='このホストのステータス詳細を見る' TITLE='このホストのステータス詳細を見る'></A>\n",STATUS_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,STATUS_DETAIL_ICON);
 #ifdef USE_STATUSMAP
-		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='View status map for this host and its children' TITLE='View status map for this host and its children'></A>\n",STATUSMAP_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,STATUSMAP_ICON);
+		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='このホスト及び、下位ホストの3-Dステータスマップを見る' TITLE='このホスト及び、下位ホストの3-Dステータスマップを見る'></A>\n",STATUSMAP_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,STATUSMAP_ICON);
 #endif
 #ifdef USE_STATUSWRL
-		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='View 3-D status map for this host and its children' TITLE='View 3-D status map for this host and its children'></A>\n",STATUSWORLD_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,STATUSWORLD_ICON);
+		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='このホスト及び、下位ホストの3-Dステータスマップを見る' TITLE='このホスト及び、下位ホストの3-Dステータスマップを見る'></A>\n",STATUSWORLD_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,STATUSWORLD_ICON);
 #endif
 #ifdef USE_TRENDS
-		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='View trends for this host' TITLE='View trends for this host'></A>\n",TRENDS_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,TRENDS_ICON);
+		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='このホストの傾向を見る' TITLE='このホストの傾向を見る'></A>\n",TRENDS_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,TRENDS_ICON);
 #endif
-		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='View alert history for this host' TITLE='View alert history for this host'></A>\n",HISTORY_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,HISTORY_ICON);
-		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='View notifications for this host' TITLE='View notifications for this host'></A>\n",NOTIFICATIONS_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,NOTIFICATION_ICON);
+		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='このホストの警報履歴を見る' TITLE='このホストの警報履歴を見る'></A>\n",HISTORY_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,HISTORY_ICON);
+		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 ALT='このホストの通知履歴を見る' TITLE='このホストの通知履歴を見る'></A>\n",NOTIFICATIONS_CGI,url_encode(temp_hostoutage->hst->name),url_images_path,NOTIFICATION_ICON);
 		printf("</TD>\n");
 
 		printf("</TR>\n");
@@ -447,7 +455,7 @@
 	printf("</DIV></P>\n");
 
 	if(total_entries==0)
-		printf("<DIV CLASS='itemTotalsTitle'>%d Blocking Outages Displayed</DIV>\n",total_entries);
+		printf("<DIV CLASS='itemTotalsTitle'>%d件のネットワーク障害を表示しています</DIV>\n",total_entries);
 
 	/* free memory allocated to the host outage list */
 	free_hostoutage_list();
diff -urN nagios-3.2.3.orig/cgi/showlog.c nagios-3.2.3/cgi/showlog.c
--- nagios-3.2.3.orig/cgi/showlog.c	2008-12-01 02:22:58.000000000 +0900
+++ nagios-3.2.3/cgi/showlog.c	2010-12-12 19:59:07.000000000 +0900
@@ -115,7 +115,7 @@
 
 		/* left column of top table - info box */
 		printf("<td align=left valign=top width=33%%>\n");
-		display_info_table((log_rotation_method==LOG_ROTATION_NONE || log_archive==0)?"Current Event Log":"Archived Event Log",FALSE,&current_authdata);
+		display_info_table((log_rotation_method==LOG_ROTATION_NONE || log_archive==0)?"現在のイベントログ":"アーカイブしたイベントログ",FALSE,&current_authdata);
 		printf("</td>\n");
 
 		/* middle column of top table - log file navigation options */
@@ -132,10 +132,10 @@
 		printf("<form method='GET' action='%s'>\n",SHOWLOG_CGI);
 		printf("<input type='hidden' name='archive' value='%d'>\n",log_archive);
 		printf("<tr>");
-		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='checkbox' name='oldestfirst' %s> Older Entries First:</td>",(use_lifo==FALSE)?"checked":"");
+		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='checkbox' name='oldestfirst' %s> 古いものを先頭にする:</td>",(use_lifo==FALSE)?"checked":"");
 		printf("</tr>\n");
 		printf("<tr>");
-		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='submit' value='Update'></td>\n");
+		printf("<td align=left valign=bottom CLASS='optBoxItem'><input type='submit' value='更新'></td>\n");
 		printf("</tr>\n");
 
 		/* display context-sensitive help */
@@ -196,8 +196,10 @@
 	printf("<HTML>\n");
 	printf("<HEAD>\n");
 	printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
+	printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
+	printf("<meta http-equiv='Pragma' content='no-cache'>\n");
 	printf("<TITLE>\n");
-	printf("Nagios Log File\n");
+	printf("ログファイル\n");
 	printf("</TITLE>\n");
 
 	if(use_stylesheet==TRUE){
@@ -310,8 +312,8 @@
 	/* check to see if the user is authorized to view the log file */
 	if(is_authorized_for_system_information(&current_authdata)==FALSE){
 		printf("<HR>\n");
-		printf("<DIV CLASS='errorMessage'>It appears as though you do not have permission to view the log file...</DIV><br><br>\n");
-		printf("<DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>and check the authorization options in your CGI configuration file.</DIV>\n");
+		printf("<DIV CLASS='errorMessage'>ログファイルを閲覧する権限が無いようです。</DIV><br><br>\n");
+		printf("<DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください。</DIV>\n");
 		printf("<HR>\n");
 		return ERROR;
 	        }
@@ -322,7 +324,7 @@
 		error=read_file_into_lifo(log_file_to_use);
 		if(error!=LIFO_OK){
 			if(error==LIFO_ERROR_MEMORY){
-				printf("<P><DIV CLASS='warningMessage'>Not enough memory to reverse log file - displaying log in natural order...</DIV></P>");
+				printf("<P><DIV CLASS='warningMessage'>ログを逆順にするために必要なメモリが不足しているため通常の順番で表示しています。</DIV></P>");
 				error=FALSE;
 			        }
 			else
@@ -337,7 +339,7 @@
   
 		if((thefile=mmap_fopen(log_file_to_use))==NULL){
 			printf("<HR>\n");
-			printf("<P><DIV CLASS='errorMessage'>Error: Could not open log file '%s' for reading!</DIV></P>",log_file_to_use);
+			printf("<P><DIV CLASS='errorMessage'>エラー: ログファイル'%s'が読み込めません。</DIV></P>",log_file_to_use);
 			printf("<HR>\n");
 			error=TRUE;
 	                }
@@ -426,11 +428,11 @@
 			        }
 			else if(strstr(input,"PASSIVE SERVICE CHECK:")){
 				strcpy(image,PASSIVE_ICON);
-				strcpy(image_alt,"Passive Service Check");
+				strcpy(image_alt,"パッシブサービスチェック");
 			        }
 			else if(strstr(input,"PASSIVE HOST CHECK:")){
 				strcpy(image,PASSIVE_ICON);
-				strcpy(image_alt,"Passive Host Check");
+				strcpy(image_alt,"パッシブホストチェック");
 			        }
 			else if(strstr(input,"LOG ROTATION:")){
 				strcpy(image,LOG_ROTATION_ICON);
diff -urN nagios-3.2.3.orig/cgi/status.c nagios-3.2.3/cgi/status.c
--- nagios-3.2.3.orig/cgi/status.c	2010-12-12 00:47:55.000000000 +0900
+++ nagios-3.2.3/cgi/status.c	2010-12-12 19:59:07.000000000 +0900
@@ -312,50 +312,50 @@
 		printf("<td align=left valign=top width=33%%>\n");
 
 		/* info table */
-		display_info_table("Current Network Status",TRUE,&current_authdata);
+		display_info_table("現在のネットワーク状態",TRUE,&current_authdata);
 
 		printf("<TABLE BORDER=1 CELLPADDING=0 CELLSPACING=0 CLASS='linkBox'>\n");
 		printf("<TR><TD CLASS='linkBox'>\n");
 
 		if(display_type==DISPLAY_HOSTS){
-			printf("<a href='%s?host=%s'>View History For %s</a><br>\n",HISTORY_CGI,(show_all_hosts==TRUE)?"all":url_encode(host_name),(show_all_hosts==TRUE)?"all hosts":"This Host");
-			printf("<a href='%s?host=%s'>View Notifications For %s</a>\n",NOTIFICATIONS_CGI,(show_all_hosts==TRUE)?"all":url_encode(host_name),(show_all_hosts==TRUE)?"All Hosts":"This Host");
+			printf("<a href='%s?host=%s'>%sの履歴を見る</a><br>\n",HISTORY_CGI,(show_all_hosts==TRUE)?"all":url_encode(host_name),(show_all_hosts==TRUE)?"全ホスト":"このホスト");
+			printf("<a href='%s?host=%s'>%sの通知履歴を見る</a>\n",NOTIFICATIONS_CGI,(show_all_hosts==TRUE)?"all":url_encode(host_name),(show_all_hosts==TRUE)?"全ホスト":"このホスト");
 			if(show_all_hosts==FALSE)
-				printf("<br><a href='%s?host=all'>View Service Status Detail For All Hosts</a>\n",STATUS_CGI);
+				printf("<br><a href='%s?host=all'>全ホストのサービス稼動状態を見る</a>\n",STATUS_CGI);
 			else
-				printf("<br><a href='%s?hostgroup=all&style=hostdetail'>View Host Status Detail For All Hosts</a>\n",STATUS_CGI);
+				printf("<br><a href='%s?hostgroup=all&style=hostdetail'>全ホストのホスト稼動状態を見る</a>\n",STATUS_CGI);
 	                }
 		else if(display_type==DISPLAY_SERVICEGROUPS){
 			if(show_all_servicegroups==FALSE){
 
 				if(group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_GRID || group_style_type==STYLE_SUMMARY)
-					printf("<a href='%s?servicegroup=%s&style=detail'>View Service Status Detail For This Service Group</a><br>\n",STATUS_CGI,url_encode(servicegroup_name));
+					printf("<a href='%s?servicegroup=%s&style=detail'>このサービスグループのサービス稼動状態を見る</a><br>\n",STATUS_CGI,url_encode(servicegroup_name));
 				if(group_style_type==STYLE_DETAIL || group_style_type==STYLE_GRID || group_style_type==STYLE_SUMMARY)
-					printf("<a href='%s?servicegroup=%s&style=overview'>View Status Overview For This Service Group</a><br>\n",STATUS_CGI,url_encode(servicegroup_name));
+					printf("<a href='%s?servicegroup=%s&style=overview'>このサービスグループのステータスオーバービューを見る</a><br>\n",STATUS_CGI,url_encode(servicegroup_name));
 				if(group_style_type==STYLE_DETAIL || group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_GRID)
-					printf("<a href='%s?servicegroup=%s&style=summary'>View Status Summary For This Service Group</a><br>\n",STATUS_CGI,url_encode(servicegroup_name));
+					printf("<a href='%s?servicegroup=%s&style=summary'>このサービスグループのステータスサマリを見る</a><br>\n",STATUS_CGI,url_encode(servicegroup_name));
 				if(group_style_type==STYLE_DETAIL || group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_SUMMARY)
-					printf("<a href='%s?servicegroup=%s&style=grid'>View Service Status Grid For This Service Group</a><br>\n",STATUS_CGI,url_encode(servicegroup_name));
+					printf("<a href='%s?servicegroup=%s&style=grid'>このサービスグループのステータスグリッドを見る</a><br>\n",STATUS_CGI,url_encode(servicegroup_name));
 
 				if(group_style_type==STYLE_DETAIL)
-					printf("<a href='%s?servicegroup=all&style=detail'>View Service Status Detail For All Service Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?servicegroup=all&style=detail'>全ホストグループのサービス稼動状態を見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_OVERVIEW)
-					printf("<a href='%s?servicegroup=all&style=overview'>View Status Overview For All Service Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?servicegroup=all&style=overview'>全ホストグループのステータスオーバービューを見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_SUMMARY)
-					printf("<a href='%s?servicegroup=all&style=summary'>View Status Summary For All Service Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?servicegroup=all&style=summary'>全サービスグループのステータスサマリを見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_GRID)
-					printf("<a href='%s?servicegroup=all&style=grid'>View Service Status Grid For All Service Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?servicegroup=all&style=grid'>全サービスグループのステータスグリッドを見る</a><br>\n",STATUS_CGI);
 
 			        }
 			else{
 				if(group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_GRID || group_style_type==STYLE_SUMMARY)
-					printf("<a href='%s?servicegroup=all&style=detail'>View Service Status Detail For All Service Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?servicegroup=all&style=detail'>全サービスグループのサービス稼動状態を見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_DETAIL || group_style_type==STYLE_GRID || group_style_type==STYLE_SUMMARY)
-					printf("<a href='%s?servicegroup=all&style=overview'>View Status Overview For All Service Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?servicegroup=all&style=overview'>全サービスグループのステータスオーバービューを見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_DETAIL || group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_GRID)
-					printf("<a href='%s?servicegroup=all&style=summary'>View Status Summary For All Service Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?servicegroup=all&style=summary'>全サービスグループのステータスサマリを見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_DETAIL || group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_SUMMARY)
-					printf("<a href='%s?servicegroup=all&style=grid'>View Service Status Grid For All Service Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?servicegroup=all&style=grid'>全サービスグループのステータスグリッドを見る</a><br>\n",STATUS_CGI);
 			        }
 		
 		        }
@@ -363,38 +363,38 @@
 			if(show_all_hostgroups==FALSE){
 
 				if(group_style_type==STYLE_DETAIL)
-					printf("<a href='%s?hostgroup=all&style=detail'>View Service Status Detail For All Host Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?hostgroup=all&style=detail'>全ホストグループのサービス稼動状態を見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_HOST_DETAIL)
-					printf("<a href='%s?hostgroup=all&style=hostdetail'>View Host Status Detail For All Host Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?hostgroup=all&style=hostdetail'>全ホストグループのホスト稼動状態を見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_OVERVIEW)
-					printf("<a href='%s?hostgroup=all&style=overview'>View Status Overview For All Host Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?hostgroup=all&style=overview'>全ホストグループのステータスオーバービューを見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_SUMMARY)
-					printf("<a href='%s?hostgroup=all&style=summary'>View Status Summary For All Host Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?hostgroup=all&style=summary'>全ホストグループのステータスサマリを見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_GRID)
-					printf("<a href='%s?hostgroup=all&style=grid'>View Status Grid For All Host Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?hostgroup=all&style=grid'>全ホストグループのステータスグリッドを見る</a><br>\n",STATUS_CGI);
 
 				if(group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_SUMMARY || group_style_type==STYLE_GRID || group_style_type==STYLE_HOST_DETAIL)
-					printf("<a href='%s?hostgroup=%s&style=detail'>View Service Status Detail For This Host Group</a><br>\n",STATUS_CGI,url_encode(hostgroup_name));
+					printf("<a href='%s?hostgroup=%s&style=detail'>このホストグループサービス稼動状態を見る</a><br>\n",STATUS_CGI,url_encode(hostgroup_name));
 				if(group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_DETAIL || group_style_type==STYLE_SUMMARY || group_style_type==STYLE_GRID)
-					printf("<a href='%s?hostgroup=%s&style=hostdetail'>View Host Status Detail For This Host Group</a><br>\n",STATUS_CGI,url_encode(hostgroup_name));
+					printf("<a href='%s?hostgroup=%s&style=hostdetail'>このホストグループのホスト稼動状態を見る</a><br>\n",STATUS_CGI,url_encode(hostgroup_name));
 				if(group_style_type==STYLE_DETAIL || group_style_type==STYLE_SUMMARY || group_style_type==STYLE_GRID || group_style_type==STYLE_HOST_DETAIL)
-					printf("<a href='%s?hostgroup=%s&style=overview'>View Status Overview For This Host Group</a><br>\n",STATUS_CGI,url_encode(hostgroup_name));
+					printf("<a href='%s?hostgroup=%s&style=overview'>このホストグループのステータスオーバービューを見る</a><br>\n",STATUS_CGI,url_encode(hostgroup_name));
 				if(group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_DETAIL || group_style_type==STYLE_GRID || group_style_type==STYLE_HOST_DETAIL)
-					printf("<a href='%s?hostgroup=%s&style=summary'>View Status Summary For This Host Group</a><br>\n",STATUS_CGI,url_encode(hostgroup_name));
+					printf("<a href='%s?hostgroup=%s&style=summary'>このホストグループのステータスサマリを見る</a><br>\n",STATUS_CGI,url_encode(hostgroup_name));
 				if(group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_DETAIL || group_style_type==STYLE_SUMMARY || group_style_type==STYLE_HOST_DETAIL)
-					printf("<a href='%s?hostgroup=%s&style=grid'>View Status Grid For This Host Group</a><br>\n",STATUS_CGI,url_encode(hostgroup_name));
+					printf("<a href='%s?hostgroup=%s&style=grid'>このホストグループのステータスグリッドを見る</a><br>\n",STATUS_CGI,url_encode(hostgroup_name));
 		                }
 			else{
 				if(group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_SUMMARY || group_style_type==STYLE_GRID || group_style_type==STYLE_HOST_DETAIL)
-					printf("<a href='%s?hostgroup=all&style=detail'>View Service Status Detail For All Host Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?hostgroup=all&style=detail'>全ホストグループのサービス稼動状態を見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_DETAIL || group_style_type==STYLE_SUMMARY || group_style_type==STYLE_GRID)
-					printf("<a href='%s?hostgroup=all&style=hostdetail'>View Host Status Detail For All Host Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?hostgroup=all&style=hostdetail'>全ホストグループのホスト稼動状態を見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_DETAIL || group_style_type==STYLE_SUMMARY || group_style_type==STYLE_GRID || group_style_type==STYLE_HOST_DETAIL)
-					printf("<a href='%s?hostgroup=all&style=overview'>View Status Overview For All Host Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?hostgroup=all&style=overview'>全ホストグループのステータスオーバービューを見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_DETAIL || group_style_type==STYLE_GRID || group_style_type==STYLE_HOST_DETAIL)
-					printf("<a href='%s?hostgroup=all&style=summary'>View Status Summary For All Host Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?hostgroup=all&style=summary'>全ホストグループのステータスサマリを見る</a><br>\n",STATUS_CGI);
 				if(group_style_type==STYLE_OVERVIEW || group_style_type==STYLE_DETAIL || group_style_type==STYLE_SUMMARY || group_style_type==STYLE_HOST_DETAIL)
-					printf("<a href='%s?hostgroup=all&style=grid'>View Status Grid For All Host Groups</a><br>\n",STATUS_CGI);
+					printf("<a href='%s?hostgroup=all&style=grid'>全ホストグループのステータスグリッドを見る</a><br>\n",STATUS_CGI);
 		                }
 	                }
 
@@ -532,8 +532,10 @@
 	printf("<html>\n");
 	printf("<head>\n");
 	printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
+	printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
+	printf("<meta http-equiv='Pragma' content='no-cache'>\n");
 	printf("<title>\n");
-	printf("Current Network Status\n");
+	printf("現在のサービス稼動状態\n");
 	printf("</title>\n");
 
 	if(use_stylesheet==TRUE){
@@ -840,7 +842,7 @@
 	total_problems=total_unknown+total_warning+total_critical;
 
 
-	printf("<DIV CLASS='serviceTotals'>Service Status Totals</DIV>\n");
+	printf("<DIV CLASS='serviceTotals'>サービス稼動状態の概況</DIV>\n");
 
 	printf("<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0>\n");
 	printf("<TR><TD>\n");
@@ -858,7 +860,7 @@
 		printf("hostgroup=%s&style=detail",url_encode(hostgroup_name));
 	printf("&servicestatustypes=%d",SERVICE_OK);
 	printf("&hoststatustypes=%d'>",host_status_types);
-	printf("Ok</A></TH>\n");
+	printf("正常(OK)</A></TH>\n");
 
 	printf("<TH CLASS='serviceTotals'>");
 	printf("<A CLASS='serviceTotals' HREF='%s?",STATUS_CGI);
@@ -870,7 +872,7 @@
 		printf("hostgroup=%s&style=detail",url_encode(hostgroup_name));
 	printf("&servicestatustypes=%d",SERVICE_WARNING);
 	printf("&hoststatustypes=%d'>",host_status_types);
-	printf("Warning</A></TH>\n");
+	printf("警告(WARNING)</A></TH>\n");
 
 	printf("<TH CLASS='serviceTotals'>");
 	printf("<A CLASS='serviceTotals' HREF='%s?",STATUS_CGI);
@@ -882,7 +884,7 @@
 		printf("hostgroup=%s&style=detail",url_encode(hostgroup_name));
 	printf("&servicestatustypes=%d",SERVICE_UNKNOWN);
 	printf("&hoststatustypes=%d'>",host_status_types);
-	printf("Unknown</A></TH>\n");
+	printf("不明(UNKNOWN)</A></TH>\n");
 
 	printf("<TH CLASS='serviceTotals'>");
 	printf("<A CLASS='serviceTotals' HREF='%s?",STATUS_CGI);
@@ -894,7 +896,7 @@
 		printf("hostgroup=%s&style=detail",url_encode(hostgroup_name));
 	printf("&servicestatustypes=%d",SERVICE_CRITICAL);
 	printf("&hoststatustypes=%d'>",host_status_types);
-	printf("Critical</A></TH>\n");
+	printf("異常(CRITICAL)</A></TH>\n");
 
 	printf("<TH CLASS='serviceTotals'>");
 	printf("<A CLASS='serviceTotals' HREF='%s?",STATUS_CGI);
@@ -906,7 +908,7 @@
 		printf("hostgroup=%s&style=detail",url_encode(hostgroup_name));
 	printf("&servicestatustypes=%d",SERVICE_PENDING);
 	printf("&hoststatustypes=%d'>",host_status_types);
-	printf("Pending</A></TH>\n");
+	printf("保留(PENDING)</A></TH>\n");
 
 	printf("</TR>\n");
 
@@ -947,7 +949,7 @@
 		printf("hostgroup=%s&style=detail",url_encode(hostgroup_name));
 	printf("&servicestatustypes=%d",SERVICE_UNKNOWN|SERVICE_WARNING|SERVICE_CRITICAL);
 	printf("&hoststatustypes=%d'>",host_status_types);
-	printf("<I>All Problems</I></A></TH>\n");
+	printf("<I>全障害</I></A></TH>\n");
 
 	printf("<TH CLASS='serviceTotals'>");
 	printf("<A CLASS='serviceTotals' HREF='%s?",STATUS_CGI);
@@ -958,7 +960,7 @@
 	else
 		printf("hostgroup=%s&style=detail",url_encode(hostgroup_name));
 	printf("&hoststatustypes=%d'>",host_status_types);
-	printf("<I>All Types</I></A></TH>\n");
+	printf("<I>全タイプ</I></A></TH>\n");
 
 
 	printf("</TR><TR>\n");
@@ -1052,7 +1054,7 @@
 	total_hosts=total_up+total_down+total_unreachable+total_pending;
 	total_problems=total_down+total_unreachable;
 
-	printf("<DIV CLASS='hostTotals'>Host Status Totals</DIV>\n");
+	printf("<DIV CLASS='hostTotals'>ホスト稼動状態の概況</DIV>\n");
 
 	printf("<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0>\n");
 	printf("<TR><TD>\n");
@@ -1077,7 +1079,7 @@
 	if(service_status_types!=all_service_status_types)
 		printf("&servicestatustypes=%d",service_status_types);
 	printf("&hoststatustypes=%d'>",HOST_UP);
-	printf("Up</A></TH>\n");
+	printf("稼働(UP)</A></TH>\n");
 
 	printf("<TH CLASS='hostTotals'>");
 	printf("<A CLASS='hostTotals' HREF='%s?",STATUS_CGI);
@@ -1095,7 +1097,7 @@
 	if(service_status_types!=all_service_status_types)
 		printf("&servicestatustypes=%d",service_status_types);
 	printf("&hoststatustypes=%d'>",HOST_DOWN);
-	printf("Down</A></TH>\n");
+	printf("停止(DOWN)</A></TH>\n");
 
 	printf("<TH CLASS='hostTotals'>");
 	printf("<A CLASS='hostTotals' HREF='%s?",STATUS_CGI);
@@ -1113,7 +1115,7 @@
 	if(service_status_types!=all_service_status_types)
 		printf("&servicestatustypes=%d",service_status_types);
 	printf("&hoststatustypes=%d'>",HOST_UNREACHABLE);
-	printf("Unreachable</A></TH>\n");
+	printf("未到達(UNREACHABLE)</A></TH>\n");
 
 	printf("<TH CLASS='hostTotals'>");
 	printf("<A CLASS='hostTotals' HREF='%s?",STATUS_CGI);
@@ -1131,7 +1133,7 @@
 	if(service_status_types!=all_service_status_types)
 		printf("&servicestatustypes=%d",service_status_types);
 	printf("&hoststatustypes=%d'>",HOST_PENDING);
-	printf("Pending</A></TH>\n");
+	printf("保留(PENDING)</A></TH>\n");
 
 	printf("</TR>\n");
 
@@ -1174,7 +1176,7 @@
 	if(service_status_types!=all_service_status_types)
 		printf("&servicestatustypes=%d",service_status_types);
 	printf("&hoststatustypes=%d'>",HOST_DOWN|HOST_UNREACHABLE);
-	printf("<I>All Problems</I></A></TH>\n");
+	printf("<I>全障害</I></A></TH>\n");
 
 	printf("<TH CLASS='hostTotals'>");
 	printf("<A CLASS='hostTotals' HREF='%s?",STATUS_CGI);
@@ -1192,7 +1194,7 @@
 	if(service_status_types!=all_service_status_types)
 		printf("&servicestatustypes=%d",service_status_types);
 	printf("'>");
-	printf("<I>All Types</I></A></TH>\n");
+	printf("<I>全タイプ</I></A></TH>\n");
 
 	printf("</TR><TR>\n");
 
@@ -1278,47 +1280,48 @@
 
 	printf("<td valign=top align=center width=33%%>\n");
 
-	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>Service Status Details For ");
+	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>");
 	if(display_type==DISPLAY_HOSTS){
 		if(show_all_hosts==TRUE)
-			printf("All Hosts");
+			printf("全ホスト");
 		else
-			printf("Host '%s'",host_name);
+			printf("ホスト '%s'",host_name);
 	        }
 	else if(display_type==DISPLAY_SERVICEGROUPS){
 		if(show_all_servicegroups==TRUE)
-			printf("All Service Groups");
+			printf("全サービスグループ");
 		else
-			printf("Service Group '%s'",url_encode(servicegroup_name));
+			printf("サービスグループ '%s'",url_encode(servicegroup_name));
 	        }
 	else{
 		if(show_all_hostgroups==TRUE)
-			printf("All Host Groups");
+			printf("全ホストグループ");
 		else
-			printf("Host Group '%s'",hostgroup_name);
+			printf("ホストグループ '%s' ",hostgroup_name);
 	        }
+	printf("の稼動状態");
 	printf("</DIV>\n");
 
 	if(use_sort==TRUE){
-		printf("<DIV ALIGN=CENTER CLASS='statusSort'>Entries sorted by <b>");
+		printf("<DIV ALIGN=CENTER CLASS='statusSort'>エントリの並び替え順:<b>");
 		if(sort_option==SORT_HOSTNAME)
-			printf("host name");
+			printf("ホスト名");
 		else if(sort_option==SORT_SERVICENAME)
-			printf("service name");
+			printf("サービス名");
 		else if(sort_option==SORT_SERVICESTATUS)
-			printf("service status");
+			printf("サービスの状態");
 		else if(sort_option==SORT_LASTCHECKTIME)
-			printf("last check time");
+			printf("最終チェック時刻");
 		else if(sort_option==SORT_CURRENTATTEMPT)
-			printf("attempt number");
+			printf("警告数");
 		else if(sort_option==SORT_STATEDURATION)
-			printf("state duration");
-		printf("</b> (%s)\n",(sort_type==SORT_ASCENDING)?"ascending":"descending");
+			printf("経過時間");
+		printf("</b> (%s)\n",(sort_type==SORT_ASCENDING)?"昇順":"降順");
 		printf("</DIV>\n");
 	        }
 
 	if(service_filter!=NULL)
-		printf("<DIV ALIGN=CENTER CLASS='statusSort'>Filtered By Services Matching \'%s\'</DIV>",service_filter);
+		printf("<DIV ALIGN=CENTER CLASS='statusSort'>サービス名に \'%s\' を含むサービスを表示しています</DIV>",service_filter);
 
 	printf("<br>");
 
@@ -1373,19 +1376,21 @@
 	printf("<TABLE BORDER=0 width=100%% CLASS='status'>\n");
 	printf("<TR>\n");
 
-	printf("<TH CLASS='status'>Host&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by host name (ascending)' TITLE='Sort by host name (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by host name (descending)' TITLE='Sort by host name (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_HOSTNAME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_HOSTNAME,url_images_path,DOWN_ARROW_ICON);
-
-	printf("<TH CLASS='status'>Service&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by service name (ascending)' TITLE='Sort by service name (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by service name (descending)' TITLE='Sort by service name (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_SERVICENAME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_SERVICENAME,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='status'>ホスト名&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='ホスト名で並び替え(昇順)' TITLE='ホスト名で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='ホスト名で並び替え(降順)' TITLE='ホスト名で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_HOSTNAME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_HOSTNAME,url_images_path,DOWN_ARROW_ICON);
+	/* sato */
+	printf("<TH CLASS='status'>エイリアス</TH>\n");
+	
+	printf("<TH CLASS='status'>サービス名&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='サービス名で並び替え(昇順)' TITLE='サービス名で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='サービス名で並び替え(降順)' TITLE='サービス名で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_SERVICENAME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_SERVICENAME,url_images_path,DOWN_ARROW_ICON);
 
-	printf("<TH CLASS='status'>Status&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by service status (ascending)' TITLE='Sort by service status (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by service status (descending)' TITLE='Sort by service status (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_SERVICESTATUS,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_SERVICESTATUS,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='status'>状態&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='サービス稼動状態で並び替え(昇順)' TITLE='サービス稼動状態で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='サービス稼動状態で並び替え(降順)' TITLE='サービス稼動状態で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_SERVICESTATUS,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_SERVICESTATUS,url_images_path,DOWN_ARROW_ICON);
 
-	printf("<TH CLASS='status'>Last Check&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by last check time (ascending)' TITLE='Sort by last check time (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by last check time (descending)' TITLE='Sort by last check time (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_LASTCHECKTIME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_LASTCHECKTIME,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='status'>最終チェック時刻&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='最終チェック時刻で並び替え(昇順)' TITLE='最終チェック時刻で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='最終チェック時刻で並び替え(降順)' TITLE='最終チェック時刻で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_LASTCHECKTIME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_LASTCHECKTIME,url_images_path,DOWN_ARROW_ICON);
 
-	printf("<TH CLASS='status'>Duration&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by state duration (ascending)' TITLE='Sort by state duration (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by state duration time (descending)' TITLE='Sort by state duration time (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_STATEDURATION,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_STATEDURATION,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='status'>経過時間&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='経過時間で並び替え(昇順)' TITLE='経過時間で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='経過時間で並び替え(降順)' TITLE='経過時間で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_STATEDURATION,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_STATEDURATION,url_images_path,DOWN_ARROW_ICON);
 
-	printf("<TH CLASS='status'>Attempt&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by current attempt (ascending)' TITLE='Sort by current attempt (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by current attempt (descending)' TITLE='Sort by current attempt (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_CURRENTATTEMPT,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_CURRENTATTEMPT,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='status'>試行回数&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='試行回数で並び替え(昇順)' TITLE='試行回数で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='試行回数で並び替え(降順)' TITLE='試行回数で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_CURRENTATTEMPT,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_CURRENTATTEMPT,url_images_path,DOWN_ARROW_ICON);
 
-	printf("<TH CLASS='status'>Status Information</TH>\n");
+	printf("<TH CLASS='status'>ステータス情報</TH>\n");
 	printf("</TR>\n");
 
 
@@ -1516,17 +1521,17 @@
 				strcpy(date_time,"N/A");
 
 			if(temp_status->status==SERVICE_PENDING){
-				strncpy(status,"PENDING",sizeof(status));
+				strncpy(status,"保留(PENDING)",sizeof(status));
 				status_class="PENDING";
 				status_bg_class=(odd)?"Even":"Odd";
 		                }
 			else if(temp_status->status==SERVICE_OK){
-				strncpy(status,"OK",sizeof(status));
+				strncpy(status,"正常(OK)",sizeof(status));
 				status_class="OK";
 				status_bg_class=(odd)?"Even":"Odd";
 		                }
 			else if(temp_status->status==SERVICE_WARNING){
-				strncpy(status,"WARNING",sizeof(status));
+				strncpy(status,"警告(WARNING)",sizeof(status));
 				status_class="WARNING";
 				if(temp_status->problem_has_been_acknowledged==TRUE)
 					status_bg_class="BGWARNINGACK";
@@ -1536,7 +1541,7 @@
 					status_bg_class="BGWARNING";
 		                }
 			else if(temp_status->status==SERVICE_UNKNOWN){
-				strncpy(status,"UNKNOWN",sizeof(status));
+				strncpy(status,"不明(UNKNOWN)",sizeof(status));
 				status_class="UNKNOWN";
 				if(temp_status->problem_has_been_acknowledged==TRUE)
 					status_bg_class="BGUNKNOWNACK";
@@ -1546,7 +1551,7 @@
 					status_bg_class="BGUNKNOWN";
 		                }
 			else if(temp_status->status==SERVICE_CRITICAL){
-				strncpy(status,"CRITICAL",sizeof(status));
+				strncpy(status,"異常(CRITICAL)",sizeof(status));
 				status_class="CRITICAL";
 				if(temp_status->problem_has_been_acknowledged==TRUE)
 					status_bg_class="BGCRITICALACK";
@@ -1601,24 +1606,24 @@
 				printf("<TR>\n");
 				total_comments=number_of_host_comments(temp_host->name);
 				if(temp_hoststatus->problem_has_been_acknowledged==TRUE){
-					printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This host problem has been acknowledged' TITLE='This host problem has been acknowledged'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,ACKNOWLEDGEMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+					printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストの問題は認知済みです' TITLE='このホストの問題は認知済みです'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,ACKNOWLEDGEMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 			                }
 				/* only show comments if this is a non-read-only user */
 				if(is_authorized_for_read_only(&current_authdata)==FALSE){
 					if(total_comments>0)
-						printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This host has %d comment%s associated with it' TITLE='This host has %d comment%s associated with it'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,COMMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,total_comments,(total_comments==1)?"":"s",total_comments,(total_comments==1)?"":"s");
+						printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストには %d 個のコメントがあります' TITLE='このホストには %d 個のコメントがあります'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,COMMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,total_comments,total_comments);
 					}
 				if(temp_hoststatus->notifications_enabled==FALSE){
-					printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='Notifications for this host have been disabled' TITLE='Notifications for this host have been disabled'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,NOTIFICATIONS_DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+					printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストの通知機能は無効になっています' TITLE='このホストの通知機能は無効になっています'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,NOTIFICATIONS_DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 			                }
 				if(temp_hoststatus->checks_enabled==FALSE){
-					printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='Checks of this host have been disabled'd TITLE='Checks of this host have been disabled'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+					printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストのチェックは無効になってます' TITLE='このホストのチェックは無効になってます'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 				        }
 				if(temp_hoststatus->is_flapping==TRUE){
-					printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This host is flapping between states' TITLE='This host is flapping between states'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,FLAPPING_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+					printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストは状態がフラップしてます' TITLE='このホストは状態がフラップしてます'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,FLAPPING_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 				        }
 				if(temp_hoststatus->scheduled_downtime_depth>0){
-					printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This host is currently in a period of scheduled downtime' TITLE='This host is currently in a period of scheduled downtime'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,SCHEDULED_DOWNTIME_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+					printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストは現在、ダウンタイム中です' TITLE='このホストは現在ダウンタイム中です'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,SCHEDULED_DOWNTIME_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 				        }
 				if(temp_host->notes_url!=NULL){
 					printf("<TD align=center valign=center>");
@@ -1627,7 +1632,7 @@
 					printf("%s",processed_string);
 					free(processed_string);
 					printf("' TARGET='%s'>",(notes_url_target==NULL)?"_blank":notes_url_target);
-					printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"View Extra Host Notes","View Extra Host Notes");
+					printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"詳細なホスト情報を見る","詳細なホスト情報を見る");
 					printf("</A>");
 					printf("</TD>\n");
 				        }
@@ -1638,7 +1643,7 @@
 					printf("%s",processed_string);
 					free(processed_string);
 					printf("' TARGET='%s'>",(action_url_target==NULL)?"_blank":action_url_target);
-					printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"Perform Extra Host Actions","Perform Extra Host Actions");
+					printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"ホストの対応情報を見る","ホストの対応情報を見る");
 					printf("</A>");
 					printf("</TD>\n");
 				        }
@@ -1666,6 +1671,9 @@
 			/* grab macros */
 			grab_service_macros(temp_service);
 
+			/* alias column by sato  */
+			printf("<TD CLASS='status%s'>%s</TD>",status_bg_class,temp_host->alias);
+
 			/* service name column */
 			printf("<TD CLASS='status%s'>",status_bg_class);
 			printf("<TABLE BORDER=0 WIDTH='100%%' CELLSPACING=0 CELLPADDING=0>");
@@ -1687,32 +1695,32 @@
 			if(is_authorized_for_read_only(&current_authdata)==FALSE){
 				if(total_comments>0){
 					printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s",EXTINFO_CGI,DISPLAY_SERVICE_INFO,url_encode(temp_status->host_name));
-					printf("&service=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This service has %d comment%s associated with it' TITLE='This service has %d comment%s associated with it'></A></TD>",url_encode(temp_status->description),url_images_path,COMMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,total_comments,(total_comments==1)?"":"s",total_comments,(total_comments==1)?"":"s");
+					printf("&service=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このサービスには %d 個のコメントがあります' TITLE='このサービスには %d 個のコメントがあります'></A></TD>",url_encode(temp_status->description),url_images_path,COMMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,total_comments,total_comments);
 					}
 				}
 			if(temp_status->problem_has_been_acknowledged==TRUE){
 				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s",EXTINFO_CGI,DISPLAY_SERVICE_INFO,url_encode(temp_status->host_name));
-				printf("&service=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This service problem has been acknowledged' TITLE='This service problem has been acknowledged'></A></TD>",url_encode(temp_status->description),url_images_path,ACKNOWLEDGEMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+				printf("&service=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このサービスの問題は認知済みです' TITLE='この>サービスの問題は認知済みです'></A></TD>",url_encode(temp_status->description),url_images_path,ACKNOWLEDGEMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 			        }
 			if(temp_status->checks_enabled==FALSE && temp_status->accept_passive_service_checks==FALSE){
 				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s",EXTINFO_CGI,DISPLAY_SERVICE_INFO,url_encode(temp_status->host_name));
-				printf("&service=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='Active and passive checks have been disabled for this service' TITLE='Active and passive checks have been disabled for this service'></A></TD>",url_encode(temp_status->description),url_images_path,DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+				printf("&service=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このサービスはアクティブ、パッシブの両チェックが無効で>す' TITLE='このサービスはアクティブ、パッシブの両チェックが無効です'></A></TD>",url_encode(temp_status->description),url_images_path,DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 			        }
 			else if(temp_status->checks_enabled==FALSE){
 				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s",EXTINFO_CGI,DISPLAY_SERVICE_INFO,url_encode(temp_status->host_name));
-				printf("&service=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='Active checks of the service have been disabled - only passive checks are being accepted' TITLE='Active checks of the service have been disabled - only passive checks are being accepted'></A></TD>",url_encode(temp_status->description),url_images_path,PASSIVE_ONLY_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+				printf("&service=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='アクティブチェックは無効です。パッシブチェックのみ有効>です' TITLE='アクティブチェックは無効です。パッシブチェックのみ有効です'></A></TD>",url_encode(temp_status->description),url_images_path,PASSIVE_ONLY_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 			        }
 			if(temp_status->notifications_enabled==FALSE){
 				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s",EXTINFO_CGI,DISPLAY_SERVICE_INFO,url_encode(temp_status->host_name));
-				printf("&service=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='Notifications for this service have been disabled' TITLE='Notifications for this service have been disabled'></A></TD>",url_encode(temp_status->description),url_images_path,NOTIFICATIONS_DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+				printf("&service=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このサービスの通知機能は無効です' TITLE='このサービスの通知機能は無効です'></A></TD>",url_encode(temp_status->description),url_images_path,NOTIFICATIONS_DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 			        }
 			if(temp_status->is_flapping==TRUE){
 				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s",EXTINFO_CGI,DISPLAY_SERVICE_INFO,url_encode(temp_status->host_name));
-				printf("&service=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This service is flapping between states' TITLE='This service is flapping between states'></A></TD>",url_encode(temp_status->description),url_images_path,FLAPPING_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+				printf("&service=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このサービスは状態がフラップしています' TITLE='このサービスは状態がフラップしています'></A></TD>",url_encode(temp_status->description),url_images_path,FLAPPING_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 			        }
 			if(temp_status->scheduled_downtime_depth>0){
 				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s",EXTINFO_CGI,DISPLAY_SERVICE_INFO,url_encode(temp_status->host_name));
-				printf("&service=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This service is currently in a period of scheduled downtime' TITLE='This service is currently in a period of scheduled downtime'></A></TD>",url_encode(temp_status->description),url_images_path,SCHEDULED_DOWNTIME_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+				printf("&service=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このサービスは現在ダウンタイム中です' TITLE='このサービスは現在ダウンタイム中です'></A></TD>",url_encode(temp_status->description),url_images_path,SCHEDULED_DOWNTIME_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 			        }
 /*
 Opsera patch to remove this notes icon as we use the view graph one instead
@@ -1723,7 +1731,7 @@
 				printf("%s",processed_string);
 				free(processed_string);
 				printf("' TARGET='%s'>",(notes_url_target==NULL)?"_blank":notes_url_target);
-				printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"View Extra Service Notes","View Extra Service Notes");
+				printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"サービスの追加情報を見る","サービスの追加情報を見る");
 				printf("</A>");
 				printf("</TD>\n");
 				}
@@ -1735,7 +1743,7 @@
 				printf("%s",processed_string);
 				free(processed_string);
 				printf("' TARGET='%s'>",(action_url_target==NULL)?"_blank":action_url_target);
-				printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"Perform Extra Service Actions","Perform Extra Service Actions");
+				printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"サービスの対応情報を見る","サービスの対応情報を見る");
 				printf("</A>");
 				printf("</TD>\n");
 				}
@@ -1785,7 +1793,7 @@
 			if(duration_error==TRUE)
 				snprintf(state_duration,sizeof(state_duration)-1,"???");
 			else
-				snprintf(state_duration,sizeof(state_duration)-1,"%2dd %2dh %2dm %2ds%s",days,hours,minutes,seconds,(temp_status->last_state_change==(time_t)0)?"+":"");
+				snprintf(state_duration,sizeof(state_duration)-1,"%2d日と %2d時間 %2d分 %2d秒",days,hours,minutes,seconds,(temp_status->last_state_change==(time_t)0)?"+":"");
 			state_duration[sizeof(state_duration)-1]='\x0';
 
                         /* the rest of the columns... */
@@ -1814,18 +1822,17 @@
 	if(user_has_seen_something==FALSE){
 
 		if(servicestatus_list!=NULL){
-			printf("<P><DIV CLASS='errorMessage'>It appears as though you do not have permission to view information for any of the services you requested...</DIV></P>\n");
-			printf("<P><DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-			printf("and check the authorization options in your CGI configuration file.</DIV></P>\n");
+			printf("<P><DIV CLASS='errorMessage'>要求したサービスを閲覧する権限が無いようです。</DIV></P>\n");
+			printf("<P><DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV></P>\n");
 		        }
 		else{
-			printf("<P><DIV CLASS='infoMessage'>There doesn't appear to be any service status information in the status log...<br><br>\n");
-			printf("Make sure that Nagios is running and that you have specified the location of you status log correctly in the configuration files.</DIV></P>\n");
+			printf("<P><DIV CLASS='infoMessage'>ステータスログにサービスの情報がありません...<br><br>\n");
+			printf("Nagiosが正常に稼働して、ステータス情報を収集しているか確認してください。</DIV></P>\n");
 		        }
 	        }
 
 	else
-		printf("<BR><DIV CLASS='itemTotalsTitle'>%d Matching Service Entries Displayed</DIV>\n",total_entries);
+		printf("<BR><DIV CLASS='itemTotalsTitle'>条件にあった %d 個のサービスを表示しています</DIV>\n",total_entries);
 
 	return;
         }
@@ -1888,26 +1895,27 @@
 
 	printf("<td valign=top align=center width=33%%>\n");
 
-	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>Host Status Details For ");
+	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>");
 	if(show_all_hostgroups==TRUE)
-		printf("All Host Groups");
+		printf("全ホストグループ");
 	else
-		printf("Host Group '%s'",hostgroup_name);
+		printf("ホストグループ '%s' ",hostgroup_name);
+	printf("のホスト稼動状態\n");
 	printf("</DIV>\n");
 
 	if(use_sort==TRUE){
-		printf("<DIV ALIGN=CENTER CLASS='statusSort'>Entries sorted by <b>");
+		printf("<DIV ALIGN=CENTER CLASS='statusSort'>エントリの並び替え順:<b>");
 		if(sort_option==SORT_HOSTNAME)
-			printf("host name");
+			printf("ホスト名");
 		else if(sort_option==SORT_HOSTSTATUS)
-			printf("host status");
+			printf("ホストの状態");
 		else if(sort_option==SORT_LASTCHECKTIME)
-			printf("last check time");
+			printf("最終チェック時刻");
 		else if(sort_option==SORT_CURRENTATTEMPT)
-			printf("attempt number");
+			printf("警告数");
 		else if(sort_option==SORT_STATEDURATION)
-			printf("state duration");
-		printf("</b> (%s)\n",(sort_type==SORT_ASCENDING)?"ascending":"descending");
+			printf("経過時間");
+		printf("</b> (%s)\n",(sort_type==SORT_ASCENDING)?"昇順":"降順");
 		printf("</DIV>\n");
 	        }
 
@@ -1961,15 +1969,17 @@
 	printf("<TABLE BORDER=0 CLASS='status' WIDTH=100%%>\n");
 	printf("<TR>\n");
 
-	printf("<TH CLASS='status'>Host&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by host name (ascending)' TITLE='Sort by host name (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by host name (descending)' TITLE='Sort by host name (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_HOSTNAME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_HOSTNAME,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='status'>ホスト&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='ホスト名で並び替え(昇順)' TITLE='ホスト名で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='ホスト名で並び替え(降順)' TITLE='ホスト名で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_HOSTNAME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_HOSTNAME,url_images_path,DOWN_ARROW_ICON);
+
+	printf("<TH CLASS='status'>エイリアス&nbsp;</TH>");
 
-	printf("<TH CLASS='status'>Status&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by host status (ascending)' TITLE='Sort by host status (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by host status (descending)' TITLE='Sort by host status (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_HOSTSTATUS,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_HOSTSTATUS,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='status'>状態&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='ホスト稼動状態で並び替え(昇順)' TITLE='ホスト稼動状態で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='ホスト稼動状態で並び替え(降順)' TITLE='ホスト稼動状態で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_HOSTSTATUS,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_HOSTSTATUS,url_images_path,DOWN_ARROW_ICON);
 
-	printf("<TH CLASS='status'>Last Check&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by last check time (ascending)' TITLE='Sort by last check time (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by last check time (descending)' TITLE='Sort by last check time (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_LASTCHECKTIME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_LASTCHECKTIME,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='status'>最終チェック時刻&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='最終チェック時刻で並び替え(昇順)' TITLE='最終チェック時刻で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='最終チェック時刻で並び替え(降順)' TITLE='最終チェック時刻で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_LASTCHECKTIME,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_LASTCHECKTIME,url_images_path,DOWN_ARROW_ICON);
 
-	printf("<TH CLASS='status'>Duration&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by state duration (ascending)' TITLE='Sort by state duration (ascending)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='Sort by state duration time (descending)' TITLE='Sort by state duration time (descending)'></A></TH>",temp_url,SORT_ASCENDING,SORT_STATEDURATION,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_STATEDURATION,url_images_path,DOWN_ARROW_ICON);
+	printf("<TH CLASS='status'>経過時間&nbsp;<A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='経過時間で並び替え(昇順)' TITLE='経過時間で並び替え(昇順)'></A><A HREF='%s&sorttype=%d&sortoption=%d'><IMG SRC='%s%s' BORDER=0 ALT='経過時間で並び替え(降順)' TITLE='経過時間で並び替え(降順)'></A></TH>",temp_url,SORT_ASCENDING,SORT_STATEDURATION,url_images_path,UP_ARROW_ICON,temp_url,SORT_DESCENDING,SORT_STATEDURATION,url_images_path,DOWN_ARROW_ICON);
 
-	printf("<TH CLASS='status'>Status Information</TH>\n");
+	printf("<TH CLASS='status'>ステータス情報</TH>\n");
 	printf("</TR>\n");
 
 
@@ -2050,17 +2060,17 @@
 				strcpy(date_time,"N/A");
 
 			if(temp_status->status==HOST_PENDING){
-				strncpy(status,"PENDING",sizeof(status));
+				strncpy(status,"保留(PENDING)",sizeof(status));
 				status_class="PENDING";
 				status_bg_class=(odd)?"Even":"Odd";
 		                }
 			else if(temp_status->status==HOST_UP){
-				strncpy(status,"UP",sizeof(status));
+				strncpy(status,"稼働(UP)",sizeof(status));
 				status_class="HOSTUP";
 				status_bg_class=(odd)?"Even":"Odd";
 		                }
 			else if(temp_status->status==HOST_DOWN){
-				strncpy(status,"DOWN",sizeof(status));
+				strncpy(status,"停止(DOWN)",sizeof(status));
 				status_class="HOSTDOWN";
 				if(temp_status->problem_has_been_acknowledged==TRUE)
 					status_bg_class="BGDOWNACK";
@@ -2070,7 +2080,7 @@
 					status_bg_class="BGDOWN";
 		                }
 			else if(temp_status->status==HOST_UNREACHABLE){
-				strncpy(status,"UNREACHABLE",sizeof(status));
+				strncpy(status,"未到達(UNREACHABLE)",sizeof(status));
 				status_class="HOSTUNREACHABLE";
 				if(temp_status->problem_has_been_acknowledged==TRUE)
 					status_bg_class="BGUNREACHABLEACK";
@@ -2103,21 +2113,21 @@
 			printf("<TR>\n");
 			total_comments=number_of_host_comments(temp_host->name);
 			if(temp_status->problem_has_been_acknowledged==TRUE){
-				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This host problem has been acknowledged' TITLE='This host problem has been acknowledged'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,ACKNOWLEDGEMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストの問題は認知済みです' TITLE='このホストの問題は認知済みです'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,ACKNOWLEDGEMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 		                }
 			if(total_comments>0)
-				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This host has %d comment%s associated with it' TITLE='This host has %d comment%s associated with it'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,COMMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,total_comments,(total_comments==1)?"":"s",total_comments,(total_comments==1)?"":"s");
+				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s#comments'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストには %d 個のコメントがあります' TITLE='このホストには %d 個のコメントがあります'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,COMMENT_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,total_comments,total_comments);
 			if(temp_status->notifications_enabled==FALSE){
-				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='Notifications for this host have been disabled' TITLE='Notifications for this host have been disabled'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,NOTIFICATIONS_DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストの通知機能は無効になっています' TITLE='このホストの通知機能は無効になっています'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,NOTIFICATIONS_DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 		                }
 			if(temp_status->checks_enabled==FALSE){
-				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='Checks of this host have been disabled' TITLE='Checks of this host have been disabled'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストのチェックは無効になってます' TITLE='このホストのチェックは無効になってます'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,DISABLED_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 			        }
 			if(temp_status->is_flapping==TRUE){
-				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This host is flapping between states' TITLE='This host is flapping between states'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,FLAPPING_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストは状態がフラップしてます' TITLE='このホストは状態がフラップしてます'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,FLAPPING_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 			        }
 			if(temp_status->scheduled_downtime_depth>0){
-				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='This host is currently in a period of scheduled downtime' TITLE='This host is currently in a period of scheduled downtime'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,SCHEDULED_DOWNTIME_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
+				printf("<TD ALIGN=center valign=center><A HREF='%s?type=%d&host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='このホストは現在ダウンタイム中です' TITLE='このホストは現在ダウンタイム中です'></A></TD>",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_status->host_name),url_images_path,SCHEDULED_DOWNTIME_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT);
 			        }
 			if(temp_host->notes_url!=NULL){
 				printf("<TD align=center valign=center>");
@@ -2126,7 +2136,7 @@
 				printf("%s",processed_string);
 				free(processed_string);
 				printf("' TARGET='%s'>",(notes_url_target==NULL)?"_blank":notes_url_target);
-				printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"View Extra Host Notes","View Extra Host Notes");
+				printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"詳細なホスト情報を見る","詳細なホスト情報を見る");
 				printf("</A>");
 				printf("</TD>\n");
 			        }
@@ -2137,7 +2147,7 @@
 				printf("%s",processed_string);
 				free(processed_string);
 				printf("' TARGET='%s'>",(action_url_target==NULL)?"_blank":action_url_target);
-				printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"Perform Extra Host Actions","Perform Extra Host Actions");
+				printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"ホストの対応情報を見る","ホストの対応情報を見る");
 				printf("</A>");
 				printf("</TD>\n");
 			        }
@@ -2158,7 +2168,7 @@
 				printf("</TD>\n");
 				}
 			printf("<TD>");
-			printf("<a href='%s?host=%s'><img src='%s%s' border=0 alt='View Service Details For This Host' title='View Service Details For This Host'></a>",STATUS_CGI,url_encode(temp_status->host_name),url_images_path,STATUS_DETAIL_ICON);
+			printf("<a href='%s?host=%s'><img src='%s%s' border=0 alt='このホストのサービス詳細を見る' title='このホストのサービス詳細を見る'></a>",STATUS_CGI,url_encode(temp_status->host_name),url_images_path,STATUS_DETAIL_ICON);
 			printf("</TD>\n");
 			printf("</TR>\n");
 			printf("</TABLE>\n");
@@ -2168,6 +2178,8 @@
 
 			printf("</TD>\n");
 
+			/* alias column by sato  */
+			printf("<TD CLASS='status%s'>%s</TD>",status_bg_class,temp_host->alias);
 
 			/* state duration calculation... */
 			t=0;
@@ -2188,7 +2200,7 @@
 			if(duration_error==TRUE)
 				snprintf(state_duration,sizeof(state_duration)-1,"???");
 			else
-				snprintf(state_duration,sizeof(state_duration)-1,"%2dd %2dh %2dm %2ds%s",days,hours,minutes,seconds,(temp_status->last_state_change==(time_t)0)?"+":"");
+				snprintf(state_duration,sizeof(state_duration)-1,"%2d日と %2d時間 %2d分 %2d秒",days,hours,minutes,seconds,(temp_status->last_state_change==(time_t)0)?"+":"");
 			state_duration[sizeof(state_duration)-1]='\x0';
 
                         /* the rest of the columns... */
@@ -2215,18 +2227,17 @@
 	if(user_has_seen_something==FALSE){
 
 		if(hoststatus_list!=NULL){
-			printf("<P><DIV CLASS='errorMessage'>It appears as though you do not have permission to view information for any of the hosts you requested...</DIV></P>\n");
-			printf("<P><DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-			printf("and check the authorization options in your CGI configuration file.</DIV></P>\n");
+			printf("<P><DIV CLASS='errorMessage'>要求したサービスを閲覧する権限が無いようです...</DIV></P>\n");
+			printf("<P><DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV></P>\n");
 		        }
 		else{
-			printf("<P><DIV CLASS='infoMessage'>There doesn't appear to be any host status information in the status log...<br><br>\n");
-			printf("Make sure that Nagios is running and that you have specified the location of you status log correctly in the configuration files.</DIV></P>\n");
+			printf("<P><DIV CLASS='infoMessage'>ステータスログにサービスの情報がありません...<br><br>\n");
+			printf("Nagiosが正常に稼働して、ステータス情報を収集しているか確認してください。</DIV></P>\n");
 		        }
 	        }
 
 	else
-		printf("<BR><DIV CLASS='itemTotalsTitle'>%d Matching Host Entries Displayed</DIV>\n",total_entries);
+		printf("<BR><DIV CLASS='itemTotalsTitle'>条件にあった %d 個のホストを表示しています</DIV>\n",total_entries);
 
 	return;
         }
@@ -2255,11 +2266,12 @@
 
 	printf("<td valign=top align=center width=33%%>\n");
 
-	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>Service Overview For ");
+	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>");
 	if(show_all_servicegroups==TRUE)
-		printf("All Service Groups");
+		printf("全サービスグループ");
 	else
-		printf("Service Group '%s'",servicegroup_name);
+		printf("サービスグループ '%s' ",servicegroup_name);
+	printf("のサービスオーバービュー");
 	printf("</DIV>\n");
 
 	printf("<br>");
@@ -2341,7 +2353,7 @@
 			printf("</P>\n");
 		        }
 		else{
-			printf("<DIV CLASS='errorMessage'>Sorry, but service group '%s' doesn't seem to exist...</DIV>",servicegroup_name);
+			printf("<DIV CLASS='errorMessage'>'%s' というサービスグループは存在しないようです...</DIV>",servicegroup_name);
 			servicegroup_error=TRUE;
 		        }
 	        }
@@ -2353,12 +2365,11 @@
 		printf("<div align='center'>\n");
 
 		if(servicegroup_list!=NULL){
-			printf("<DIV CLASS='errorMessage'>It appears as though you do not have permission to view information for any of the hosts you requested...</DIV>\n");
-			printf("<DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-			printf("and check the authorization options in your CGI configuration file.</DIV>\n");
+			printf("<DIV CLASS='errorMessage'>要求したサービスを閲覧する権限が無いようです...</DIV>\n");
+			printf("<DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV>\n");
 		        }
 		else{
-			printf("<DIV CLASS='errorMessage'>There are no service groups defined.</DIV>\n");
+			printf("<DIV CLASS='errorMessage'>定義されたサービスグループはありません。</DIV>\n");
 			}
 
 		printf("</div>\n");
@@ -2388,7 +2399,7 @@
 	printf("<table border=1 CLASS='status'>\n");
 
 	printf("<TR>\n");
-	printf("<TH CLASS='status'>Host</TH><TH CLASS='status'>Status</TH><TH CLASS='status'>Services</TH><TH CLASS='status'>Actions</TH>\n");
+	printf("<TH CLASS='status'>ホスト名</TH><TH CLASS='status'>エイリアス名</TH><TH CLASS='status'>状態</TH><TH CLASS='status'>サービス名</TH><TH CLASS='status'>アクション</TH>\n");
 	printf("</TR>\n");
 
 	/* find all hosts that have services that are members of the servicegroup */
@@ -2456,11 +2467,12 @@
 
 	printf("<td valign=top align=center width=33%%>\n");
 
-	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>Status Summary For ");
+	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>");
 	if(show_all_servicegroups==TRUE)
-		printf("All Service Groups");
+		printf("全サービスグループ");
 	else
-		printf("Service Group '%s'",servicegroup_name);
+		printf("サービスグループ '%s' ",servicegroup_name);
+	printf("のステータスサマリ");
 	printf("</DIV>\n");
 
 	printf("<br>");
@@ -2479,7 +2491,7 @@
 	printf("<table border=1 CLASS='status'>\n");
 
 	printf("<TR>\n");
-	printf("<TH CLASS='status'>Service Group</TH><TH CLASS='status'>Host Status Summary</TH><TH CLASS='status'>Service Status Summary</TH>\n");
+	printf("<TH CLASS='status'>サービスグループ名</TH><TH CLASS='status'>ホスト稼動状態の概況</TH><TH CLASS='status'>サービス稼動状態の概</TH>\n");
 	printf("</TR>\n");
 
 	/* display status summary for all servicegroups */
@@ -2525,12 +2537,11 @@
 		printf("<P><DIV ALIGN=CENTER>\n");
 
 		if(servicegroup_list!=NULL){
-			printf("<DIV CLASS='errorMessage'>It appears as though you do not have permission to view information for any of the hosts you requested...</DIV>\n");
-			printf("<DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-			printf("and check the authorization options in your CGI configuration file.</DIV>\n");
+			printf("<DIV CLASS='errorMessage'>要求したサービスを閲覧する権限が無いようです...</DIV>\n");
+			printf("<DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV>\n");
 		        }
 		else{
-			printf("<DIV CLASS='errorMessage'>There are no service groups defined.</DIV>\n");
+			printf("<DIV CLASS='errorMessage'>定義されたサービスグループはありません。</DIV>\n");
 			}
 
 		printf("</DIV></P>\n");
@@ -2539,7 +2550,7 @@
 	/* we couldn't find the servicegroup */
 	else if(servicegroup_error==TRUE){
 		printf("<P><DIV ALIGN=CENTER>\n");
-		printf("<DIV CLASS='errorMessage'>Sorry, but servicegroup '%s' doesn't seem to exist...</DIV>\n",servicegroup_name);
+		printf("<DIV CLASS='errorMessage'>'%s' というサービスグループは存在しないようです...</DIV>\n",servicegroup_name);
 		printf("</DIV></P>\n");
 	        }
 
@@ -2673,7 +2684,7 @@
 
 	if(hosts_up>0){
 		printf("<TR>");
-		printf("<TD CLASS='miniStatusUP'><A HREF='%s?servicegroup=%s&style=detail&&hoststatustypes=%d&hostprops=%lu'>%d UP</A></TD>",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UP,host_properties,hosts_up);
+		printf("<TD CLASS='miniStatusUP'><A HREF='%s?servicegroup=%s&style=detail&&hoststatustypes=%d&hostprops=%lu'>正常状態: %d 件<BR>(OK)</A></TD>",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UP,host_properties,hosts_up);
 		printf("</TR>\n");
 		}
 
@@ -2682,21 +2693,21 @@
 		printf("<TD CLASS='miniStatusDOWN'><TABLE BORDER='0'>\n");
 		printf("<TR>\n");
 
-		printf("<TD CLASS='miniStatusDOWN'><A HREF='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%lu'>%d DOWN</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_DOWN,host_properties,hosts_down);
+		printf("<TD CLASS='miniStatusDOWN'><A HREF='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%lu'>停止状態: %d 件<BR>(DOWN)</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_DOWN,host_properties,hosts_down);
 
 		printf("<TD><TABLE BORDER='0'>\n");
 
 		if(hosts_down_unacknowledged>0)
-			printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>%d Unhandled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_DOWN,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_down_unacknowledged);
+			printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>未解決: %d 件<BR>(Unhandled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_DOWN,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_down_unacknowledged);
 
 		if(hosts_down_scheduled>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_DOWN,HOST_SCHEDULED_DOWNTIME,hosts_down_scheduled);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>スケジュール済: %d 件<BR>(Scheduled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_DOWN,HOST_SCHEDULED_DOWNTIME,hosts_down_scheduled);
 
 		if(hosts_down_acknowledged>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_DOWN,HOST_STATE_ACKNOWLEDGED,hosts_down_acknowledged);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>認知済: %d 件<BR>(Acknowledged)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_DOWN,HOST_STATE_ACKNOWLEDGED,hosts_down_acknowledged);
 
 		if(hosts_down_disabled>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_DOWN,HOST_CHECKS_DISABLED,hosts_down_disabled);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>無効: %d 件<BR>(Disabled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_DOWN,HOST_CHECKS_DISABLED,hosts_down_disabled);
 
 		printf("</TABLE></TD>\n");
 		
@@ -2710,21 +2721,21 @@
 		printf("<TD CLASS='miniStatusUNREACHABLE'><TABLE BORDER='0'>\n");
 		printf("<TR>\n");
 
-		printf("<TD CLASS='miniStatusUNREACHABLE'><A HREF='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%lu'>%d UNREACHABLE</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UNREACHABLE,host_properties,hosts_unreachable);
+		printf("<TD CLASS='miniStatusUNREACHABLE'><A HREF='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%lu'>未到達状態: %d 件<BR>(UNREACHABLE)</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UNREACHABLE,host_properties,hosts_unreachable);
 
 		printf("<TD><TABLE BORDER='0'>\n");
 
 		if(hosts_unreachable_unacknowledged>0)
-			printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>%d Unhandled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UNREACHABLE,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_unreachable_unacknowledged);
+			printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>未解決: %d 件<BR>(Unhandled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UNREACHABLE,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_unreachable_unacknowledged);
 
 		if(hosts_unreachable_scheduled>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UNREACHABLE,HOST_SCHEDULED_DOWNTIME,hosts_unreachable_scheduled);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>スケジュール済: %d 件<BR>(Scheduled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UNREACHABLE,HOST_SCHEDULED_DOWNTIME,hosts_unreachable_scheduled);
 
 		if(hosts_unreachable_acknowledged>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UNREACHABLE,HOST_STATE_ACKNOWLEDGED,hosts_unreachable_acknowledged);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>認知済: %d 件<BR>(Acknowledged)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UNREACHABLE,HOST_STATE_ACKNOWLEDGED,hosts_unreachable_acknowledged);
 
 		if(hosts_unreachable_disabled>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UNREACHABLE,HOST_CHECKS_DISABLED,hosts_unreachable_disabled);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%d'>無効: %d 件<BR>(Disabled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_UNREACHABLE,HOST_CHECKS_DISABLED,hosts_unreachable_disabled);
 
 		printf("</TABLE></TD>\n");
 		
@@ -2734,12 +2745,12 @@
 		}
 
 	if(hosts_pending>0)
-		printf("<TR><TD CLASS='miniStatusPENDING'><A HREF='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%lu'>%d PENDING</A></TD></TR>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_PENDING,host_properties,hosts_pending);
+		printf("<TR><TD CLASS='miniStatusPENDING'><A HREF='%s?servicegroup=%s&style=detail&hoststatustypes=%d&hostprops=%lu'>保留状態: %d 件<BR>(PENDING)</A></TD></TR>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),HOST_PENDING,host_properties,hosts_pending);
 
 	printf("</TABLE>\n");
 
 	if((hosts_up + hosts_down + hosts_unreachable + hosts_pending)==0)
-		printf("No matching hosts");
+		printf("該当するホストはありません");
 
 	return;
 	return;
@@ -2892,31 +2903,31 @@
 	printf("<TABLE BORDER=0>\n");
 
 	if(services_ok>0)
-		printf("<TR><TD CLASS='miniStatusOK'><A HREF='%s?servicegroup=%s&style=detail&&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d OK</A></TD></TR>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_OK,host_status_types,service_properties,host_properties,services_ok);
+		printf("<TR><TD CLASS='miniStatusOK'><A HREF='%s?servicegroup=%s&style=detail&&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>正常状態: %d 件<BR>(OK)</A></TD></TR>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_OK,host_status_types,service_properties,host_properties,services_ok);
 
 	if(services_warning>0){
 		printf("<TR>\n");
 		printf("<TD CLASS='miniStatusWARNING'><TABLE BORDER='0'>\n");
 		printf("<TR>\n");
 
-		printf("<TD CLASS='miniStatusWARNING'><A HREF='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d WARNING</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,host_status_types,service_properties,host_properties,services_warning);
+		printf("<TD CLASS='miniStatusWARNING'><A HREF='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>警告状態: %d 件<BR>(WARNING)</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,host_status_types,service_properties,host_properties,services_warning);
 
 		printf("<TD><TABLE BORDER='0'>\n");
 
 		if(services_warning_unacknowledged>0)
-			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>%d Unhandled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_warning_unacknowledged);
+			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>未解決: %d 件<BR>(Unhandled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_warning_unacknowledged);
 
 		if(services_warning_host_problem>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>%d on Problem Hosts</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,HOST_DOWN|HOST_UNREACHABLE,services_warning_host_problem);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>ホスト側の問題: %d 件</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,HOST_DOWN|HOST_UNREACHABLE,services_warning_host_problem);
 
 		if(services_warning_scheduled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,SERVICE_SCHEDULED_DOWNTIME,services_warning_scheduled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>スケジュール済: %d 件<BR>(Scheduled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,SERVICE_SCHEDULED_DOWNTIME,services_warning_scheduled);
 
 		if(services_warning_acknowledged>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,SERVICE_STATE_ACKNOWLEDGED,services_warning_acknowledged);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>>認知済: %d 件<BR>(Acknowledged)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,SERVICE_STATE_ACKNOWLEDGED,services_warning_acknowledged);
 
 		if(services_warning_disabled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,SERVICE_CHECKS_DISABLED,services_warning_disabled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>無効: %d 件<BR>(Disabled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_WARNING,SERVICE_CHECKS_DISABLED,services_warning_disabled);
 
 		printf("</TABLE></TD>\n");
 		
@@ -2930,24 +2941,24 @@
 		printf("<TD CLASS='miniStatusUNKNOWN'><TABLE BORDER='0'>\n");
 		printf("<TR>\n");
 
-		printf("<TD CLASS='miniStatusUNKNOWN'><A HREF='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d UNKNOWN</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,host_status_types,service_properties,host_properties,services_unknown);
+		printf("<TD CLASS='miniStatusUNKNOWN'><A HREF='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>不明状態: %d 件<BR>(UNKNOWN)</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,host_status_types,service_properties,host_properties,services_unknown);
 
 		printf("<TD><TABLE BORDER='0'>\n");
 
 		if(services_unknown_unacknowledged>0)
-			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>%d Unhandled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_unknown_unacknowledged);
+			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>未解決: %d 件<BR>(Unhandled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_unknown_unacknowledged);
 
 		if(services_unknown_host_problem>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>%d on Problem Hosts</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,HOST_DOWN|HOST_UNREACHABLE,services_unknown_host_problem);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>ホスト側の問題: %d 件</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,HOST_DOWN|HOST_UNREACHABLE,services_unknown_host_problem);
 
 		if(services_unknown_scheduled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,SERVICE_SCHEDULED_DOWNTIME,services_unknown_scheduled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>スケジュール済: %d 件<BR>(Scheduled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,SERVICE_SCHEDULED_DOWNTIME,services_unknown_scheduled);
 
 		if(services_unknown_acknowledged>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,SERVICE_STATE_ACKNOWLEDGED,services_unknown_acknowledged);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>>認知済: %d 件<BR>(Acknowledged)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,SERVICE_STATE_ACKNOWLEDGED,services_unknown_acknowledged);
 
 		if(services_unknown_disabled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,SERVICE_CHECKS_DISABLED,services_unknown_disabled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>無効: %d 件<BR>(Disabled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_UNKNOWN,SERVICE_CHECKS_DISABLED,services_unknown_disabled);
 
 		printf("</TABLE></TD>\n");
 		
@@ -2961,24 +2972,24 @@
 		printf("<TD CLASS='miniStatusCRITICAL'><TABLE BORDER='0'>\n");
 		printf("<TR>\n");
 
-		printf("<TD CLASS='miniStatusCRITICAL'><A HREF='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d CRITICAL</A>&nbsp:</TD>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,host_status_types,service_properties,host_properties,services_critical);
+		printf("<TD CLASS='miniStatusCRITICAL'><A HREF='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>異常状態: %d 件<BR>(CRITICAL)</A>&nbsp:</TD>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,host_status_types,service_properties,host_properties,services_critical);
 
 		printf("<TD><TABLE BORDER='0'>\n");
 
 		if(services_critical_unacknowledged>0)
-			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>%d Unhandled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_critical_unacknowledged);
+			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>未解決: %d 件<BR>(Unhandled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_critical_unacknowledged);
 
 		if(services_critical_host_problem>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>%d on Problem Hosts</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,HOST_DOWN|HOST_UNREACHABLE,services_critical_host_problem);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>ホスト側の問題: %d 件</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,HOST_DOWN|HOST_UNREACHABLE,services_critical_host_problem);
 
 		if(services_critical_scheduled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,SERVICE_SCHEDULED_DOWNTIME,services_critical_scheduled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>スケジュール済: %d 件<BR>(Scheduled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,SERVICE_SCHEDULED_DOWNTIME,services_critical_scheduled);
 
 		if(services_critical_acknowledged>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,SERVICE_STATE_ACKNOWLEDGED,services_critical_acknowledged);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>>認知済: %d 件<BR>(Acknowledged)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,SERVICE_STATE_ACKNOWLEDGED,services_critical_acknowledged);
 
 		if(services_critical_disabled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,SERVICE_CHECKS_DISABLED,services_critical_disabled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?servicegroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>無効: %d 件<BR>(Disabled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_CRITICAL,SERVICE_CHECKS_DISABLED,services_critical_disabled);
 
 		printf("</TABLE></TD>\n");
 		
@@ -2988,12 +2999,12 @@
 		}
 
 	if(services_pending>0)
-		printf("<TR><TD CLASS='miniStatusPENDING'><A HREF='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d PENDING</A></TD></TR>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_PENDING,host_status_types,service_properties,host_properties,services_pending);
+		printf("<TR><TD CLASS='miniStatusPENDING'><A HREF='%s?servicegroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>保留状態: %d 件<BR>(PENDING)</A></TD></TR>\n",STATUS_CGI,url_encode(temp_servicegroup->group_name),SERVICE_PENDING,host_status_types,service_properties,host_properties,services_pending);
 
 	printf("</TABLE>\n");
 
 	if((services_ok + services_warning + services_unknown + services_critical + services_pending)==0)
-		printf("No matching services");
+		printf("該当するサービスはありません");
 
 	return;
         }
@@ -3021,11 +3032,12 @@
 
 	printf("<td valign=top align=center width=33%%>\n");
 
-	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>Status Grid For ");
+	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>");
 	if(show_all_servicegroups==TRUE)
-		printf("All Service Groups");
+		printf("全サービスグループ");
 	else
-		printf("Service Group '%s'",servicegroup_name);
+		printf("サービスグループ '%s' ",servicegroup_name);
+	printf("のステータスグリッド");
 	printf("</DIV>\n");
 
 	printf("<br>");
@@ -3080,12 +3092,11 @@
 		printf("<P><DIV ALIGN=CENTER>\n");
 
 		if(servicegroup_list!=NULL){
-			printf("<DIV CLASS='errorMessage'>It appears as though you do not have permission to view information for any of the hosts you requested...</DIV>\n");
-			printf("<DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-			printf("and check the authorization options in your CGI configuration file.</DIV>\n");
+			printf("<DIV CLASS='errorMessage'>要求したサービスを閲覧する権限が無いようです...</DIV>\n");
+			printf("<DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV>\n");
 		        }
 		else{
-			printf("<DIV CLASS='errorMessage'>There are no service groups defined.</DIV>\n");
+			printf("<DIV CLASS='errorMessage'>定義されたサービスグループはありません。</DIV>\n");
 			}
 
 		printf("</DIV></P>\n");
@@ -3094,7 +3105,7 @@
 	/* we couldn't find the servicegroup */
 	else if(servicegroup_error==TRUE){
 		printf("<P><DIV ALIGN=CENTER>\n");
-		printf("<DIV CLASS='errorMessage'>Sorry, but servicegroup '%s' doesn't seem to exist...</DIV>\n",servicegroup_name);
+		printf("<DIV CLASS='errorMessage'>'%s' というサービスグループは存在しないようです...</DIV>\n",servicegroup_name);
 		printf("</DIV></P>\n");
 	        }
 
@@ -3116,8 +3127,7 @@
 	servicestatus *temp_servicestatus;
 	int odd=0;
 	int current_item;
-
-
+	
 	printf("<P>\n");
 	printf("<DIV ALIGN=CENTER>\n");
 
@@ -3125,7 +3135,7 @@
 	printf(" (<A HREF='%s?type=%d&servicegroup=%s'>%s</A>)</DIV>",EXTINFO_CGI,DISPLAY_SERVICEGROUP_INFO,url_encode(temp_servicegroup->group_name),temp_servicegroup->group_name);
 
 	printf("<TABLE BORDER=1 CLASS='status' ALIGN=CENTER>\n");
-	printf("<TR><TH CLASS='status'>Host</TH><TH CLASS='status'>Services</a></TH><TH CLASS='status'>Actions</TH></TR>\n");
+	printf("<TR><TH CLASS='status'>ホスト名</TH><TH CLASS='status'>エイリアス名</TH><TH CLASS='status'>サービス名</a></TH><TH CLASS='status'>アクション</TH></TR>\n");
 
 	/* find all hosts that have services that are members of the servicegroup */
 	last_host=NULL;
@@ -3200,6 +3210,8 @@
 
 		printf("</TD>\n");
 
+		printf("<td CLASS='status%s'>%s</td>\n",status_bg_class,temp_host->alias);
+
 		printf("<TD CLASS='status%s'>",host_status_class);
 
 		/* display all services on the host that are part of the hostgroup */
@@ -3243,7 +3255,7 @@
 		grab_host_macros(temp_host);
 
 		printf("<A HREF='%s?type=%d&host=%s'>\n",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_host->name));
-		printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,DETAIL_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"View Extended Information For This Host","View Extended Information For This Host");
+		printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,DETAIL_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"このホストの追加情報を見る","このホストの追加情報を見る");
 		printf("</A>");
 
 		if(temp_host->notes_url!=NULL){
@@ -3252,7 +3264,7 @@
 			printf("%s",processed_string);
 			free(processed_string);
 			printf("' TARGET='%s'>",(notes_url_target==NULL)?"_blank":notes_url_target);
-			printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"View Extra Host Notes","View Extra Host Notes");
+			printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"詳細なホスト情報を見る","詳細なホスト情報を見る");
 			printf("</A>");
 		        }
 		if(temp_host->action_url!=NULL){
@@ -3261,14 +3273,14 @@
 			printf("%s",processed_string);
 			free(processed_string);
 			printf("' TARGET='%s'>",(action_url_target==NULL)?"blank":action_url_target);
-			printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"Perform Extra Host Actions","Perform Extra Host Actions");
+			printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"ホストの対応情報を見る","ホストの対応情報を見る");
 			printf("</A>");
 		        }
 
-		printf("<a href='%s?host=%s'><img src='%s%s' border=0 alt='View Service Details For This Host' title='View Service Details For This Host'></a>\n",STATUS_CGI,url_encode(temp_host->name),url_images_path,STATUS_DETAIL_ICON);
+		printf("<a href='%s?host=%s'><img src='%s%s' border=0 alt='このホストのサービス詳細を見る' title='このホストのサービス詳細を見る'></a>\n",STATUS_CGI,url_encode(temp_host->name),url_images_path,STATUS_DETAIL_ICON);
 
 #ifdef USE_STATUSMAP
-		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'></A>",STATUSMAP_CGI,url_encode(temp_host->name),url_images_path,STATUSMAP_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"Locate Host On Map","Locate Host On Map");
+		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'></A>",STATUSMAP_CGI,url_encode(temp_host->name),url_images_path,STATUSMAP_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"マップ上のホストの位置を見る","マップ上のホストの位置を見る");
 #endif
 		printf("</TD>\n");
 		printf("</TR>\n");
@@ -3306,11 +3318,12 @@
 
 	printf("<td valign=top align=center width=33%%>\n");
 
-	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>Service Overview For ");
+	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>");
 	if(show_all_hostgroups==TRUE)
-		printf("All Host Groups");
+		printf("全ホストグループ");
 	else
-		printf("Host Group '%s'",hostgroup_name);
+		printf("ホストグループ '%s'",hostgroup_name);
+	printf("のサービスオーバービュー");
 	printf("</DIV>\n");
 
 	printf("<br>");
@@ -3392,7 +3405,7 @@
 			printf("</P>\n");
 		        }
 		else{
-			printf("<DIV CLASS='errorMessage'>Sorry, but host group '%s' doesn't seem to exist...</DIV>",hostgroup_name);
+			printf("<DIV CLASS='errorMessage'>'%s' というホストグループは存在しないようです...</DIV>",hostgroup_name);
 			hostgroup_error=TRUE;
 		        }
 	        }
@@ -3404,13 +3417,12 @@
 		printf("<div align='center'>\n");
 
 		if(hoststatus_list!=NULL){
-			printf("<DIV CLASS='errorMessage'>It appears as though you do not have permission to view information for any of the hosts you requested...</DIV>\n");
-			printf("<DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-			printf("and check the authorization options in your CGI configuration file.</DIV>\n");
+			printf("<DIV CLASS='errorMessage'>要求したサービスを閲覧する権限が無いようです...</DIV>\n");
+			printf("<DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV>\n");
 		        }
 		else{
-			printf("<DIV CLASS='infoMessage'>There doesn't appear to be any host status information in the status log...<br><br>\n");
-			printf("Make sure that Nagios is running and that you have specified the location of you status log correctly in the configuration files.</DIV>\n");
+			printf("<DIV CLASS='infoMessage'>ステータスログにサービスの情報がまったくありません...<br><br>\n");
+			printf("Nagiosが正常に稼働して、ステータス情報を収集しているか確認してください。</DIV>\n");
 		        }
 
 		printf("</div>\n");
@@ -3442,7 +3454,7 @@
 	printf("<table border=1 CLASS='status'>\n");
 
 	printf("<TR>\n");
-	printf("<TH CLASS='status'>Host</TH><TH CLASS='status'>Status</TH><TH CLASS='status'>Services</TH><TH CLASS='status'>Actions</TH>\n");
+	printf("<TH CLASS='status'>ホスト名</TH><TH CLASS='status'>エイリアス名</TH><TH CLASS='status'>状態</TH><TH CLASS='status'>サービス名</TH><TH CLASS='status'>アクション</TH>\n");
 	printf("</TR>\n");
 
 	/* find all the hosts that belong to the hostgroup */
@@ -3496,22 +3508,22 @@
 	grab_host_macros(temp_host);
 
 	if(hststatus->status==HOST_PENDING){
-		strncpy(status,"PENDING",sizeof(status));
+		strncpy(status,"保留(PENDING)",sizeof(status));
 		status_class="HOSTPENDING";
 		status_bg_class=(odd)?"Even":"Odd";
 	        }
 	else if(hststatus->status==HOST_UP){
-		strncpy(status,"UP",sizeof(status));
+		strncpy(status,"稼働(UP)",sizeof(status));
 		status_class="HOSTUP";
 		status_bg_class=(odd)?"Even":"Odd";
 	        }
 	else if(hststatus->status==HOST_DOWN){
-		strncpy(status,"DOWN",sizeof(status));
+		strncpy(status,"停止(DOWN)",sizeof(status));
 		status_class="HOSTDOWN";
 		status_bg_class="HOSTDOWN";
 	        }
 	else if(hststatus->status==HOST_UNREACHABLE){
-		strncpy(status,"UNREACHABLE",sizeof(status));
+		strncpy(status,"未到達(UNREACHABLE)",sizeof(status));
 		status_class="HOSTUNREACHABLE";
 		status_bg_class="HOSTUNREACHABLE";
 	        }
@@ -3520,6 +3532,9 @@
 
 	printf("<TR CLASS='status%s'>\n",status_bg_class);
 
+	/* find host infomation for this host by sato */
+	temp_host=find_host(hststatus->host_name);
+
 	printf("<TD CLASS='status%s'>\n",status_bg_class);
 
 	printf("<TABLE BORDER=0 WIDTH=100%% cellpadding=0 cellspacing=0>\n");
@@ -3542,6 +3557,9 @@
 	printf("</TABLE>\n");
 	printf("</TD>\n");
 
+	/* add alias by sato */
+	printf("<td CLASS='status%s'>%s</td>\n",status_bg_class,temp_host->alias);
+
 	printf("<td CLASS='status%s'>%s</td>\n",status_class,status);
 
 	printf("<td CLASS='status%s'>\n",status_bg_class);
@@ -3549,14 +3567,14 @@
 	printf("</td>\n");
 
 	printf("<td valign=center CLASS='status%s'>",status_bg_class);
-	printf("<a href='%s?type=%d&host=%s'><img src='%s%s' border=0 alt='View Extended Information For This Host' title='View Extended Information For This Host'></a>\n",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(hststatus->host_name),url_images_path,DETAIL_ICON);
+	printf("<a href='%s?type=%d&host=%s'><img src='%s%s' border=0 alt='このホストの追加情報を見る' title='このホストの追加情報を見る'></a>\n",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(hststatus->host_name),url_images_path,DETAIL_ICON);
 	if(temp_host->notes_url!=NULL){
 		printf("<A HREF='");
 		process_macros(temp_host->notes_url,&processed_string,0);
 		printf("%s",processed_string);
 		free(processed_string);
 		printf("' TARGET='%s'>",(notes_url_target==NULL)?"_blank":notes_url_target);
-		printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"View Extra Host Notes","View Extra Host Notes");
+		printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"詳細なホスト情報を見る","詳細なホスト情報を見る");
 		printf("</A>");
 	        }
 	if(temp_host->action_url!=NULL){
@@ -3565,12 +3583,12 @@
 		printf("%s",processed_string);
 		free(processed_string);
 		printf("' TARGET='%s'>",(action_url_target==NULL)?"_blank":action_url_target);
-		printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"Perform Extra Host Actions","Perform Extra Host Actions");
+		printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"ホストの対応情報を見る","ホストの対応情報を見る");
 		printf("</A>");
 	        }
-	printf("<a href='%s?host=%s'><img src='%s%s' border=0 alt='View Service Details For This Host' title='View Service Details For This Host'></a>\n",STATUS_CGI,url_encode(hststatus->host_name),url_images_path,STATUS_DETAIL_ICON);
+	printf("<a href='%s?host=%s'><img src='%s%s' border=0 alt='このホストのサービス詳細を見る' title='このホストのサービス詳細を見る'></a>\n",STATUS_CGI,url_encode(hststatus->host_name),url_images_path,STATUS_DETAIL_ICON);
 #ifdef USE_STATUSMAP
-	printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'></A>",STATUSMAP_CGI,url_encode(hststatus->host_name),url_images_path,STATUSMAP_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"Locate Host On Map","Locate Host On Map");
+	printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'></A>",STATUSMAP_CGI,url_encode(hststatus->host_name),url_images_path,STATUSMAP_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"マップ上のホストの位置を見る","マップ上のホストの位置を見る");
 #endif
 	printf("</TD>");
 
@@ -3646,20 +3664,20 @@
 	temp_buffer[sizeof(temp_buffer)-1]='\x0';
 
 	if(total_ok>0)
-		printf("<TR><TD CLASS='miniStatusOK'><A HREF='%s?%s&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d OK</A></TD></TR>\n",STATUS_CGI,temp_buffer,SERVICE_OK,host_status_types,service_properties,host_properties,total_ok);
+		printf("<TR><TD CLASS='miniStatusOK'><A HREF='%s?%s&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>正常状態: %d 件<BR>(OK)</A></TD></TR>\n",STATUS_CGI,temp_buffer,SERVICE_OK,host_status_types,service_properties,host_properties,total_ok);
 	if(total_warning>0)
-		printf("<TR><TD CLASS='miniStatusWARNING'><A HREF='%s?%s&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d WARNING</A></TD></TR>\n",STATUS_CGI,temp_buffer,SERVICE_WARNING,host_status_types,service_properties,host_properties,total_warning);
+		printf("<TR><TD CLASS='miniStatusWARNING'><A HREF='%s?%s&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>警告状態: %d 件<BR>(WARNING)</A></TD></TR>\n",STATUS_CGI,temp_buffer,SERVICE_WARNING,host_status_types,service_properties,host_properties,total_warning);
 	if(total_unknown>0)
-		printf("<TR><TD CLASS='miniStatusUNKNOWN'><A HREF='%s?%s&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d UNKNOWN</A></TD></TR>\n",STATUS_CGI,temp_buffer,SERVICE_UNKNOWN,host_status_types,service_properties,host_properties,total_unknown);
+		printf("<TR><TD CLASS='miniStatusUNKNOWN'><A HREF='%s?%s&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>不明状態: %d 件<BR>(UNKNOWN)</A></TD></TR>\n",STATUS_CGI,temp_buffer,SERVICE_UNKNOWN,host_status_types,service_properties,host_properties,total_unknown);
 	if(total_critical>0)
-		printf("<TR><TD CLASS='miniStatusCRITICAL'><A HREF='%s?%s&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d CRITICAL</A></TD></TR>\n",STATUS_CGI,temp_buffer,SERVICE_CRITICAL,host_status_types,service_properties,host_properties,total_critical);
+		printf("<TR><TD CLASS='miniStatusCRITICAL'><A HREF='%s?%s&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>異常状態: %d 件<BR>(CRITICAL)</A></TD></TR>\n",STATUS_CGI,temp_buffer,SERVICE_CRITICAL,host_status_types,service_properties,host_properties,total_critical);
 	if(total_pending>0)
-		printf("<TR><TD CLASS='miniStatusPENDING'><A HREF='%s?%s&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d PENDING</A></TD></TR>\n",STATUS_CGI,temp_buffer,SERVICE_PENDING,host_status_types,service_properties,host_properties,total_pending);
+		printf("<TR><TD CLASS='miniStatusPENDING'><A HREF='%s?%s&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>保留状態: %d 件<BR>(PENDING)</A></TD></TR>\n",STATUS_CGI,temp_buffer,SERVICE_PENDING,host_status_types,service_properties,host_properties,total_pending);
 
 	printf("</TABLE>\n");
 
 	if((total_ok + total_warning + total_unknown + total_critical + total_pending)==0)
-		printf("No matching services");
+		printf("該当するサービスはありません");
 
 	return;
         }
@@ -3687,11 +3705,12 @@
 
 	printf("<td valign=top align=center width=33%%>\n");
 
-	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>Status Summary For ");
+	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>");
 	if(show_all_hostgroups==TRUE)
-		printf("All Host Groups");
+		printf("全ホストグループ");
 	else
-		printf("Host Group '%s'",hostgroup_name);
+		printf("ホストグループ '%s' ",hostgroup_name);
+	printf("のステータスサマリ");
 	printf("</DIV>\n");
 
 	printf("<br>");
@@ -3710,7 +3729,7 @@
 	printf("<table border=1 CLASS='status'>\n");
 
 	printf("<TR>\n");
-	printf("<TH CLASS='status'>Host Group</TH><TH CLASS='status'>Host Status Summary</TH><TH CLASS='status'>Service Status Summary</TH>\n");
+	printf("<TH CLASS='status'>ホストグループ</TH><TH CLASS='status'>ホスト稼動状態の概況</TH><TH CLASS='status'>サービス稼動状態の概況</TH>\n");
 	printf("</TR>\n");
 
 	/* display status summary for all hostgroups */
@@ -3756,13 +3775,12 @@
 		printf("<P><DIV ALIGN=CENTER>\n");
 
 		if(hoststatus_list!=NULL){
-			printf("<DIV CLASS='errorMessage'>It appears as though you do not have permission to view information for any of the hosts you requested...</DIV>\n");
-			printf("<DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-			printf("and check the authorization options in your CGI configuration file.</DIV>\n");
+			printf("<DIV CLASS='errorMessage'>要求したサービスを閲覧する権限が無いようです...</DIV>\n");
+			printf("<DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV>\n");
 		        }
 		else{
-			printf("<DIV CLASS='infoMessage'>There doesn't appear to be any host status information in the status log...<br><br>\n");
-			printf("Make sure that Nagios is running and that you have specified the location of you status log correctly in the configuration files.</DIV>\n");
+			printf("<DIV CLASS='infoMessage'>ステータスログにサービスの情報がまったくありません...<br><br>\n");
+			printf("Nagiosが正常に稼働して、ステータス情報を収集しているか確認してください。</DIV>\n");
 		        }
 
 		printf("</DIV></P>\n");
@@ -3771,7 +3789,7 @@
 	/* we couldn't find the hostgroup */
 	else if(hostgroup_error==TRUE){
 		printf("<P><DIV ALIGN=CENTER>\n");
-		printf("<DIV CLASS='errorMessage'>Sorry, but hostgroup '%s' doesn't seem to exist...</DIV>\n",hostgroup_name);
+		printf("<DIV CLASS='errorMessage'>'%s' というホストグループは存在しないようです...</DIV>\n",hostgroup_name);
 		printf("</DIV></P>\n");
 	        }
 
@@ -3851,7 +3869,7 @@
 
 		problem=TRUE;
 
-		if(temp_hoststatus->status==HOST_UP)
+ 		if(temp_hoststatus->status==HOST_UP)
 			hosts_up++;
 
 		else if(temp_hoststatus->status==HOST_DOWN){
@@ -3898,7 +3916,7 @@
 
 	if(hosts_up>0){
 		printf("<TR>");
-		printf("<TD CLASS='miniStatusUP'><A HREF='%s?hostgroup=%s&style=hostdetail&&hoststatustypes=%d&hostprops=%lu'>%d UP</A></TD>",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UP,host_properties,hosts_up);
+		printf("<TD CLASS='miniStatusUP'><A HREF='%s?hostgroup=%s&style=hostdetail&&hoststatustypes=%d&hostprops=%lu'>稼動状態: %d 件<BR>(UP)</A></TD>",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UP,host_properties,hosts_up);
 		printf("</TR>\n");
 		}
 
@@ -3907,21 +3925,21 @@
 		printf("<TD CLASS='miniStatusDOWN'><TABLE BORDER='0'>\n");
 		printf("<TR>\n");
 
-		printf("<TD CLASS='miniStatusDOWN'><A HREF='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%lu'>%d DOWN</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_DOWN,host_properties,hosts_down);
+		printf("<TD CLASS='miniStatusDOWN'><A HREF='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%lu'>停止状態: %d 件<BR>(DOWN)</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_DOWN,host_properties,hosts_down);
 
 		printf("<TD><TABLE BORDER='0'>\n");
 
 		if(hosts_down_unacknowledged>0)
-			printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Unhandled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_DOWN,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_down_unacknowledged);
+			printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>未解決: %d 件<BR>(Unhandled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_DOWN,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_down_unacknowledged);
 
 		if(hosts_down_scheduled>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_DOWN,HOST_SCHEDULED_DOWNTIME,hosts_down_scheduled);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>スケジュール済: %d 件<BR>(Scheduled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_DOWN,HOST_SCHEDULED_DOWNTIME,hosts_down_scheduled);
 
 		if(hosts_down_acknowledged>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_DOWN,HOST_STATE_ACKNOWLEDGED,hosts_down_acknowledged);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>認知済: %d 件<BR>(Acknowledged)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_DOWN,HOST_STATE_ACKNOWLEDGED,hosts_down_acknowledged);
 
 		if(hosts_down_disabled>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_DOWN,HOST_CHECKS_DISABLED,hosts_down_disabled);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>無効: %d 件<BR>(Disabled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_DOWN,HOST_CHECKS_DISABLED,hosts_down_disabled);
 
 		printf("</TABLE></TD>\n");
 		
@@ -3935,21 +3953,21 @@
 		printf("<TD CLASS='miniStatusUNREACHABLE'><TABLE BORDER='0'>\n");
 		printf("<TR>\n");
 
-		printf("<TD CLASS='miniStatusUNREACHABLE'><A HREF='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%lu'>%d UNREACHABLE</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UNREACHABLE,host_properties,hosts_unreachable);
+		printf("<TD CLASS='miniStatusUNREACHABLE'><A HREF='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%lu'>未到達状態: %d 件<BR>(UNREACHABLE)</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UNREACHABLE,host_properties,hosts_unreachable);
 
 		printf("<TD><TABLE BORDER='0'>\n");
 
 		if(hosts_unreachable_unacknowledged>0)
-			printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Unhandled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UNREACHABLE,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_unreachable_unacknowledged);
+			printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>未解決: %d 件<BR>(Unhandled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UNREACHABLE,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_unreachable_unacknowledged);
 
 		if(hosts_unreachable_scheduled>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UNREACHABLE,HOST_SCHEDULED_DOWNTIME,hosts_unreachable_scheduled);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>スケジュール済: %d 件<BR>(Scheduled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UNREACHABLE,HOST_SCHEDULED_DOWNTIME,hosts_unreachable_scheduled);
 
 		if(hosts_unreachable_acknowledged>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UNREACHABLE,HOST_STATE_ACKNOWLEDGED,hosts_unreachable_acknowledged);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>認知済: %d 件<BR>(Acknowledged)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UNREACHABLE,HOST_STATE_ACKNOWLEDGED,hosts_unreachable_acknowledged);
 
 		if(hosts_unreachable_disabled>0)
-			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UNREACHABLE,HOST_CHECKS_DISABLED,hosts_unreachable_disabled);
+			printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%d'>無効: %d 件<BR>(Disabled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_UNREACHABLE,HOST_CHECKS_DISABLED,hosts_unreachable_disabled);
 
 		printf("</TABLE></TD>\n");
 		
@@ -3959,12 +3977,12 @@
 		}
 
 	if(hosts_pending>0)
-		printf("<TR><TD CLASS='miniStatusPENDING'><A HREF='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%lu'>%d PENDING</A></TD></TR>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_PENDING,host_properties,hosts_pending);
+		printf("<TR><TD CLASS='miniStatusPENDING'><A HREF='%s?hostgroup=%s&style=hostdetail&hoststatustypes=%d&hostprops=%lu'>保留状態: %d 件<BR>(PENDING)</A></TD></TR>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),HOST_PENDING,host_properties,hosts_pending);
 
 	printf("</TABLE>\n");
 
 	if((hosts_up + hosts_down + hosts_unreachable + hosts_pending)==0)
-		printf("No matching hosts");
+		printf("該当するホストはありません");
 
 	return;
         }
@@ -4125,31 +4143,31 @@
 	printf("<TABLE BORDER=0>\n");
 
 	if(services_ok>0)
-		printf("<TR><TD CLASS='miniStatusOK'><A HREF='%s?hostgroup=%s&style=detail&&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d OK</A></TD></TR>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_OK,host_status_types,service_properties,host_properties,services_ok);
+		printf("<TR><TD CLASS='miniStatusOK'><A HREF='%s?hostgroup=%s&style=detail&&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>正常状態: %d 件<BR>(OK)</A></TD></TR>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_OK,host_status_types,service_properties,host_properties,services_ok);
 
 	if(services_warning>0){
 		printf("<TR>\n");
 		printf("<TD CLASS='miniStatusWARNING'><TABLE BORDER='0'>\n");
 		printf("<TR>\n");
 
-		printf("<TD CLASS='miniStatusWARNING'><A HREF='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d WARNING</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,host_status_types,service_properties,host_properties,services_warning);
+		printf("<TD CLASS='miniStatusWARNING'><A HREF='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>警告状態: %d 件<BR>(WARNING)</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,host_status_types,service_properties,host_properties,services_warning);
 
 		printf("<TD><TABLE BORDER='0'>\n");
 
 		if(services_warning_unacknowledged>0)
-			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>%d Unhandled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_warning_unacknowledged);
+			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>未解決: %d 件<BR>(Unhandled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_warning_unacknowledged);
 
 		if(services_warning_host_problem>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>%d on Problem Hosts</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,HOST_DOWN|HOST_UNREACHABLE,services_warning_host_problem);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>ホスト側の問題: %d 件</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,HOST_DOWN|HOST_UNREACHABLE,services_warning_host_problem);
 
 		if(services_warning_scheduled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,SERVICE_SCHEDULED_DOWNTIME,services_warning_scheduled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>スケジュール済: %d 件<BR>(Scheduled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,SERVICE_SCHEDULED_DOWNTIME,services_warning_scheduled);
 
 		if(services_warning_acknowledged>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,SERVICE_STATE_ACKNOWLEDGED,services_warning_acknowledged);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>認知済: %d 件<BR>(Acknowledged)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,SERVICE_STATE_ACKNOWLEDGED,services_warning_acknowledged);
 
 		if(services_warning_disabled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,SERVICE_CHECKS_DISABLED,services_warning_disabled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>無効: %d 件<BR>(Disabled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_WARNING,SERVICE_CHECKS_DISABLED,services_warning_disabled);
 
 		printf("</TABLE></TD>\n");
 		
@@ -4163,24 +4181,24 @@
 		printf("<TD CLASS='miniStatusUNKNOWN'><TABLE BORDER='0'>\n");
 		printf("<TR>\n");
 
-		printf("<TD CLASS='miniStatusUNKNOWN'><A HREF='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d UNKNOWN</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,host_status_types,service_properties,host_properties,services_unknown);
+		printf("<TD CLASS='miniStatusUNKNOWN'><A HREF='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>不明状態: %d 件<BR>(UNKNOWN)</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,host_status_types,service_properties,host_properties,services_unknown);
 
 		printf("<TD><TABLE BORDER='0'>\n");
 
 		if(services_unknown_unacknowledged>0)
-			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>%d Unhandled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_unknown_unacknowledged);
+			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>未解決: %d 件<BR>(Unhandled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_unknown_unacknowledged);
 
 		if(services_unknown_host_problem>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>%d on Problem Hosts</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,HOST_DOWN|HOST_UNREACHABLE,services_unknown_host_problem);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>ホスト側の問題: %d 件</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,HOST_DOWN|HOST_UNREACHABLE,services_unknown_host_problem);
 
 		if(services_unknown_scheduled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,SERVICE_SCHEDULED_DOWNTIME,services_unknown_scheduled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>スケジュール済: %d 件<BR>(Scheduled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,SERVICE_SCHEDULED_DOWNTIME,services_unknown_scheduled);
 
 		if(services_unknown_acknowledged>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,SERVICE_STATE_ACKNOWLEDGED,services_unknown_acknowledged);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>認知済: %d 件<BR>(Acknowledged)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,SERVICE_STATE_ACKNOWLEDGED,services_unknown_acknowledged);
 
 		if(services_unknown_disabled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,SERVICE_CHECKS_DISABLED,services_unknown_disabled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>無効: %d 件<BR>(Disabled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_UNKNOWN,SERVICE_CHECKS_DISABLED,services_unknown_disabled);
 
 		printf("</TABLE></TD>\n");
 		
@@ -4194,24 +4212,24 @@
 		printf("<TD CLASS='miniStatusCRITICAL'><TABLE BORDER='0'>\n");
 		printf("<TR>\n");
 
-		printf("<TD CLASS='miniStatusCRITICAL'><A HREF='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d CRITICAL</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,host_status_types,service_properties,host_properties,services_critical);
+		printf("<TD CLASS='miniStatusCRITICAL'><A HREF='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>異常状態: %d 件<BR>(CRITICAL)</A>&nbsp;:</TD>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,host_status_types,service_properties,host_properties,services_critical);
 
 		printf("<TD><TABLE BORDER='0'>\n");
 
 		if(services_critical_unacknowledged>0)
-			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>%d Unhandled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_critical_unacknowledged);
+			printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>未解決: %d 件<BR>(Unhandled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_critical_unacknowledged);
 
 		if(services_critical_host_problem>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>%d on Problem Hosts</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,HOST_DOWN|HOST_UNREACHABLE,services_critical_host_problem);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d'>ホスト側の問題: %d 件</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,HOST_DOWN|HOST_UNREACHABLE,services_critical_host_problem);
 
 		if(services_critical_scheduled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,SERVICE_SCHEDULED_DOWNTIME,services_critical_scheduled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>スケジュール済: %d 件<BR>(Scheduled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,SERVICE_SCHEDULED_DOWNTIME,services_critical_scheduled);
 
 		if(services_critical_acknowledged>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,SERVICE_STATE_ACKNOWLEDGED,services_critical_acknowledged);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>認知済: %d 件<BR>(Acknowledged)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,SERVICE_STATE_ACKNOWLEDGED,services_critical_acknowledged);
 
 		if(services_critical_disabled>0)
-			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,SERVICE_CHECKS_DISABLED,services_critical_disabled);
+			printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?hostgroup=%s&style=detail&servicestatustypes=%d&serviceprops=%d'>無効: %d 件<BR>(Disabled)</a></td></tr>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_CRITICAL,SERVICE_CHECKS_DISABLED,services_critical_disabled);
 
 		printf("</TABLE></TD>\n");
 		
@@ -4221,12 +4239,12 @@
 		}
 
 	if(services_pending>0)
-		printf("<TR><TD CLASS='miniStatusPENDING'><A HREF='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>%d PENDING</A></TD></TR>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_PENDING,host_status_types,service_properties,host_properties,services_pending);
+		printf("<TR><TD CLASS='miniStatusPENDING'><A HREF='%s?hostgroup=%s&style=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%lu&hostprops=%lu'>保留状態: %d 件<BR>(PENDING)</A></TD></TR>\n",STATUS_CGI,url_encode(temp_hostgroup->group_name),SERVICE_PENDING,host_status_types,service_properties,host_properties,services_pending);
 
 	printf("</TABLE>\n");
 
 	if((services_ok + services_warning + services_unknown + services_critical + services_pending)==0)
-		printf("No matching services");
+		printf("該当するサービスはありません");
 
 	return;
         }
@@ -4254,11 +4272,12 @@
 
 	printf("<td valign=top align=center width=33%%>\n");
 
-	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>Status Grid For ");
+	printf("<DIV ALIGN=CENTER CLASS='statusTitle'>");
 	if(show_all_hostgroups==TRUE)
-		printf("All Host Groups");
+		printf("全ホストグループ");
 	else
-		printf("Host Group '%s'",hostgroup_name);
+		printf("ホストグループ '%s' ",hostgroup_name);
+	printf("のステータスグリッド");
 	printf("</DIV>\n");
 
 	printf("<br>");
@@ -4313,13 +4332,12 @@
 		printf("<P><DIV ALIGN=CENTER>\n");
 
 		if(hoststatus_list!=NULL){
-			printf("<DIV CLASS='errorMessage'>It appears as though you do not have permission to view information for any of the hosts you requested...</DIV>\n");
-			printf("<DIV CLASS='errorDescription'>If you believe this is an error, check the HTTP server authentication requirements for accessing this CGI<br>");
-			printf("and check the authorization options in your CGI configuration file.</DIV>\n");
+			printf("<DIV CLASS='errorMessage'>要求したサービスを閲覧する権限が無いようです...</DIV>\n");
+			printf("<DIV CLASS='errorDescription'>このメッセージが何らかのエラーである場合はHTTPサーバのこのCGIに対するアクセス権限の設定かNagiosのCGI用設定ファイルの認証に関するオプションを調べてみてください</DIV>\n");
 		        }
 		else{
-			printf("<DIV CLASS='infoMessage'>There doesn't appear to be any host status information in the status log...<br><br>\n");
-			printf("Make sure that Nagios is running and that you have specified the location of you status log correctly in the configuration files.</DIV>\n");
+			printf("<DIV CLASS='infoMessage'>ステータスログにサービスの情報がありません...<br><br>\n");
+			printf("Nagiosが正常に稼働して、ステータス情報を収集しているか確認してください。</DIV>\n");
 		        }
 
 		printf("</DIV></P>\n");
@@ -4328,7 +4346,7 @@
 	/* we couldn't find the hostgroup */
 	else if(hostgroup_error==TRUE){
 		printf("<P><DIV ALIGN=CENTER>\n");
-		printf("<DIV CLASS='errorMessage'>Sorry, but hostgroup '%s' doesn't seem to exist...</DIV>\n",hostgroup_name);
+		printf("<DIV CLASS='errorMessage'>'%s' というホストグループは存在しないようです....</DIV>\n",hostgroup_name);
 		printf("</DIV></P>\n");
 	        }
 
@@ -4358,7 +4376,7 @@
 	printf(" (<A HREF='%s?type=%d&hostgroup=%s'>%s</A>)</DIV>",EXTINFO_CGI,DISPLAY_HOSTGROUP_INFO,url_encode(temp_hostgroup->group_name),temp_hostgroup->group_name);
 
 	printf("<TABLE BORDER=1 CLASS='status' ALIGN=CENTER>\n");
-	printf("<TR><TH CLASS='status'>Host</TH><TH CLASS='status'>Services</a></TH><TH CLASS='status'>Actions</TH></TR>\n");
+	printf("<TR><TH CLASS='status'>ホスト名</TH><TH CLASS='status'>エイリアス名</TH><TH CLASS='status'>サービス名</a></TH><TH CLASS='status'>アクション</TH></TR>\n");
 
 	/* find all the hosts that belong to the hostgroup */
 	for(temp_member=temp_hostgroup->members;temp_member!=NULL;temp_member=temp_member->next){
@@ -4433,6 +4451,9 @@
 
 		printf("</TD>\n");
 
+		/* dispay Alias by sato  */
+		printf("<TD>%s</td>",temp_host->alias);
+
 		printf("<TD CLASS='status%s'>",host_status_class);
 
 		/* display all services on the host */
@@ -4478,7 +4499,7 @@
 		printf("<TD CLASS='status%s'>",host_status_class);
 
 		printf("<A HREF='%s?type=%d&host=%s'>\n",EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_host->name));
-		printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,DETAIL_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"View Extended Information For This Host","View Extended Information For This Host");
+		printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,DETAIL_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"このホストの追加情報を見る","このホストの追加情報を見る");
 		printf("</A>");
 
 		if(temp_host->notes_url!=NULL){
@@ -4487,7 +4508,7 @@
 			printf("%s",processed_string);
 			free(processed_string);
 			printf("' TARGET='%s'>",(notes_url_target==NULL)?"_blank":notes_url_target);
-			printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"View Extra Host Notes","View Extra Host Notes");
+			printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,NOTES_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"詳細なホスト情報を見る","詳細なホスト情報を見る");
 			printf("</A>");
 		        }
 		if(temp_host->action_url!=NULL){
@@ -4496,13 +4517,13 @@
 			printf("%s",processed_string);
 			free(processed_string);
 			printf("' TARGET='%s'>",(action_url_target==NULL)?"_blank":action_url_target);
-			printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"Perform Extra Host Actions","Perform Extra Host Actions");
+			printf("<IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'>",url_images_path,ACTION_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"ホストの対応情報を見る","ホストの対応情報を見る");
 			printf("</A>");
 		        }
 
-		printf("<a href='%s?host=%s'><img src='%s%s' border=0 alt='View Service Details For This Host' title='View Service Details For This Host'></a>\n",STATUS_CGI,url_encode(temp_host->name),url_images_path,STATUS_DETAIL_ICON);
+		printf("<a href='%s?host=%s'><img src='%s%s' border=0 alt='このホストのサービス詳細を見る' title='このホストのサービス詳細を見る'></a>\n",STATUS_CGI,url_encode(temp_host->name),url_images_path,STATUS_DETAIL_ICON);
 #ifdef USE_STATUSMAP
-		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'></A>",STATUSMAP_CGI,url_encode(temp_host->name),url_images_path,STATUSMAP_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"Locate Host On Map","Locate Host On Map");
+		printf("<A HREF='%s?host=%s'><IMG SRC='%s%s' BORDER=0 WIDTH=%d HEIGHT=%d ALT='%s' TITLE='%s'></A>",STATUSMAP_CGI,url_encode(temp_host->name),url_images_path,STATUSMAP_ICON,STATUS_ICON_WIDTH,STATUS_ICON_HEIGHT,"マップ上のホストの位置を見る","マップ上のホストの位置を見る");
 #endif
 		printf("</TD>\n");
 
@@ -4997,115 +5018,115 @@
 		printf("<table border=1 class='filter' cellspacing=0 cellpadding=0>\n");
 		printf("<tr><td class='filter'>\n");
 		printf("<table border=0 cellspacing=2 cellpadding=0>\n");
-		printf("<tr><td colspan=2 valign=top align=left CLASS='filterTitle'>Display Filters:</td></tr>");
-		printf("<tr><td valign=top align=left CLASS='filterName'>Host Status Types:</td>");
+		printf("<tr><td colspan=2 valign=top align=left CLASS='filterTitle'>表示フィルタ:</td></tr>");
+		printf("<tr><td valign=top align=left CLASS='filterName'>ホスト状態の種類:</td>");
 		printf("<td valign=top align=left CLASS='filterValue'>");
 		if(host_status_types==all_host_status_types)
-			printf("All");
+			printf("全て");
 		else if(host_status_types==all_host_problems)
-			printf("All problems");
+			printf("全障害");
 		else{
 			found=0;
 			if(host_status_types & HOST_PENDING){
-				printf(" Pending");
+				printf("保留状態(PENDING)");
 				found=1;
 		                }
 			if(host_status_types & HOST_UP){
-				printf("%s Up",(found==1)?" |":"");
+				printf("%s 稼働状態(UP)",(found==1)?" |":"");
 				found=1;
 		                }
 			if(host_status_types & HOST_DOWN){
-				printf("%s Down",(found==1)?" |":"");
+				printf("%s 停止状態(DOWN)",(found==1)?" |":"");
 				found=1;
 		                }
 			if(host_status_types & HOST_UNREACHABLE)
-				printf("%s Unreachable",(found==1)?" |":"");
+				printf("%s 未到達状態(UNREACHABLE)",(found==1)?" |":"");
 	                }
 		printf("</td></tr>");
-		printf("<tr><td valign=top align=left CLASS='filterName'>Host Properties:</td>");
+		printf("<tr><td valign=top align=left CLASS='filterName'>ホストプロパティ:</td>");
 		printf("<td valign=top align=left CLASS='filterValue'>");
 		if(host_properties==0)
-			printf("Any");
+			printf("全て");
 		else{
 			found=0;
 			if(host_properties & HOST_SCHEDULED_DOWNTIME){
-				printf(" In Scheduled Downtime");
+				printf("現在ダウンタイム中のもの");
 				found=1;
 		                }
 			if(host_properties & HOST_NO_SCHEDULED_DOWNTIME){
-				printf("%s Not In Scheduled Downtime",(found==1)?" &amp;":"");
+				printf("%s ダウンタイムではないもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_STATE_ACKNOWLEDGED){
-				printf("%s Has Been Acknowledged",(found==1)?" &amp;":"");
+				printf("%s 認知済みなもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_STATE_UNACKNOWLEDGED){
-				printf("%s Has Not Been Acknowledged",(found==1)?" &amp;":"");
+				printf("%s 認知済みではないもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_CHECKS_DISABLED){
-				printf("%s Checks Disabled",(found==1)?" &amp;":"");
+				printf("%s チェックが無効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_CHECKS_ENABLED){
-				printf("%s Checks Enabled",(found==1)?" &amp;":"");
+				printf("%s チェックが有効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_EVENT_HANDLER_DISABLED){
-				printf("%s Event Handler Disabled",(found==1)?" &amp;":"");
+				printf("%s イベントハンドラが無効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_EVENT_HANDLER_ENABLED){
-				printf("%s Event Handler Enabled",(found==1)?" &amp;":"");
+				printf("%s イベントハンドラが有効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_FLAP_DETECTION_DISABLED){
-				printf("%s Flap Detection Disabled",(found==1)?" &amp;":"");
+				printf("%s フラップ検知が無効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_FLAP_DETECTION_ENABLED){
-				printf("%s Flap Detection Enabled",(found==1)?" &amp;":"");
+				printf("%s フラップ検知が有効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_IS_FLAPPING){
-				printf("%s Is Flapping",(found==1)?" &amp;":"");
+				printf("%s フラップしているもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_IS_NOT_FLAPPING){
-				printf("%s Is Not Flapping",(found==1)?" &amp;":"");
+				printf("%s フラップしていないもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_NOTIFICATIONS_DISABLED){
-				printf("%s Notifications Disabled",(found==1)?" &amp;":"");
+				printf("%s 通知が無効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_NOTIFICATIONS_ENABLED){
-				printf("%s Notifications Enabled",(found==1)?" &amp;":"");
+				printf("%s 通知が有効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_PASSIVE_CHECKS_DISABLED){
-				printf("%s Passive Checks Disabled",(found==1)?" &amp;":"");
+				printf("%s パッシブチェックが無効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_PASSIVE_CHECKS_ENABLED){
-				printf("%s Passive Checks Enabled",(found==1)?" &amp;":"");
+				printf("%s パッシブチェックが有効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_PASSIVE_CHECK){
-				printf("%s Passive Checks",(found==1)?" &amp;":"");
+				printf("%s パッシブチェックしているもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_ACTIVE_CHECK){
-				printf("%s Active Checks",(found==1)?" &amp;":"");
+				printf("%s アクティブチェックしているもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_HARD_STATE){
-				printf("%s In Hard State",(found==1)?" &amp;":"");
+				printf("%s ハード状態のもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(host_properties & HOST_SOFT_STATE){
-				printf("%s In Soft State",(found==1)?" &amp;":"");
+				printf("%s ソフト状態のもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 	                }
@@ -5113,120 +5134,120 @@
 		printf("</tr>\n");
 
 
-		printf("<tr><td valign=top align=left CLASS='filterName'>Service Status Types:</td>");
+		printf("<tr><td valign=top align=left CLASS='filterName'>サービス状態の種類:</td>");
 		printf("<td valign=top align=left CLASS='filterValue'>");
 		if(service_status_types==all_service_status_types)
-			printf("All");
+			printf("全て");
 		else if(service_status_types==all_service_problems)
-			printf("All Problems");
+			printf("全障害");
 		else{
 			found=0;
 			if(service_status_types & SERVICE_PENDING){
-				printf(" Pending");
+				printf("保留状態(PENDING)");
 				found=1;
 		                }
 			if(service_status_types & SERVICE_OK){
-				printf("%s Ok",(found==1)?" |":"");
+				printf("%s 正常状態(OK)",(found==1)?" |":"");
 				found=1;
 		                }
 			if(service_status_types & SERVICE_UNKNOWN){
-				printf("%s Unknown",(found==1)?" |":"");
+				printf("%s 不明状態(UNKNOWN)",(found==1)?" |":"");
 				found=1;
 		                }
 			if(service_status_types & SERVICE_WARNING){
-				printf("%s Warning",(found==1)?" |":"");
+				printf("%s 警告状態(WARNING)",(found==1)?" |":"");
 				found=1;
 		                }
 			if(service_status_types & SERVICE_CRITICAL){
-				printf("%s Critical",(found==1)?" |":"");
+				printf("%s 異常状態(CRITICAL)",(found==1)?" |":"");
 				found=1;
 		                }
 	                }
 		printf("</td></tr>");
-		printf("<tr><td valign=top align=left CLASS='filterName'>Service Properties:</td>");
+		printf("<tr><td valign=top align=left CLASS='filterName'>サービスプロパティ:</td>");
 		printf("<td valign=top align=left CLASS='filterValue'>");
 		if(service_properties==0)
-			printf("Any");
+			printf("全て");
 		else{
 			found=0;
 			if(service_properties & SERVICE_SCHEDULED_DOWNTIME){
-				printf(" In Scheduled Downtime");
+				printf("現在ダウンタイム中なもの");
 				found=1;
 		                }
 			if(service_properties & SERVICE_NO_SCHEDULED_DOWNTIME){
-				printf("%s Not In Scheduled Downtime",(found==1)?" &amp;":"");
+				printf("%s ダウンタイム中ではないもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_STATE_ACKNOWLEDGED){
-				printf("%s Has Been Acknowledged",(found==1)?" &amp;":"");
+				printf("%s 認知済みなもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_STATE_UNACKNOWLEDGED){
-				printf("%s Has Not Been Acknowledged",(found==1)?" &amp;":"");
+				printf("%s 認知済みではないもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_CHECKS_DISABLED){
-				printf("%s Active Checks Disabled",(found==1)?" &amp;":"");
+				printf("%s アクティブチェックが無効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_CHECKS_ENABLED){
-				printf("%s Active Checks Enabled",(found==1)?" &amp;":"");
+				printf("%s アクティブチェックが有効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_EVENT_HANDLER_DISABLED){
-				printf("%s Event Handler Disabled",(found==1)?" &amp;":"");
+				printf("%s イベントハンドラが無効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_EVENT_HANDLER_ENABLED){
-				printf("%s Event Handler Enabled",(found==1)?" &amp;":"");
+				printf("%s イベントハンドラが有効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_FLAP_DETECTION_DISABLED){
-				printf("%s Flap Detection Disabled",(found==1)?" &amp;":"");
+				printf("%s フラップ検知が無効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_FLAP_DETECTION_ENABLED){
-				printf("%s Flap Detection Enabled",(found==1)?" &amp;":"");
+				printf("%s フラップ検知が有効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_IS_FLAPPING){
-				printf("%s Is Flapping",(found==1)?" &amp;":"");
+				printf("%s フラップしているもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_IS_NOT_FLAPPING){
-				printf("%s Is Not Flapping",(found==1)?" &amp;":"");
+				printf("%s フラップしていないもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_NOTIFICATIONS_DISABLED){
-				printf("%s Notifications Disabled",(found==1)?" &amp;":"");
+				printf("%s 通知が無効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_NOTIFICATIONS_ENABLED){
-				printf("%s Notifications Enabled",(found==1)?" &amp;":"");
+				printf("%s 通知が有効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_PASSIVE_CHECKS_DISABLED){
-				printf("%s Passive Checks Disabled",(found==1)?" &amp;":"");
+				printf("%s パッシブチェックが無効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_PASSIVE_CHECKS_ENABLED){
-				printf("%s Passive Checks Enabled",(found==1)?" &amp;":"");
+				printf("%s パッシブチェックが有効なもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_PASSIVE_CHECK){
-				printf("%s Passive Checks",(found==1)?" &amp;":"");
+				printf("%s パッシブチェックしているもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_ACTIVE_CHECK){
-				printf("%s Active Checks",(found==1)?" &amp;":"");
+				printf("%s アクティブチェックしているもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_HARD_STATE){
-				printf("%s In Hard State",(found==1)?" &amp;":"");
+				printf("%s ハード状態のもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 			if(service_properties & SERVICE_SOFT_STATE){
-				printf("%s In Soft State",(found==1)?" &amp;":"");
+				printf("%s ソフト状態のもの",(found==1)?" &amp;":"");
 				found=1;
 		                }
 	                }
diff -urN nagios-3.2.3.orig/cgi/statusmap.c nagios-3.2.3/cgi/statusmap.c
--- nagios-3.2.3.orig/cgi/statusmap.c	2010-12-12 00:47:54.000000000 +0900
+++ nagios-3.2.3/cgi/statusmap.c	2010-12-12 19:59:07.000000000 +0900
@@ -49,6 +49,7 @@
 
 extern char main_config_file[MAX_FILENAME_LENGTH];
 extern char url_html_path[MAX_FILENAME_LENGTH];
+extern char ttf_file[MAX_FILENAME_LENGTH];
 extern char physical_images_path[MAX_FILENAME_LENGTH];
 extern char url_images_path[MAX_FILENAME_LENGTH];
 extern char url_logo_images_path[MAX_FILENAME_LENGTH];
@@ -92,6 +93,7 @@
 #define LAYOUT_CIRCULAR_MARKUP          5
 #define LAYOUT_CIRCULAR_BALLOON         6
 
+#define SMALL_FONT_SIZE  10
 
 typedef struct layer_struct{
 	char *layer_name;
@@ -341,8 +343,9 @@
 		printf("<html>\n");
 		printf("<head>\n");
 		printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
+		printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
 		printf("<title>\n");
-		printf("Network Map\n");
+		printf("ネットワーク図\n");
 		printf("</title>\n");
 
 		if(use_stylesheet==TRUE){
@@ -628,9 +631,9 @@
 		printf("<td align=left valign=top>\n");
 
 		if(show_all_hosts==TRUE)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Network Map For All Hosts");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"全ホストのネットワーク図");
 		else
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Network Map For Host <I>%s</I>",host_name);
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"<I>%s</I>のネットワーク図",host_name);
 		temp_buffer[sizeof(temp_buffer)-1]='\x0';
 		display_info_table(temp_buffer,TRUE,&current_authdata);
 
@@ -638,11 +641,11 @@
 		printf("<TR><TD CLASS='linkBox'>\n");
 
 		if(show_all_hosts==FALSE){
-			printf("<a href='%s?host=all&max_width=%d&max_height=%d'>View Status Map For All Hosts</a><BR>",STATUSMAP_CGI,max_image_width,max_image_height);
-			printf("<a href='%s?host=%s'>View Status Detail For This Host</a><BR>\n",STATUS_CGI,url_encode(host_name));
+			printf("<a href='%s?host=all&max_width=%d&max_height=%d'>全ホストのステータスマップを見る</a><BR>",STATUSMAP_CGI,max_image_width,max_image_height);
+			printf("<a href='%s?host=%s'>このホストの稼動状態を見る</a><BR>\n",STATUS_CGI,url_encode(host_name));
 		        }
-		printf("<a href='%s?host=all'>View Status Detail For All Hosts</a><BR>\n",STATUS_CGI);
-		printf("<a href='%s?hostgroup=all'>View Status Overview For All Hosts</a>\n",STATUS_CGI);
+		printf("<a href='%s?host=all'>全ホストの稼動状態を見る</a><BR>\n",STATUS_CGI);
+		printf("<a href='%s?hostgroup=all'>全ホストのステータスオーバービューを見る</a>\n",STATUS_CGI);
 
 		printf("</TD></TR>\n");
 		printf("</TABLE>\n");
@@ -684,7 +687,7 @@
 
 			printf("<table border=0 cellpadding=0 cellspacing=2>\n");
 			printf("<tr>\n");
-			printf("<td valign=center class='zoomTitle'>Zoom Out&nbsp;&nbsp;</td>\n");
+			printf("<td valign=center class='zoomTitle'>縮小(Zoom Out)&nbsp;&nbsp;</td>\n");
 
 			for(zoom=0;zoom<=10;zoom++){
 
@@ -699,7 +702,7 @@
 				printf("<img src='%s%s' border=0 alt='%d' title='%d'></a></td>\n",url_images_path,(current_zoom_granularity==zoom)?ZOOM2_ICON:ZOOM1_ICON,zoom,zoom);
 		                }
 
-			printf("<td valign=center class='zoomTitle'>&nbsp;&nbsp;Zoom In</td>\n");
+			printf("<td valign=center class='zoomTitle'>&nbsp;&nbsp;拡大(Zoom In)</td>\n");
 			printf("</tr>\n");
 			printf("</table>\n");
 
@@ -726,40 +729,40 @@
 		printf("<table border=0>\n");
 
 		printf("<tr><td CLASS='optBoxItem'>\n");
-		printf("Layout Method:<br>\n");
+		printf("レイアウト方法:<br>\n");
 		printf("<select name='layout'>\n");
 #ifndef DUMMY_INSTALL
-		printf("<option value=%d %s>User-supplied coords\n",LAYOUT_USER_SUPPLIED,(layout_method==LAYOUT_USER_SUPPLIED)?"selected":"");
+		printf("<option value=%d %s>ユーザ定義\n",LAYOUT_USER_SUPPLIED,(layout_method==LAYOUT_USER_SUPPLIED)?"selected":"");
 #endif
-		printf("<option value=%d %s>Depth layers\n",LAYOUT_SUBLAYERS,(layout_method==LAYOUT_SUBLAYERS)?"selected":"");
-		printf("<option value=%d %s>Collapsed tree\n",LAYOUT_COLLAPSED_TREE,(layout_method==LAYOUT_COLLAPSED_TREE)?"selected":"");
-		printf("<option value=%d %s>Balanced tree\n",LAYOUT_BALANCED_TREE,(layout_method==LAYOUT_BALANCED_TREE)?"selected":"");
-		printf("<option value=%d %s>Circular\n",LAYOUT_CIRCULAR,(layout_method==LAYOUT_CIRCULAR)?"selected":"");
-		printf("<option value=%d %s>Circular (Marked Up)\n",LAYOUT_CIRCULAR_MARKUP,(layout_method==LAYOUT_CIRCULAR_MARKUP)?"selected":"");
-		printf("<option value=%d %s>Circular (Balloon)\n",LAYOUT_CIRCULAR_BALLOON,(layout_method==LAYOUT_CIRCULAR_BALLOON)?"selected":"");
+		printf("<option value=%d %s>階層\n",LAYOUT_SUBLAYERS,(layout_method==LAYOUT_SUBLAYERS)?"selected":"");
+		printf("<option value=%d %s>ツリー\n",LAYOUT_COLLAPSED_TREE,(layout_method==LAYOUT_COLLAPSED_TREE)?"selected":"");
+		printf("<option value=%d %s>均等ツリー\n",LAYOUT_BALANCED_TREE,(layout_method==LAYOUT_BALANCED_TREE)?"selected":"");
+		printf("<option value=%d %s>円\n",LAYOUT_CIRCULAR,(layout_method==LAYOUT_CIRCULAR)?"selected":"");
+		printf("<option value=%d %s>円(マーク付き)\n",LAYOUT_CIRCULAR_MARKUP,(layout_method==LAYOUT_CIRCULAR_MARKUP)?"selected":"");
+		printf("<option value=%d %s>円(バルーン付き)\n",LAYOUT_CIRCULAR_BALLOON,(layout_method==LAYOUT_CIRCULAR_BALLOON)?"selected":"");
 		printf("</select>\n");
 		printf("</td>\n");
 		printf("<td CLASS='optBoxItem'>\n");
-		printf("Scaling factor:<br>\n");
+		printf("拡大縮小:<br>\n");
 		printf("<input type='text' name='scaling_factor' maxlength='5' size='4' value='%2.1f'>\n",(user_supplied_scaling==TRUE)?user_scaling_factor:0.0);
 		printf("</td></tr>\n");
 
 		/*
 		printf("<tr><td CLASS='optBoxItem'>\n");
-		printf("Max image width:<br>\n");
+		printf("最大画像横幅:<br>\n");
 		printf("<input type='text' name='max_width' maxlength='5' size='4' value='%d'>\n",max_image_width);
 		printf("</td>\n");
 		printf("<td CLASS='optBoxItem'>\n");
-		printf("Max image height:<br>\n");
+		printf("最大画像縦幅:<br>\n");
 		printf("<input type='text' name='max_height' maxlength='5' size='4' value='%d'>\n",max_image_height);
 		printf("</td></tr>\n");
 
 		printf("<tr><td CLASS='optBoxItem'>\n");
-		printf("Proximity width:<br>\n");
+		printf("接近横幅:<br>\n");
 		printf("<input type='text' name='proximity_width' maxlength='5' size='4' value='%d'>\n",proximity_width);
 		printf("</td>\n");
 		printf("<td CLASS='optBoxItem'>\n");
-		printf("Proximity height:<br>\n");
+		printf("接近縦幅:<br>\n");
 		printf("<input type='text' name='proximity_height' maxlength='5' size='4' value='%d'>\n",proximity_height);
 		printf("</td></tr>\n");
 		*/
@@ -769,7 +772,7 @@
 		printf("<input type='hidden' name='proximity_width' value='%d'>\n",proximity_width);
 		printf("<input type='hidden' name='proximity_height' value='%d'>\n",proximity_height);
 
-		printf("<tr><td CLASS='optBoxItem'>Drawing Layers:<br>\n");
+		printf("<tr><td CLASS='optBoxItem'>描画レイヤー:<br>\n");
 		printf("<select multiple name='layer' size='4'>\n");
 		for(temp_hostgroup=hostgroup_list;temp_hostgroup!=NULL;temp_hostgroup=temp_hostgroup->next){
 			if(is_authorized_for_hostgroup(temp_hostgroup,&current_authdata)==FALSE)
@@ -784,16 +787,16 @@
 			printf("<option value='%s' %s>%s\n",escape_string(temp_hostgroup->group_name),(found==1)?"SELECTED":"",temp_hostgroup->alias);
 		        }
 		printf("</select>\n");
-		printf("</td><td CLASS='optBoxItem' valign=top>Layer mode:<br>");
-		printf("<input type='radio' name='layermode' value='include' %s>Include<br>\n",(exclude_layers==FALSE)?"CHECKED":"");
-		printf("<input type='radio' name='layermode' value='exclude' %s>Exclude\n",(exclude_layers==TRUE)?"CHECKED":"");
+		printf("</td><td CLASS='optBoxItem' valign=top>レイヤーモード:<br>");
+		printf("<input type='radio' name='layermode' value='include' %s>包括<br>\n",(exclude_layers==FALSE)?"CHECKED":"");
+		printf("<input type='radio' name='layermode' value='exclude' %s>除外\n",(exclude_layers==TRUE)?"CHECKED":"");
 		printf("</td></tr>\n");
 
 		printf("<tr><td CLASS='optBoxItem'>\n");
-		//printf("Suppress popups:<br>\n");
+		//printf("ポップアップを非表示にする:<br>\n");
 		//printf("<input type='checkbox' name='nopopups' %s>\n",(display_popups==FALSE)?"CHECKED":"");
 		printf("</td><td CLASS='optBoxItem'>\n");
-		printf("<input type='submit' value='Update'>\n");
+		printf("<input type='submit' value='更新'>\n");
 		printf("</td></tr>\n");
 
 		/* display context-sensitive help */
@@ -1851,16 +1854,24 @@
 
 
 /* draws text */
+/* MEMO::GDをマルチバイト対応に変更したときに文字を日本語化する */
 void draw_text(char *buffer,int x,int y,int text_color){
 	int string_width=0;
 	int string_height=0;
+	int brect[8];
 
 	/* write the string to the generated image... */
 	string_height=gdFontSmall->h;
 	string_width=gdFontSmall->w*strlen(buffer);
 	if(layout_method!=LAYOUT_CIRCULAR_MARKUP)
 		gdImageFilledRectangle(map_image,x-(string_width/2)-2,y-(2*string_height),x+(string_width/2)+2,y-string_height,color_white);
-	gdImageString(map_image,gdFontSmall,x-(string_width/2),y-(2*string_height),(unsigned char *)buffer,text_color);
+
+	/*** TrueTypeFont ***/
+	if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+		gdImageStringTTF(map_image, &brect[0], text_color, ttf_file, SMALL_FONT_SIZE, 0.0, x-(string_width/2), y-(2*string_height), (unsigned char *)buffer);
+	}else{
+		gdImageString(map_image,gdFontSmall,x-(string_width/2),y-(2*string_height),(unsigned char *)buffer,text_color);
+	}
 
 	return;
         }
@@ -1889,23 +1900,43 @@
 
 		/* draw the status string */
 		if(temp_hoststatus->status==HOST_DOWN){
-			strncpy(temp_buffer,"Down",sizeof(temp_buffer));
+			if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+				strncpy(temp_buffer,"停止",sizeof(temp_buffer));
+			}else{
+				strncpy(temp_buffer,"Down",sizeof(temp_buffer));
+			}
 			status_color=color_red;
                         }
 		else if(temp_hoststatus->status==HOST_UNREACHABLE){
-			strncpy(temp_buffer,"Unreachable",sizeof(temp_buffer));
+			if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+				strncpy(temp_buffer,"未到達",sizeof(temp_buffer));
+			}else{
+				strncpy(temp_buffer,"Unreachable",sizeof(temp_buffer));
+			}
 			status_color=color_red;
                         }
 		else if(temp_hoststatus->status==HOST_UP){
-			strncpy(temp_buffer,"Up",sizeof(temp_buffer));
+			if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+				strncpy(temp_buffer,"稼働",sizeof(temp_buffer));
+			}else{
+				strncpy(temp_buffer,"Up",sizeof(temp_buffer));
+			}
 			status_color=color_green;
                         }
 		else if(temp_hoststatus->status==HOST_PENDING){
-			strncpy(temp_buffer,"Pending",sizeof(temp_buffer));
+			if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+				strncpy(temp_buffer,"保留",sizeof(temp_buffer));
+			}else{
+				strncpy(temp_buffer,"Pending",sizeof(temp_buffer));
+			}
 			status_color=color_grey;
                         }
 		else{
-			strncpy(temp_buffer,"Unknown",sizeof(temp_buffer));
+			if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+				strncpy(temp_buffer,"不明",sizeof(temp_buffer));
+			}else{
+				strncpy(temp_buffer,"Pending",sizeof(temp_buffer));
+			}
 			status_color=color_orange;
 	                }
 
@@ -1935,14 +1966,14 @@
 	int seconds;
 
 	if(hst==NULL){
-		printf("Host data not found");
+		printf("ホストデータが見つかりません。");
 		return;
 	        }
 
 	/* find the status entry for this host */
 	temp_status=find_hoststatus(hst->name);
 	if(temp_status==NULL){
-		printf("Host status information not found");
+		printf("ホストのステータス情報が見つかりません。");
 		return;
 	        }
 
@@ -1965,34 +1996,34 @@
 	printf("\\\" border=0 width=40 height=40></td>");
 	printf("<td class=\\\"popupText\\\"><i>%s</i></td></tr>",(hst->icon_image_alt==NULL)?"":html_encode(hst->icon_image_alt,TRUE));
 
-	printf("<tr><td class=\\\"popupText\\\">Name:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",escape_string(hst->name));
-	printf("<tr><td class=\\\"popupText\\\">Alias:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",escape_string(hst->alias));
-	printf("<tr><td class=\\\"popupText\\\">Address:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",html_encode(hst->address,TRUE));
-	printf("<tr><td class=\\\"popupText\\\">State:</td><td class=\\\"popupText\\\"><b>");
+	printf("<tr><td class=\\\"popupText\\\">名前:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",escape_string(hst->name));
+	printf("<tr><td class=\\\"popupText\\\">エイリアス:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",escape_string(hst->alias));
+	printf("<tr><td class=\\\"popupText\\\">アドレス:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",html_encode(hst->address,TRUE));
+	printf("<tr><td class=\\\"popupText\\\">ステータス:</td><td class=\\\"popupText\\\"><b>");
 
 	/* get the status of the host (pending, up, down, or unreachable) */
 	if(temp_status->status==HOST_DOWN){
-		printf("<font color=red>Down");
+		printf("<font color=red>停止状態(DOWN)");
 		if(temp_status->problem_has_been_acknowledged==TRUE)
-			printf(" (Acknowledged)");
+			printf(" (認知済)");
 		printf("</font>");
 	        }
 
 	else if(temp_status->status==HOST_UNREACHABLE){
-		printf("<font color=red>Unreachable");
+		printf("<font color=red>未到達状態(UNREACHABLE)");
 		if(temp_status->problem_has_been_acknowledged==TRUE)
-			printf(" (Acknowledged)");
+			printf(" (認知済み)");
 		printf("</font>");
 	        }
 
 	else if(temp_status->status==HOST_UP)
-		printf("<font color=green>Up</font>");
+		printf("<font color=green>稼動状態(UP)</font>");
 
 	else if(temp_status->status==HOST_PENDING)
-		printf("Pending");
+		printf("保留状態(PENDING)");
 
 	printf("</b></td></tr>");
-	printf("<tr><td class=\\\"popupText\\\">Status Information:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",(temp_status->plugin_output==NULL)?"":temp_status->plugin_output);
+	printf("<tr><td class=\\\"popupText\\\">ステータス情報:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",(temp_status->plugin_output==NULL)?"":temp_status->plugin_output);
 
 	current_time=time(NULL);
 	if(temp_status->last_state_change==(time_t)0)
@@ -2000,25 +2031,25 @@
 	else
 		t=current_time-temp_status->last_state_change;
 	get_time_breakdown((unsigned long)t,&days,&hours,&minutes,&seconds);
-	snprintf(state_duration,sizeof(state_duration)-1,"%2dd %2dh %2dm %2ds%s",days,hours,minutes,seconds,(temp_status->last_state_change==(time_t)0)?"+":"");
+	snprintf(state_duration,sizeof(state_duration)-1,"%2d日間と%2d時間%2d分%2d秒",days,hours,minutes,seconds,(temp_status->last_state_change==(time_t)0)?"+":"");
 	state_duration[sizeof(state_duration)-1]='\x0';
-	printf("<tr><td class=\\\"popupText\\\">State Duration:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",state_duration);
+	printf("<tr><td class=\\\"popupText\\\">経過時間:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",state_duration);
 
 	get_time_string(&temp_status->last_check,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-	printf("<tr><td class=\\\"popupText\\\">Last Status Check:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",(temp_status->last_check==(time_t)0)?"N/A":date_time);
+	printf("<tr><td class=\\\"popupText\\\">最終チェック時刻:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",(temp_status->last_check==(time_t)0)?"N/A":date_time);
 	get_time_string(&temp_status->last_state_change,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
-	printf("<tr><td class=\\\"popupText\\\">Last State Change:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",(temp_status->last_state_change==(time_t)0)?"N/A":date_time);
+	printf("<tr><td class=\\\"popupText\\\">最終ステータス変化時刻:</td><td class=\\\"popupText\\\"><b>%s</b></td></tr>",(temp_status->last_state_change==(time_t)0)?"N/A":date_time);
 
-	printf("<tr><td class=\\\"popupText\\\">Parent Host(s):</td><td class=\\\"popupText\\\"><b>");
+	printf("<tr><td class=\\\"popupText\\\">親ホスト:</td><td class=\\\"popupText\\\"><b>");
 	if(hst->parent_hosts==NULL)
-		printf("None (This is a root host)");
+		printf("無し(このホストが最上位)");
 	else{
 		for(temp_hostsmember=hst->parent_hosts;temp_hostsmember!=NULL;temp_hostsmember=temp_hostsmember->next)
 			printf("%s%s",(temp_hostsmember==hst->parent_hosts)?"":", ",html_encode(temp_hostsmember->host_name,TRUE));
 	        }
 	printf("</b></td></tr>");
 
-	printf("<tr><td class=\\\"popupText\\\">Immediate Child Hosts:</td><td class=\\\"popupText\\\"><b>");
+	printf("<tr><td class=\\\"popupText\\\">直近の子ホスト数:</td><td class=\\\"popupText\\\"><b>");
 	printf("%d",number_of_immediate_child_hosts(hst));
 	printf("</b></td></tr>");
 
@@ -2028,16 +2059,16 @@
 
 	service_totals=get_servicestatus_count(hst->name,SERVICE_OK);
 	if(service_totals>0)
-		printf("- <font color=green>%d ok</font><br>",service_totals);
+		printf("- <font color=green>正常状態: %d 件<br>(OK)</font><br>",service_totals);
 	service_totals=get_servicestatus_count(hst->name,SERVICE_CRITICAL);
 	if(service_totals>0)
-		printf("- <font color=red>%d critical</font><br>",service_totals);
+		printf("- <font color=red>異常状態: %d 件<br>(CRITICAL)</font><br>",service_totals);
 	service_totals=get_servicestatus_count(hst->name,SERVICE_WARNING);
 	if(service_totals>0)
-		printf("- <font color=orange>%d warning</font><br>",service_totals);
+		printf("- <font color=orange>警告状態: %d 件<br>(WARNING)</font><br>",service_totals);
 	service_totals=get_servicestatus_count(hst->name,SERVICE_UNKNOWN);
 	if(service_totals>0)
-		printf("- <font color=orange>%d unknown</font><br>",service_totals);
+		printf("- <font color=orange>不明状態: %d 件<br>(UNKNOWN)</font><br>",service_totals);
 	service_totals=get_servicestatus_count(hst->name,SERVICE_PENDING);
 	if(service_totals>0)
 		printf("- %d pending<br>",service_totals);
diff -urN nagios-3.2.3.orig/cgi/statuswml.c nagios-3.2.3/cgi/statuswml.c
--- nagios-3.2.3.orig/cgi/statuswml.c	2009-06-19 13:30:26.000000000 +0900
+++ nagios-3.2.3/cgi/statuswml.c	2010-12-12 19:59:07.000000000 +0900
@@ -21,6 +21,11 @@
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
  *************************************************************************/
 
+/*************************************************************************
+ * Translation to Japanese by Shogo Sato (sato@x-trans.jp)
+ * $Id: nagios-1.3-ja.patch,v 1.1 2005/12/13 01:20:29 sato Exp $
+ * 
+ **************************************************************************/
 #include "../include/config.h"
 #include "../include/common.h"
 #include "../include/objects.h"
@@ -120,7 +125,7 @@
 	/* read the CGI configuration file */
 	result=read_cgi_config_file(get_cgi_config_location());
 	if(result==ERROR){
-		printf("<P>Error: Could not open CGI configuration file '%s' for reading!</P>\n",get_cgi_config_location());
+		printf("<P>エラー: CGI設定ファイル'%s'が開けません。</P>\n",get_cgi_config_location());
 		document_footer();
 		return ERROR;
 	        }
@@ -128,7 +133,7 @@
 	/* read the main configuration file */
 	result=read_main_config_file(main_config_file);
 	if(result==ERROR){
-		printf("<P>Error: Could not open main configuration file '%s' for reading!</P>\n",main_config_file);
+		printf("<P>エラー: メイン設定ファイル'%s'が開けません。</P>\n",main_config_file);
 		document_footer();
 		return ERROR;
 	        }
@@ -136,7 +141,7 @@
 	/* read all object configuration data */
 	result=read_all_object_configuration_data(main_config_file,READ_ALL_OBJECT_DATA);
 	if(result==ERROR){
-		printf("<P>Error: Could not read some or all object configuration data!</P>\n");
+		printf("<P>エラー: オブジェクト設定ファイルが開けません。</P>\n");
 		document_footer();
 		return ERROR;
                 }
@@ -144,7 +149,7 @@
 	/* read all status data */
 	result=read_all_status_data(get_cgi_config_location(),READ_ALL_STATUS_DATA);
 	if(result==ERROR){
-		printf("<P>Error: Could not read host and service status information!</P>\n");
+		printf("<P>エラー: ホストおよびサービスのステータス情報が読み込めません。</P>\n");
 		document_footer();
 		free_memory();
 		return ERROR;
@@ -212,6 +217,7 @@
 	
 	printf("<head>\n");
 	printf("<meta forua=\"true\" http-equiv=\"Cache-Control\" content=\"max-age=0\"/>\n");
+	printf("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">");
 	printf("</head>\n");
 
 	return;
@@ -368,26 +374,26 @@
 
 
 	/**** MAIN MENU SCREEN (CARD 1) ****/
-	printf("<card id='card1' title='Nagios WAP Interface'>\n");
+	printf("<card id='card1' title='WAP インターフェース'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
 
-	printf("<b>Nagios</b><br/><b>WAP Interface</b><br/>\n");
+	printf("<b>Nagios</b><br/><b>WAPインターフェース</b><br/>\n");
 
-	printf("<b><anchor title='Quick Stats'>Quick Stats<go href='%s'><postfield name='style' value='quickstats'/></go></anchor></b><br/>\n",STATUSWML_CGI);
+	printf("<b><anchor title='Quick Stats'>クイックステータス<go href='%s'><postfield name='style' value='quickstats'/></go></anchor></b><br/>\n",STATUSWML_CGI);
 
-	printf("<b><anchor title='Status Summary'>Status Summary<go href='%s'><postfield name='hostgroup' value='all'/><postfield name='style' value='summary'/></go></anchor></b><br/>\n",STATUSWML_CGI);
+	printf("<b><anchor title='Status Summary'>ステータスサマリ<go href='%s'><postfield name='hostgroup' value='all'/><postfield name='style' value='summary'/></go></anchor></b><br/>\n",STATUSWML_CGI);
 
-	printf("<b><anchor title='Status Overview'>Status Overview<go href='%s'><postfield name='hostgroup' value='all'/><postfield name='style' value='overview'/></go></anchor></b><br/>\n",STATUSWML_CGI);
+	printf("<b><anchor title='Status Overview'>ステータスオーバービュー<go href='%s'><postfield name='hostgroup' value='all'/><postfield name='style' value='overview'/></go></anchor></b><br/>\n",STATUSWML_CGI);
 
-	printf("<b><anchor title='All Problems'>All Problems<go href='%s'><postfield name='style' value='aprobs'/></go></anchor></b><br/>\n",STATUSWML_CGI);
+	printf("<b><anchor title='All Problems'>全ての障害<go href='%s'><postfield name='style' value='aprobs'/></go></anchor></b><br/>\n",STATUSWML_CGI);
 
-	printf("<b><anchor title='Unhandled Problems'>Unhandled Problems<go href='%s'><postfield name='style' value='uprobs'/></go></anchor></b><br/>\n",STATUSWML_CGI);
+	printf("<b><anchor title='Unhandled Problems'>未解決の障害<go href='%s'><postfield name='style' value='uprobs'/></go></anchor></b><br/>\n",STATUSWML_CGI);
 
-	printf("<b><anchor title='Process Info'>Process Info<go href='%s'><postfield name='style' value='processinfo'/></go></anchor></b><br/>\n",STATUSWML_CGI);
+	printf("<b><anchor title='Process Info'>プロセス情報<go href='%s'><postfield name='style' value='processinfo'/></go></anchor></b><br/>\n",STATUSWML_CGI);
 
-	printf("<b><anchor title='Network Tools'>Tools<go href='#card2'/></anchor></b><br/>\n");
+	printf("<b><anchor title='Network Tools'>ツール<go href='#card2'/></anchor></b><br/>\n");
 
-	printf("<b><anchor title='About'>About<go href='#card3'/></anchor></b><br/>\n");
+	printf("<b><anchor title='About'>このソフトウェアについて<go href='#card3'/></anchor></b><br/>\n");
 
 	printf("</p>\n");
 	printf("</card>\n");
@@ -401,8 +407,8 @@
 
 	printf("<b><anchor title='Ping Host'>Ping<go href='%s'><postfield name='ping' value=''/></go></anchor></b><br/>\n",STATUSWML_CGI);
 	printf("<b><anchor title='Traceroute'>Traceroute<go href='%s'><postfield name='traceroute' value=''/></go></anchor></b><br/>\n",STATUSWML_CGI);
-	printf("<b><anchor title='View Host'>View Host<go href='#card4'/></anchor></b><br/>\n");
-	printf("<b><anchor title='View Hostgroup'>View Hostgroup<go href='#card5'/></anchor></b><br/>\n");
+	printf("<b><anchor title='View Host'>ホストを見る<go href='#card4'/></anchor></b><br/>\n");
+	printf("<b><anchor title='View Hostgroup'>ホストグループを見る<go href='#card5'/></anchor></b><br/>\n");
 
 	printf("</p>\n");
 	printf("</card>\n");
@@ -415,10 +421,10 @@
 	printf("</p>\n");
 
 	printf("<p align='center' mode='wrap'>\n");
-	printf("<b>Nagios %s</b><br/><b>WAP Interface</b><br/>\n",PROGRAM_VERSION);
+	printf("<b>Nagios %s</b><br/><b>WAPインターフェース</b><br/>\n",PROGRAM_VERSION);
 	printf("Copyright (C) 2001 Ethan Galstad<br/>\n");
 	printf("egalstad@nagios.org<br/><br/>\n");
-	printf("License: <b>GPL</b><br/><br/>\n");
+	printf("ライセンス: <b>GPL</b><br/><br/>\n");
 	printf("Based in part on features found in AskAround's Wireless Network Tools<br/>\n");
 	printf("<b>www.askaround.com</b><br/>\n");
 	printf("</p>\n");
@@ -430,11 +436,11 @@
 	/**** VIEW HOST SCREEN (CARD 4) ****/
 	printf("<card id='card4' title='View Host'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>View Host</b><br/>\n");
+	printf("<b>ホスト情報</b><br/>\n");
 	printf("</p>\n");
 
 	printf("<p align='center' mode='wrap'>\n");
-	printf("<b>Host Name:</b><br/>\n");
+	printf("<b>ホスト名:</b><br/>\n");
 	printf("<input name='hname'/>\n");
 	printf("<do type='accept'>\n");
 	printf("<go href='%s' method='post'><postfield name='host' value='$(hname)'/></go>\n",STATUSWML_CGI);
@@ -448,11 +454,11 @@
 	/**** VIEW HOSTGROUP SCREEN (CARD 5) ****/
 	printf("<card id='card5' title='View Hostgroup'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>View Hostgroup</b><br/>\n");
+	printf("<b>ホストグループ</b><br/>\n");
 	printf("</p>\n");
 
 	printf("<p align='center' mode='wrap'>\n");
-	printf("<b>Hostgroup Name:</b><br/>\n");
+	printf("<b>ホストグル－プ名:</b><br/>\n");
 	printf("<input name='gname'/>\n");
 	printf("<do type='accept'>\n");
 	printf("<go href='%s' method='post'><postfield name='hostgroup' value='$(gname)'/><postfield name='style' value='overview'/></go>\n",STATUSWML_CGI);
@@ -473,34 +479,34 @@
 	/**** MAIN SCREEN (CARD 1) ****/
 	printf("<card id='card1' title='Process Info'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>Process Info</b><br/><br/>\n");
+	printf("<b>プロセス情報</b><br/><br/>\n");
 
 	/* check authorization */
 	if(is_authorized_for_system_information(&current_authdata)==FALSE){
 
-		printf("<b>Error: Not authorized for process info!</b>\n");
+		printf("<b>エラー: プロセス除法閲覧権限がありません。</b>\n");
 		printf("</p>\n");
 		printf("</card>\n");
 		return;
 	        }
 
 	if(nagios_process_state==STATE_OK)
-		printf("Nagios process is running<br/>\n");
+		printf("Nagiosプロセスは稼動しています。<br/>\n");
 	else
-		printf("<b>Nagios process may not be running</b><br/>\n");
+		printf("<b>Nagiosプロセスは稼動していないようです。</b><br/>\n");
 
 	if(enable_notifications==TRUE)
-		printf("Notifications are enabled<br/>\n");
+		printf("通知は有効です。<br/>\n");
 	else
-		printf("<b>Notifications are disabled</b><br/>\n");
+		printf("<b>通知は無効です。</b><br/>\n");
 
 	if(execute_service_checks==TRUE)
-		printf("Check execution is enabled<br/>\n");
+		printf("チェックは有効です。<br/>\n");
 	else
-		printf("<b>Check execution is disabled</b><br/>\n");
+		printf("<b>チェックは無効です。</b><br/>\n");
 
 	printf("<br/>\n");
-	printf("<b><anchor title='Process Commands'>Process Commands<go href='#card2'/></anchor></b>\n");
+	printf("<b><anchor title='Process Commands'>プロセスコマンド<go href='#card2'/></anchor></b>\n");
 	printf("</p>\n");
 
 	printf("</card>\n");
@@ -512,14 +518,14 @@
 	printf("<b>Process Commands</b><br/>\n");
 
 	if(enable_notifications==FALSE)
-		printf("<b><anchor title='Enable Notifications'>Enable Notifications<go href='%s' method='post'><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,CMD_ENABLE_NOTIFICATIONS,CMDMODE_COMMIT);
+		printf("<b><anchor title='Enable Notifications'>通知を有効にする<go href='%s' method='post'><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,CMD_ENABLE_NOTIFICATIONS,CMDMODE_COMMIT);
 	else
-		printf("<b><anchor title='Disable Notifications'>Disable Notifications<go href='%s' method='post'><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,CMD_DISABLE_NOTIFICATIONS,CMDMODE_COMMIT);
+		printf("<b><anchor title='Disable Notifications'>無効を有効にする<go href='%s' method='post'><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,CMD_DISABLE_NOTIFICATIONS,CMDMODE_COMMIT);
 
 	if(execute_service_checks==FALSE)
-		printf("<b><anchor title='Enable Check Execution'>Enable Check Execution<go href='%s' method='post'><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,CMD_START_EXECUTING_SVC_CHECKS,CMDMODE_COMMIT);
+		printf("<b><anchor title='Enable Check Execution'>チェックを有効にする<go href='%s' method='post'><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,CMD_START_EXECUTING_SVC_CHECKS,CMDMODE_COMMIT);
 	else
-		printf("<b><anchor title='Disable Check Execution'>Disable Check Execution<go href='%s' method='post'><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,CMD_STOP_EXECUTING_SVC_CHECKS,CMDMODE_COMMIT);
+		printf("<b><anchor title='Disable Check Execution'>チェックを無効にする<go href='%s' method='post'><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,CMD_STOP_EXECUTING_SVC_CHECKS,CMDMODE_COMMIT);
 
 	printf("</p>\n");
 
@@ -551,7 +557,7 @@
 	/**** MAIN SCREEN (CARD 1) ****/
 	printf("<card id='card1' title='Quick Stats'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>Quick Stats</b><br/>\n");
+	printf("<b>クイックステータス</b><br/>\n");
 	printf("</p>\n");
 
 	/* check all hosts */
@@ -598,20 +604,20 @@
 
 	printf("<p align='left' mode='nowrap'>\n");
 
-	printf("<b>Host Totals</b>:<br/>\n");
-	printf("%d UP<br/>\n",hosts_up);
-	printf("%d DOWN<br/>\n",hosts_down);
-	printf("%d UNREACHABLE<br/>\n",hosts_unreachable);
-	printf("%d PENDING<br/>\n",hosts_pending);
+	printf("<b>ホストの全体状況</b>:<br/>\n");
+	printf("稼動状態<br>(UP)<br>[ %d 件 ]<br/><br/>\n",hosts_up);
+	printf("停止状態<br>(DOWN)<br>[ %d 件 ]<br/><br/>\n",hosts_down);
+	printf("未到達状態<br>(UNREACHABLE)<br>[ %d 件 ]<br/><br/>\n",hosts_unreachable);
+	printf("保留状態<br>(PENDING)<br>[ %d 件 ]<br/><br/>\n",hosts_pending);
 
 	printf("<br/>\n");
 	
-	printf("<b>Service Totals:</b><br/>\n");
-	printf("%d OK<br/>\n",services_ok);
-	printf("%d WARNING<br/>\n",services_warning);
-	printf("%d UNKNOWN<br/>\n",services_unknown);
-	printf("%d CRITICAL<br/>\n",services_critical);
-	printf("%d PENDING<br/>\n",services_pending);
+	printf("<b>サービスの全体状況</b>:<br/>\n");
+	printf("正常状態<br>(OK)<br>[ %d 件 ]<br/><br/>\n",services_ok);
+	printf("警告状態<br>(WARNING)<br>[ %d 件 ]<br/><br/>\n",services_warning);
+	printf("不明状態<br>(UNKNOWN)<br>[ %d 件 ]<br/><br/>\n",services_unknown);
+	printf("異常状態<br>(CRITICAL)<br>[ %d 件 ]<br/><br/>\n",services_critical);
+	printf("保留状態<br>(PENDING)<br>[ %d 件 ]<br/><br/>\n",services_pending);
 	
 	printf("</p>\n");
 
@@ -634,7 +640,7 @@
 	printf("<card id='card1' title='Status Overview'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
 
-	printf("<b><anchor title='Status Overview'>Status Overview<go href='%s' method='post'><postfield name='hostgroup' value='%s'/><postfield name='style' value='summary'/></go></anchor></b><br/><br/>\n",STATUSWML_CGI,escape_string(hostgroup_name));
+	printf("<b><anchor title='Status Overview'>ステータスオーバビュー<go href='%s' method='post'><postfield name='hostgroup' value='%s'/><postfield name='style' value='summary'/></go></anchor></b><br/><br/>\n",STATUSWML_CGI,escape_string(hostgroup_name));
 
 	/* check all hostgroups */
 	for(temp_hostgroup=hostgroup_list;temp_hostgroup!=NULL;temp_hostgroup=temp_hostgroup->next){
@@ -665,13 +671,13 @@
 
 			printf("<tr><td><anchor title='%s'>",temp_host->name);
 			if(temp_hoststatus->status==HOST_UP)
-				printf("UP");
+				printf("稼動(UP)");
 			else if(temp_hoststatus->status==HOST_PENDING)
-				printf("PND");
+				printf("保留(PND)");
 			else if(temp_hoststatus->status==HOST_DOWN)
-				printf("DWN");
+				printf("停止(DWN)");
 			else if(temp_hoststatus->status==HOST_UNREACHABLE)
-				printf("UNR");
+				printf("未到達(UNR)");
 			else
 				printf("???");
 			printf("<go href='%s' method='post'><postfield name='host' value='%s'/></go></anchor></td>",STATUSWML_CGI,temp_host->name);
@@ -684,7 +690,7 @@
 	        }
 
 	if(show_all_hostgroups==FALSE)
-		printf("<b><anchor title='View All Hostgroups'>View All Hostgroups<go href='%s' method='post'><postfield name='hostgroup' value='all'/><postfield name='style' value='overview'/></go></anchor></b>\n",STATUSWML_CGI);
+		printf("<b><anchor title='View All Hostgroups'>全てのホストグループ<go href='%s' method='post'><postfield name='hostgroup' value='all'/><postfield name='style' value='overview'/></go></anchor></b>\n",STATUSWML_CGI);
 
 	printf("</p>\n");
 	printf("</card>\n");
@@ -717,7 +723,7 @@
 	printf("<card id='card1' title='Status Summary'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
 
-	printf("<b><anchor title='Status Summary'>Status Summary<go href='%s' method='post'><postfield name='hostgroup' value='%s'/><postfield name='style' value='overview'/></go></anchor></b><br/><br/>\n",STATUSWML_CGI,escape_string(hostgroup_name));
+	printf("<b><anchor title='Status Summary'>ステータスサマリ<go href='%s' method='post'><postfield name='hostgroup' value='%s'/><postfield name='style' value='overview'/></go></anchor></b><br/><br/>\n",STATUSWML_CGI,escape_string(hostgroup_name));
 
 	/* check all hostgroups */
 	for(temp_hostgroup=hostgroup_list;temp_hostgroup!=NULL;temp_hostgroup=temp_hostgroup->next){
@@ -792,41 +798,43 @@
 			        }
 		        }
 
-		printf("<tr><td>Hosts:</td><td>");
+		/* レイアウト変更箇所 */
+		printf("<tr><td>ホスト:</td><td>");
 		found=0;
 		if(hosts_unreachable>0){
-			printf("%d UNR",hosts_unreachable);
+			printf("未到達(UNR): %d件",hosts_unreachable);
 			found=1;
 		        }
 		if(hosts_down>0){
-			printf("%s%d DWN",(found==1)?", ":"",hosts_down);
+			printf("%s 停止(DWN): %d件",(found==1)?", ":"",hosts_down);
 			found=1;
 		        }
 		if(hosts_pending>0){
-			printf("%s%d PND",(found==1)?", ":"",hosts_pending);
+			printf("%s 保留(PND): %d件",(found==1)?", ":"",hosts_pending);
 			found=1;
 		        }
-		printf("%s%d UP",(found==1)?", ":"",hosts_up);
+		printf("%s 稼動(UP): %d件",(found==1)?", ":"",hosts_up);
 		printf("</td></tr>\n");
-		printf("<tr><td>Services:</td><td>");
+		printf("<tr><td> </td><td> </td></tr>");
+		printf("<tr><td>サービス:</td><td>");
 		found=0;
 		if(services_critical>0){
-			printf("%d CRI",services_critical);
+			printf("異常(CRI): %d件",services_critical);
 			found=1;
 		        }
 		if(services_warning>0){
-			printf("%s%d WRN",(found==1)?", ":"",services_warning);
+			printf("%s 警告(WRN): %d件",(found==1)?", ":"",services_warning);
 			found=1;
 		        }
 		if(services_unknown>0){
-			printf("%s%d UNK",(found==1)?", ":"",services_unknown);
+			printf("%s 不明(UNK): %d件",(found==1)?", ":"",services_unknown);
 			found=1;
 		        }
 		if(services_pending>0){
-			printf("%s%d PND",(found==1)?", ":"",services_pending);
+			printf("%s 保留(PND): %d件",(found==1)?", ":"",services_pending);
 			found=1;
 		        }
-		printf("%s%d OK",(found==1)?", ":"",services_ok);
+		printf("%s 正常(OK): %d件",(found==1)?", ":"",services_ok);
 		printf("</td></tr>\n");
 
 		printf("</table>\n");
@@ -835,7 +843,7 @@
 	        }
 
 	if(show_all_hostgroups==FALSE)
-		printf("<b><anchor title='View All Hostgroups'>View All Hostgroups<go href='%s' method='post'><postfield name='hostgroup' value='all'/><postfield name='style' value='summary'/></go></anchor></b>\n",STATUSWML_CGI);
+		printf("<b><anchor title='View All Hostgroups'>全てのホストグループを見る<go href='%s' method='post'><postfield name='hostgroup' value='all'/><postfield name='style' value='summary'/></go></anchor></b>\n",STATUSWML_CGI);
 	
 	printf("</p>\n");
 
@@ -863,14 +871,14 @@
 	/**** MAIN SCREEN (CARD 1) ****/
 	printf("<card id='card1' title='Host Status'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>Host '%s'</b><br/>\n",host_name);
+	printf("<b>ホスト '%s'</b><br/>\n",host_name);
 
 	/* find the host */
 	temp_host=find_host(host_name);
 	temp_hoststatus=find_hoststatus(host_name);
 	if(temp_host==NULL || temp_hoststatus==NULL){
 
-		printf("<b>Error: Could not find host!</b>\n");
+		printf("<b>エラー: ホストが見つかりません。</b>\n");
 		printf("</p>\n");
 		printf("</card>\n");
 		return;
@@ -879,7 +887,7 @@
 	/* check authorization */
 	if(is_authorized_for_host(temp_host,&current_authdata)==FALSE){
 
-		printf("<b>Error: Not authorized for host!</b>\n");
+		printf("<b>エラー: このホストを見る権限がありません。</b>\n");
 		printf("</p>\n");
 		printf("</card>\n");
 		return;
@@ -888,23 +896,23 @@
 
 	printf("<table columns='2' align='LL'>\n");
 
-	printf("<tr><td>Status:</td><td>");
+	printf("<tr><td>状態:</td><td>");
 	if(temp_hoststatus->status==HOST_UP)
-		printf("UP");
+		printf("稼動(UP)");
 	else if(temp_hoststatus->status==HOST_PENDING)
-		printf("PENDING");
+		printf("保留(PENDING)");
 	else if(temp_hoststatus->status==HOST_DOWN)
-		printf("DOWN");
+		printf("停止(DOWN)");
 	else if(temp_hoststatus->status==HOST_UNREACHABLE)
-		printf("UNREACHABLE");
+		printf("未到達(UNREACHABLE)");
 	else
 		printf("?");
 	printf("</td></tr>\n");
 
-	printf("<tr><td>Info:</td><td>%s</td></tr>\n",temp_hoststatus->plugin_output);
+	printf("<tr><td>ステータス情報:</td><td>%s</td></tr>\n",temp_hoststatus->plugin_output);
 
 	get_time_string(&temp_hoststatus->last_check,last_check,sizeof(last_check)-1,SHORT_DATE_TIME);
-	printf("<tr><td>Last Check:</td><td>%s</td></tr>\n",last_check);
+	printf("<tr><td>最終チェック時刻:</td><td>%s</td></tr>\n",last_check);
 
 	current_time=time(NULL);
 	if(temp_hoststatus->last_state_change==(time_t)0)
@@ -913,24 +921,24 @@
 		t=current_time-temp_hoststatus->last_state_change;
 	get_time_breakdown((unsigned long)t,&days,&hours,&minutes,&seconds);
 	snprintf(state_duration,sizeof(state_duration)-1,"%2dd %2dh %2dm %2ds%s",days,hours,minutes,seconds,(temp_hoststatus->last_state_change==(time_t)0)?"+":"");
-	printf("<tr><td>Duration:</td><td>%s</td></tr>\n",state_duration);
+	printf("<tr><td>経過時間:</td><td>%s</td></tr>\n",state_duration);
 
-	printf("<tr><td>Properties:</td><td>");
+	printf("<tr><td>プロパティ:</td><td>");
 	found=0;
 	if(temp_hoststatus->checks_enabled==FALSE){
-		printf("%sChecks disabled",(found==1)?", ":"");
+		printf("%sチェック無効",(found==1)?", ":"");
 		found=1;
 	        }
 	if(temp_hoststatus->notifications_enabled==FALSE){
-		printf("%sNotifications disabled",(found==1)?", ":"");
+		printf("%s通知無効",(found==1)?", ":"");
 		found=1;
 	        }
 	if(temp_hoststatus->problem_has_been_acknowledged==TRUE){
-		printf("%sProblem acknowledged",(found==1)?", ":"");
+		printf("%s認知済み",(found==1)?", ":"");
 		found=1;
 	        }
 	if(temp_hoststatus->scheduled_downtime_depth>0){
-		printf("%sIn scheduled downtime",(found==1)?", ":"");
+		printf("%sダウンタイム中",(found==1)?", ":"");
 		found=1;
 	        }
 	if(found==0)
@@ -939,8 +947,8 @@
 
 	printf("</table>\n");
 	printf("<br/>\n");
-	printf("<b><anchor title='View Services'>View Services<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='style' value='servicedetail'/></go></anchor></b>\n",STATUSWML_CGI,escape_string(host_name));
-	printf("<b><anchor title='Host Commands'>Host Commands<go href='#card2'/></anchor></b>\n");
+	printf("<b><anchor title='View Services'>サービスを見る<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='style' value='servicedetail'/></go></anchor></b>\n",STATUSWML_CGI,escape_string(host_name));
+	printf("<b><anchor title='Host Commands'>ホストコマンド<go href='#card2'/></anchor></b>\n");
 	printf("</p>\n");
 
 	printf("</card>\n");
@@ -949,32 +957,32 @@
 	/**** COMMANDS SCREEN (CARD 2) ****/
 	printf("<card id='card2' title='Host Commands'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>Host Commands</b><br/>\n");
+	printf("<b>ホストコマンド</b><br/>\n");
 
 	printf("<b><anchor title='Ping Host'>Ping Host<go href='%s' method='post'><postfield name='ping' value='%s'/></go></anchor></b>\n",STATUSWML_CGI,temp_host->address);
 	printf("<b><anchor title='Traceroute'>Traceroute<go href='%s' method='post'><postfield name='traceroute' value='%s'/></go></anchor></b>\n",STATUSWML_CGI,temp_host->address);
 
 	if(temp_hoststatus->status!=HOST_UP && temp_hoststatus->status!=HOST_PENDING)
-		printf("<b><anchor title='Acknowledge Problem'>Acknowledge Problem<go href='#card3'/></anchor></b>\n");
+		printf("<b><anchor title='Acknowledge Problem'>認知済みにする<go href='#card3'/></anchor></b>\n");
 
 	if(temp_hoststatus->checks_enabled==FALSE)
-		printf("<b><anchor title='Enable Host Checks'>Enable Host Checks<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_ENABLE_HOST_CHECK,CMDMODE_COMMIT);
+		printf("<b><anchor title='Enable Host Checks'>ホストチェックを有効にする<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_ENABLE_HOST_CHECK,CMDMODE_COMMIT);
 	else
-		printf("<b><anchor title='Disable Host Checks'>Disable Host Checks<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_DISABLE_HOST_CHECK,CMDMODE_COMMIT);
+		printf("<b><anchor title='Disable Host Checks'>ホストチェックを無効にする<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_DISABLE_HOST_CHECK,CMDMODE_COMMIT);
 
 	if(temp_hoststatus->notifications_enabled==FALSE)
-		printf("<b><anchor title='Enable Host Notifications'>Enable Host Notifications<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_ENABLE_HOST_NOTIFICATIONS,CMDMODE_COMMIT);
+		printf("<b><anchor title='Enable Host Notifications'>ホスト通知を有効にする<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_ENABLE_HOST_NOTIFICATIONS,CMDMODE_COMMIT);
 	else
-		printf("<b><anchor title='Disable Host Notifications'>Disable Host Notifications<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_DISABLE_HOST_NOTIFICATIONS,CMDMODE_COMMIT);
+		printf("<b><anchor title='Disable Host Notifications'>ホスト通知を無効にする<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_DISABLE_HOST_NOTIFICATIONS,CMDMODE_COMMIT);
 
 
-	printf("<b><anchor title='Enable All Service Checks'>Enable All Service Checks<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_ENABLE_HOST_SVC_CHECKS,CMDMODE_COMMIT);
+	printf("<b><anchor title='Enable All Service Checks'>全サービスチェックを有効にする<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_ENABLE_HOST_SVC_CHECKS,CMDMODE_COMMIT);
 
-	printf("<b><anchor title='Disable All Service Checks'>Disable All Service Checks<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_DISABLE_HOST_SVC_CHECKS,CMDMODE_COMMIT);
+	printf("<b><anchor title='Disable All Service Checks'>全サービスチェックを無効にする<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_DISABLE_HOST_SVC_CHECKS,CMDMODE_COMMIT);
 
-	printf("<b><anchor title='Enable All Service Notifications'>Enable All Service Notifications<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_ENABLE_HOST_SVC_NOTIFICATIONS,CMDMODE_COMMIT);
+	printf("<b><anchor title='Enable All Service Notifications'>全サービス通知を有効にする<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_ENABLE_HOST_SVC_NOTIFICATIONS,CMDMODE_COMMIT);
 
-	printf("<b><anchor title='Disable All Service Notifications'>Disable All Service Notifications<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_DISABLE_HOST_SVC_NOTIFICATIONS,CMDMODE_COMMIT);
+	printf("<b><anchor title='Disable All Service Notifications'>全サービス通知を無効にする<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",COMMAND_CGI,escape_string(host_name),CMD_DISABLE_HOST_SVC_NOTIFICATIONS,CMDMODE_COMMIT);
 
 	printf("</p>\n");
 
@@ -984,14 +992,14 @@
 	/**** ACKNOWLEDGEMENT SCREEN (CARD 3) ****/
 	printf("<card id='card3' title='Acknowledge Problem'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>Acknowledge Problem</b><br/>\n");
+	printf("<b>認知済みにする</b><br/>\n");
 	printf("</p>\n");
 
 	printf("<p align='center' mode='wrap'>\n");
-	printf("<b>Your Name:</b><br/>\n");
+	printf("<b>記入者:</b><br/>\n");
 	printf("<input name='name' value='%s' /><br/>\n",((use_ssl_authentication)?(getenv("SSL_CLIENT_S_DN_CN")):(getenv("REMOTE_USER"))));
-	printf("<b>Comment:</b><br/>\n");
-	printf("<input name='comment' value='acknowledged by WAP'/>\n");
+	printf("<b>コメント:</b><br/>\n");
+	printf("<input name='comment' value='WAPによって認知しました'/>\n");
 
 	printf("<do type='accept'>\n");
 	printf("<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='com_author' value='$(name)'/><postfield name='com_data' value='$(comment)'/><postfield name='persistent' value=''/><postfield name='send_notification' value=''/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go>\n",COMMAND_CGI,escape_string(host_name),CMD_ACKNOWLEDGE_HOST_PROBLEM,CMDMODE_COMMIT);
@@ -1014,8 +1022,8 @@
 	/**** MAIN SCREEN (CARD 1) ****/
 	printf("<card id='card1' title='Host Services'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>Host <anchor title='%s'>",url_encode(host_name));
-	printf("'%s'<go href='%s' method='post'><postfield name='host' value='%s'/></go></anchor> Services</b><br/>\n",host_name,STATUSWML_CGI,escape_string(host_name));
+	printf("<b>ホスト名 <anchor title='%s'>",url_encode(host_name));
+	printf("'%s'<go href='%s' method='post'><postfield name='host' value='%s'/></go></anchor> サービス名</b><br/>\n",host_name,STATUSWML_CGI,escape_string(host_name));
 
 	printf("<table columns='2' align='LL'>\n");
 
@@ -1034,15 +1042,15 @@
 
 		printf("<tr><td><anchor title='%s'>",temp_service->description);
 		if(temp_servicestatus->status==SERVICE_OK)
-			printf("OK");
+			printf("正常(OK)");
 		else if(temp_servicestatus->status==SERVICE_PENDING)
-			printf("PND");
+			printf("保留(PND)");
 		else if(temp_servicestatus->status==SERVICE_WARNING)
-			printf("WRN");
+			printf("警告(WRN)");
 		else if(temp_servicestatus->status==SERVICE_UNKNOWN)
-			printf("UNK");
+			printf("不明(UNK)");
 		else if(temp_servicestatus->status==SERVICE_CRITICAL)
-			printf("CRI");
+			printf("異常(CRI)");
 		else
 			printf("???");
 
@@ -1078,14 +1086,14 @@
 	/**** MAIN SCREEN (CARD 1) ****/
 	printf("<card id='card1' title='Service Status'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>Service '%s' on host '%s'</b><br/>\n",service_desc,host_name);
+	printf("<b>ホスト '%s' 上の '%s' サービス</b><br/>\n",host_name,service_desc);
 
 	/* find the service */
 	temp_service=find_service(host_name,service_desc);
 	temp_servicestatus=find_servicestatus(host_name,service_desc);
 	if(temp_service==NULL || temp_servicestatus==NULL){
 
-		printf("<b>Error: Could not find service!</b>\n");
+		printf("<b>エラー: サービスが見つかりません。</b>\n");
 		printf("</p>\n");
 		printf("</card>\n");
 		return;
@@ -1094,7 +1102,7 @@
 	/* check authorization */
 	if(is_authorized_for_service(temp_service,&current_authdata)==FALSE){
 
-		printf("<b>Error: Not authorized for service!</b>\n");
+		printf("<b>エラー: このサービスを見る権限がありません。</b>\n");
 		printf("</p>\n");
 		printf("</card>\n");
 		return;
@@ -1105,23 +1113,23 @@
 
 	printf("<tr><td>Status:</td><td>");
 	if(temp_servicestatus->status==SERVICE_OK)
-		printf("OK");
+		printf("正常(OK)");
 	else if(temp_servicestatus->status==SERVICE_PENDING)
-		printf("PENDING");
+		printf("保留(PENDING)");
 	else if(temp_servicestatus->status==SERVICE_WARNING)
-		printf("WARNING");
+		printf("警告(WARNING)");
 	else if(temp_servicestatus->status==SERVICE_UNKNOWN)
-		printf("UNKNOWN");
+		printf("不明(UNKNOWN)");
 	else if(temp_servicestatus->status==SERVICE_CRITICAL)
-		printf("CRITICAL");
+		printf("異常(CRITICAL)");
 	else
 		printf("?");
 	printf("</td></tr>\n");
 
-	printf("<tr><td>Info:</td><td>%s</td></tr>\n",temp_servicestatus->plugin_output);
+	printf("<tr><td>情報:</td><td>%s</td></tr>\n",temp_servicestatus->plugin_output);
 
 	get_time_string(&temp_servicestatus->last_check,last_check,sizeof(last_check)-1,SHORT_DATE_TIME);
-	printf("<tr><td>Last Check:</td><td>%s</td></tr>\n",last_check);
+	printf("<tr><td>最終チェック時刻:</td><td>%s</td></tr>\n",last_check);
 
 	current_time=time(NULL);
 	if(temp_servicestatus->last_state_change==(time_t)0)
@@ -1130,24 +1138,24 @@
 		t=current_time-temp_servicestatus->last_state_change;
 	get_time_breakdown((unsigned long)t,&days,&hours,&minutes,&seconds);
 	snprintf(state_duration,sizeof(state_duration)-1,"%2dd %2dh %2dm %2ds%s",days,hours,minutes,seconds,(temp_servicestatus->last_state_change==(time_t)0)?"+":"");
-	printf("<tr><td>Duration:</td><td>%s</td></tr>\n",state_duration);
+	printf("<tr><td>経過時間:</td><td>%s</td></tr>\n",state_duration);
 
-	printf("<tr><td>Properties:</td><td>");
+	printf("<tr><td>プロパティ:</td><td>");
 	found=0;
 	if(temp_servicestatus->checks_enabled==FALSE){
-		printf("%sChecks disabled",(found==1)?", ":"");
+		printf("%sチェック無効",(found==1)?", ":"");
 		found=1;
 	        }
 	if(temp_servicestatus->notifications_enabled==FALSE){
-		printf("%sNotifications disabled",(found==1)?", ":"");
+		printf("%s通知無効",(found==1)?", ":"");
 		found=1;
 	        }
 	if(temp_servicestatus->problem_has_been_acknowledged==TRUE){
-		printf("%sProblem acknowledged",(found==1)?", ":"");
+		printf("%s認知済み",(found==1)?", ":"");
 		found=1;
 	        }
 	if(temp_servicestatus->scheduled_downtime_depth>0){
-		printf("%sIn scheduled downtime",(found==1)?", ":"");
+		printf("%sダウンタイム中",(found==1)?", ":"");
 		found=1;
 	        }
 	if(found==0)
@@ -1156,8 +1164,8 @@
 
 	printf("</table>\n");
 	printf("<br/>\n");
-	printf("<b><anchor title='View Host'>View Host<go href='%s' method='post'><postfield name='host' value='%s'/></go></anchor></b>\n",STATUSWML_CGI,escape_string(host_name));
-	printf("<b><anchor title='Service Commands'>Svc. Commands<go href='#card2'/></anchor></b>\n");
+	printf("<b><anchor title='View Host'>ホストを見る<go href='%s' method='post'><postfield name='host' value='%s'/></go></anchor></b>\n",STATUSWML_CGI,escape_string(host_name));
+	printf("<b><anchor title='Service Commands'>サービスコマンド<go href='#card2'/></anchor></b>\n");
 	printf("</p>\n");
 
 	printf("</card>\n");
@@ -1166,29 +1174,29 @@
 	/**** COMMANDS SCREEN (CARD 2) ****/
 	printf("<card id='card2' title='Service Commands'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>Service Commands</b><br/>\n");
+	printf("<b>サービスコマンド</b><br/>\n");
 
 	if(temp_servicestatus->status!=SERVICE_OK && temp_servicestatus->status!=SERVICE_PENDING)
-		printf("<b><anchor title='Acknowledge Problem'>Acknowledge Problem<go href='#card3'/></anchor></b>\n");
+		printf("<b><anchor title='Acknowledge Problem'>認知済みする<go href='#card3'/></anchor></b>\n");
 
 	if(temp_servicestatus->checks_enabled==FALSE){
-		printf("<b><anchor title='Enable Checks'>Enable Checks<go href='%s' method='post'><postfield name='host' value='%s'/>",COMMAND_CGI,escape_string(host_name));
+		printf("<b><anchor title='Enable Checks'>チェックを有効にする<go href='%s' method='post'><postfield name='host' value='%s'/>",COMMAND_CGI,escape_string(host_name));
 		printf("<postfield name='service' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",escape_string(service_desc),CMD_ENABLE_SVC_CHECK,CMDMODE_COMMIT);
 		}
 	else{
-		printf("<b><anchor title='Disable Checks'>Disable Checks<go href='%s' method='post'><postfield name='host' value='%s'/>",COMMAND_CGI,escape_string(host_name));
+		printf("<b><anchor title='Disable Checks'>チェックを無効<go href='%s' method='post'><postfield name='host' value='%s'/>",COMMAND_CGI,escape_string(host_name));
 		printf("<postfield name='service' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",escape_string(service_desc),CMD_DISABLE_SVC_CHECK,CMDMODE_COMMIT);
 
-		printf("<b><anchor title='Schedule Immediate Check'>Schedule Immediate Check<go href='%s' method='post'><postfield name='host' value='%s'/>",COMMAND_CGI,escape_string(host_name));
+		printf("<b><anchor title='Schedule Immediate Check'>すぐにチェック<go href='%s' method='post'><postfield name='host' value='%s'/>",COMMAND_CGI,escape_string(host_name));
 		printf("<postfield name='service' value='%s'/><postfield name='start_time' value='%lu'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",escape_string(service_desc),(unsigned long)current_time,CMD_SCHEDULE_SVC_CHECK,CMDMODE_COMMIT);
 	        }
 
 	if(temp_servicestatus->notifications_enabled==FALSE){
-		printf("<b><anchor title='Enable Notifications'>Enable Notifications<go href='%s' method='post'><postfield name='host' value='%s'/>",COMMAND_CGI,escape_string(host_name));
+		printf("<b><anchor title='Enable Notifications'>通知を有効にする<go href='%s' method='post'><postfield name='host' value='%s'/>",COMMAND_CGI,escape_string(host_name));
 		printf("<postfield name='service' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",escape_string(service_desc),CMD_ENABLE_SVC_NOTIFICATIONS,CMDMODE_COMMIT);
 		}
 	else{
-		printf("<b><anchor title='Disable Notifications'>Disable Notifications<go href='%s' method='post'><postfield name='host' value='%s'/>",COMMAND_CGI,escape_string(host_name));
+		printf("<b><anchor title='Disable Notifications'>通知を無効にする<go href='%s' method='post'><postfield name='host' value='%s'/>",COMMAND_CGI,escape_string(host_name));
 		printf("<postfield name='service' value='%s'/><postfield name='cmd_typ' value='%d'/><postfield name='cmd_mod' value='%d'/><postfield name='content' value='wml'/></go></anchor></b><br/>\n",escape_string(service_desc),CMD_DISABLE_SVC_NOTIFICATIONS,CMDMODE_COMMIT);
 		}
 
@@ -1200,14 +1208,14 @@
 	/**** ACKNOWLEDGEMENT SCREEN (CARD 3) ****/
 	printf("<card id='card3' title='Acknowledge Problem'>\n");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>Acknowledge Problem</b><br/>\n");
+	printf("<b>障害を認知済みにする</b><br/>\n");
 	printf("</p>\n");
 
 	printf("<p align='center' mode='wrap'>\n");
-	printf("<b>Your Name:</b><br/>\n");
+	printf("<b>入力者:</b><br/>\n");
 	printf("<input name='name' value='%s' /><br/>\n",((use_ssl_authentication)?(getenv("SSL_CLIENT_S_DN_CN")):(getenv("REMOTE_USER"))));
-	printf("<b>Comment:</b><br/>\n");
-	printf("<input name='comment' value='acknowledged by WAP'/>\n");
+	printf("<b>コメント:</b><br/>\n");
+	printf("<input name='comment' value='WAPによって認知しました'/>\n");
 
 	printf("<do type='accept'>\n");
 	printf("<go href='%s' method='post'><postfield name='host' value='%s'/>",COMMAND_CGI,escape_string(host_name));
@@ -1237,11 +1245,11 @@
 	if(!strcmp(ping_address,"")){
 
 		printf("<p align='center' mode='nowrap'>\n");
-		printf("<b>Ping Host</b><br/>\n");
+		printf("<b>指定したホストにPing送信を行います</b><br/>\n");
 		printf("</p>\n");
 
 		printf("<p align='center' mode='wrap'>\n");
-		printf("<b>Host Name/Address:</b><br/>\n");
+		printf("<b>ホスト名/アドレス:</b><br/>\n");
 		printf("<input name='address'/>\n");
 		printf("<do type='accept'>\n");
 		printf("<go href='%s'><postfield name='ping' value='$(address)'/></go>\n",STATUSWML_CGI);
@@ -1252,13 +1260,13 @@
 	else{
 
 		printf("<p align='center' mode='nowrap'>\n");
-		printf("<b>Results For Ping Of %s:</b><br/>\n",ping_address);
+		printf("<b>%sへのPing結果:</b><br/>\n",ping_address);
 		printf("</p>\n");
 
 		printf("<p mode='nowrap'>\n");
 
 		if(ping_syntax==NULL)
-			printf("ping_syntax in CGI config file is NULL!\n");
+			printf("CGI設定のping_syntaxパラメータが未設定です。\n");
 	
 		else{
 
@@ -1308,7 +1316,7 @@
 		                        }
 	                        }
 			else
-				printf("Error executing ping!\n");
+				printf("pingの実行でエラーが発生しました\n");
 
 			pclose(fp);
 		        }
@@ -1334,11 +1342,11 @@
 	if(!strcmp(traceroute_address,"")){
 
 		printf("<p align='center' mode='nowrap'>\n");
-		printf("<b>Traceroute</b><br/>\n");
+		printf("<b>指定したホストまでのネットワーク経路を調べます</b><br/>\n");
 		printf("</p>\n");
 
 		printf("<p align='center' mode='wrap'>\n");
-		printf("<b>Host Name/Address:</b><br/>\n");
+		printf("<b>ホスト名/アドレス:</b><br/>\n");
 		printf("<input name='address'/>\n");
 		printf("<do type='accept'>\n");
 		printf("<go href='%s'><postfield name='traceroute' value='$(address)'/></go>\n",STATUSWML_CGI);
@@ -1349,7 +1357,7 @@
 	else{
 
 		printf("<p align='center' mode='nowrap'>\n");
-		printf("<b>Results For Traceroute To %s:</b><br/>\n",traceroute_address);
+		printf("<b>%sまでのtracerouteの結果:</b><br/>\n",traceroute_address);
 		printf("</p>\n");
 
 		printf("<p mode='nowrap'>\n");
@@ -1377,7 +1385,7 @@
 		               }
 	                }
 		else
-			printf("Error executing traceroute!\n");
+			printf("tracerouteの実行にエラーが発生しました。\n");
 
 		pclose(fp);
 
@@ -1403,9 +1411,9 @@
 	/**** MAIN SCREEN (CARD 1) ****/
 	printf("<card id='card1' title='%s Problems'>\n",(display_type==DISPLAY_ALL_PROBLEMS)?"All":"Unhandled");
 	printf("<p align='center' mode='nowrap'>\n");
-	printf("<b>%s Problems</b><br/><br/>\n",(display_type==DISPLAY_ALL_PROBLEMS)?"All":"Unhandled");
+	printf("<b>%s障害</b><br/><br/>\n",(display_type==DISPLAY_ALL_PROBLEMS)?"全ての":"未解決の");
 
-	printf("<b>Host Problems:</b>\n");
+	printf("<b>ホストの障害:</b>\n");
 
 	printf("<table columns='2' align='LL'>\n");
 
@@ -1435,9 +1443,9 @@
 
 		printf("<tr><td><anchor title='%s'>",temp_host->name);
 		if(temp_hoststatus->status==HOST_DOWN)
-			printf("DWN");
+			printf("停止(DWN)");
 		else if(temp_hoststatus->status==HOST_UNREACHABLE)
-			printf("UNR");
+			printf("未到達(UNR)");
 		else
 			printf("???");
 		printf("<go href='%s' method='post'><postfield name='host' value='%s'/></go></anchor></td>",STATUSWML_CGI,temp_host->name);
@@ -1445,14 +1453,14 @@
 	        }
 
 	if(total_host_problems==0)
-		printf("<tr><td>No problems</td></tr>\n");
+		printf("<tr><td>障害なし</td></tr>\n");
 
 	printf("</table>\n");
 
 	printf("<br/>\n");
 
 
-	printf("<b>Svc Problems:</b>\n");
+	printf("<b>サービス障害:</b>\n");
 
 	printf("<table columns='2' align='LL'>\n");
 
@@ -1488,11 +1496,11 @@
 
 		printf("<tr><td><anchor title='%s'>",temp_servicestatus->description);
 		if(temp_servicestatus->status==SERVICE_CRITICAL)
-			printf("CRI");
+			printf("異常(CRI)");
 		else if(temp_servicestatus->status==SERVICE_WARNING)
-			printf("WRN");
+			printf("警告(WRN)");
 		else if(temp_servicestatus->status==SERVICE_UNKNOWN)
-			printf("UNK");
+			printf("不明(UNK)");
 		else
 			printf("???");
 		printf("<go href='%s' method='post'><postfield name='host' value='%s'/><postfield name='service' value='%s'/></go></anchor></td>",STATUSWML_CGI,temp_service->host_name,temp_service->description);
@@ -1500,7 +1508,7 @@
 	        }
 
 	if(total_service_problems==0)
-		printf("<tr><td>No problems</td></tr>\n");
+		printf("<tr><td>障害なし</td></tr>\n");
 
 	printf("</table>\n");
 
diff -urN nagios-3.2.3.orig/cgi/summary.c nagios-3.2.3/cgi/summary.c
--- nagios-3.2.3.orig/cgi/summary.c	2010-12-12 00:47:54.000000000 +0900
+++ nagios-3.2.3/cgi/summary.c	2010-12-12 19:59:07.000000000 +0900
@@ -282,7 +282,7 @@
 		/* left column of the first row */
 		printf("<td align=left valign=top width=33%%>\n");
 
-		snprintf(temp_buffer,sizeof(temp_buffer)-1,"Alert Summary Report");
+		snprintf(temp_buffer,sizeof(temp_buffer)-1,"警報サマリレポート");
 		temp_buffer[sizeof(temp_buffer)-1]='\x0';
 		display_info_table(temp_buffer,FALSE,&current_authdata);
 
@@ -295,18 +295,18 @@
 
 			printf("<DIV ALIGN=CENTER CLASS='dataTitle'>\n");
 			if(display_type==REPORT_TOP_ALERTS)
-				printf("Top Alert Producers");
+				printf("トップ警報発生元");
 			else if(display_type==REPORT_ALERT_TOTALS || display_type==REPORT_HOSTGROUP_ALERT_TOTALS || display_type==REPORT_SERVICEGROUP_ALERT_TOTALS || display_type==REPORT_HOST_ALERT_TOTALS || display_type==REPORT_SERVICE_ALERT_TOTALS)
-				printf("Alert Totals");
+				printf("警報全体");
 			else
-				printf("Most Recent Alerts");
+				printf("最近の警報");
 
 			if(show_all_hostgroups==FALSE)
-				printf(" For Hostgroup '%s'",target_hostgroup_name);
+				printf(" ホストグループ '%s'",target_hostgroup_name);
 			else if(show_all_servicegroups==FALSE)
-				printf(" For Servicegroup '%s'",target_servicegroup_name);
+				printf(" サービスグループ '%s'",target_servicegroup_name);
 			else if(show_all_hosts==FALSE)
-				printf(" For Host '%s'",target_host_name);
+				printf(" ホスト '%s'",target_host_name);
 
 			printf("</DIV>\n");
 
@@ -314,10 +314,10 @@
 
 			get_time_string(&t1,start_timestring,sizeof(start_timestring)-1,SHORT_DATE_TIME);
 			get_time_string(&t2,end_timestring,sizeof(end_timestring)-1,SHORT_DATE_TIME);
-			printf("<div align=center class='reportRange'>%s to %s</div>\n",start_timestring,end_timestring);
+			printf("<div align=center class='reportRange'>%s から %s</div>\n",start_timestring,end_timestring);
 
 			get_time_breakdown((time_t)(t2-t1),&days,&hours,&minutes,&seconds);
-			printf("<div align=center class='reportDuration'>Duration: %dd %dh %dm %ds</div>\n",days,hours,minutes,seconds);
+			printf("<div align=center class='reportDuration'>期間: %d日間と %d時 %d分 %d秒</div>\n",days,hours,minutes,seconds);
 		        }
 
 		printf("</td>\n");
@@ -330,75 +330,75 @@
 			printf("<table border=0>\n");
 
 			printf("<tr>\n");
-			printf("<td valign=top align=left class='optBoxTitle' colspan=2>Report Options Summary:</td>\n");
+			printf("<td valign=top align=left class='optBoxTitle' colspan=2>サマリレポートオプション:</td>\n");
 			printf("</tr>\n");
 
 			printf("<tr>\n");
-			printf("<td valign=top align=left class='optBoxItem'>Alert Types:</td>\n");
+			printf("<td valign=top align=left class='optBoxItem'>警報の種類:</td>\n");
 			printf("<td valign=top align=left class='optBoxValue'>\n");
 			if(alert_types & AE_HOST_ALERT)
-				printf("Host");
+				printf("ホスト");
 			if(alert_types & AE_SERVICE_ALERT)
-				printf("%sService",(alert_types & AE_HOST_ALERT)?" &amp; ":"");
-			printf(" Alerts</td>\n");
+				printf("%sサービス",(alert_types & AE_HOST_ALERT)?" &amp; ":"");
+			printf(" 警報</td>\n");
 			printf("</tr>\n");
 
 			printf("<tr>\n");
-			printf("<td valign=top align=left class='optBoxItem'>State Types:</td>\n");
+			printf("<td valign=top align=left class='optBoxItem'>ステートタイプ:</td>\n");
 			printf("<td valign=top align=left class='optBoxValue'>");
 			if(state_types & AE_SOFT_STATE)
-				printf("Soft");
+				printf("ソフト");
 			if(state_types & AE_HARD_STATE)
-				printf("%sHard",(state_types & AE_SOFT_STATE)?" &amp; ":"");
-			printf(" States</td>\n");
+				printf("%sハード",(state_types & AE_SOFT_STATE)?" &amp; ":"");
+			printf(" ステータス</td>\n");
 			printf("</tr>\n");
 
 			printf("<tr>\n");
-			printf("<td valign=top align=left class='optBoxItem'>Host States:</td>\n");
+			printf("<td valign=top align=left class='optBoxItem'>ホストの状態:</td>\n");
 			printf("<td valign=top align=left class='optBoxValue'>");
 			x=0;
 			if(host_states & AE_HOST_UP){
-				printf("Up");
+				printf("稼働(UP)");
 				x=1;
 			        }
 			if(host_states & AE_HOST_DOWN){
-				printf("%sDown",(x==1)?", ":"");
+				printf("%s停止(DOWN)",(x==1)?", ":"");
 				x=1;
 			        }
 			if(host_states & AE_HOST_UNREACHABLE)
-				printf("%sUnreachable",(x==1)?", ":"");
+				printf("%s未到達(UNREACHABLE)",(x==1)?", ":"");
 			if(x==0)
-				printf("None");
+				printf("無し");
 			printf("</td>\n");
 			printf("</tr>\n");
 
 			printf("<tr>\n");
-			printf("<td valign=top align=left class='optBoxItem'>Service States:</td>\n");
+			printf("<td valign=top align=left class='optBoxItem'>サービスの状態:</td>\n");
 			printf("<td valign=top align=left class='optBoxValue'>");
 			x=0;
 			if(service_states & AE_SERVICE_OK){
-				printf("Ok");
+				printf("正常(OK)");
 				x=1;
 			        }
 			if(service_states & AE_SERVICE_WARNING){
-				printf("%sWarning",(x==1)?", ":"");
+				printf("%s警告(WARNING)",(x==1)?", ":"");
 				x=1;
 			        }
 			if(service_states & AE_SERVICE_UNKNOWN){
-				printf("%sUnknown",(x==1)?", ":"");
+				printf("%s不明(UNKNOWN)",(x==1)?", ":"");
 				x=1;
 			        }
 			if(service_states & AE_SERVICE_CRITICAL)
-				printf("%sCritical",(x==1)?", ":"");
+				printf("%s異常(CRITICAL)",(x==1)?", ":"");
 			if(x==0)
-				printf("None");
+				printf("無し");
 			printf("</td>\n");
 			printf("</tr>\n");
 
 			printf("<tr>\n");
 			printf("<td valign=top align=left colspan=2 class='optBoxItem'>\n");
 			printf("<form action='%s' method='GET'>\n",SUMMARY_CGI);
-			printf("<input type='submit' name='btnSubmit' value='Generate New Report'>\n");
+			printf("<input type='submit' name='btnSubmit' value='新規レポート作成'>\n");
 			printf("</form>\n");
 			printf("</td>\n");
 			printf("</tr>\n");
@@ -462,7 +462,7 @@
 		end_day=t->tm_mday;
 		end_year=t->tm_year+1900;
 
-		printf("<DIV ALIGN=CENTER CLASS='dateSelectTitle'>Standard Reports:</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dateSelectTitle'>標準レポート:</DIV>\n");
 		printf("<DIV ALIGN=CENTER>\n");
 	        printf("<form method=\"get\" action=\"%s\">\n",SUMMARY_CGI);
 
@@ -470,25 +470,25 @@
 
 		printf("<table border=0 cellpadding=5>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Report Type:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>レポートの種類:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='standardreport'>\n");
-		printf("<option value=%d>25 Most Recent Hard Alerts\n",SREPORT_RECENT_ALERTS);
-		printf("<option value=%d>25 Most Recent Hard Host Alerts\n",SREPORT_RECENT_HOST_ALERTS);
-		printf("<option value=%d>25 Most Recent Hard Service Alerts\n",SREPORT_RECENT_SERVICE_ALERTS);
-		printf("<option value=%d>Top 25 Hard Host Alert Producers\n",SREPORT_TOP_HOST_ALERTS);
-		printf("<option value=%d>Top 25 Hard Service Alert Producers\n",SREPORT_TOP_SERVICE_ALERTS);
+		printf("<option value=%d>最近のハード警報(25件)\n",SREPORT_RECENT_ALERTS);
+		printf("<option value=%d>最近のホストのハード警報(25件)\n",SREPORT_RECENT_HOST_ALERTS);
+		printf("<option value=%d>最近のサービスのハード警報(25件)\n",SREPORT_RECENT_SERVICE_ALERTS);
+		printf("<option value=%d>ホスト別ハード警報のトップ25\n",SREPORT_TOP_HOST_ALERTS);
+		printf("<option value=%d>サービス別ハード警報のトップ25\n",SREPORT_TOP_SERVICE_ALERTS);
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='Create Summary Report!'></td></tr>\n");
+		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='サマリレポート作成'></td></tr>\n");
 
 		printf("</table>\n");
 
 		printf("</form>\n");
 		printf("</DIV>\n");
 
-		printf("<DIV ALIGN=CENTER CLASS='dateSelectTitle'>Custom Report Options:</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dateSelectTitle'>カスタムレポートオプション:</DIV>\n");
 		printf("<DIV ALIGN=CENTER>\n");
 	        printf("<form method=\"get\" action=\"%s\">\n",SUMMARY_CGI);
 
@@ -496,60 +496,63 @@
 
 		printf("<table border=0 cellpadding=5>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Report Type:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>レポートタイプ:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='displaytype'>\n");
-		printf("<option value=%d>Most Recent Alerts\n",REPORT_RECENT_ALERTS);
-		printf("<option value=%d>Alert Totals\n",REPORT_ALERT_TOTALS);
-		printf("<option value=%d>Alert Totals By Hostgroup\n",REPORT_HOSTGROUP_ALERT_TOTALS);
-		printf("<option value=%d>Alert Totals By Host\n",REPORT_HOST_ALERT_TOTALS);
-		printf("<option value=%d>Alert Totals By Servicegroup\n",REPORT_SERVICEGROUP_ALERT_TOTALS);
-		printf("<option value=%d>Alert Totals By Service\n",REPORT_SERVICE_ALERT_TOTALS);
-		printf("<option value=%d>Top Alert Producers\n",REPORT_TOP_ALERTS);
+		printf("<option value=%d>最近の警報\n",REPORT_RECENT_ALERTS);
+		printf("<option value=%d>警報全体\n",REPORT_ALERT_TOTALS);
+		printf("<option value=%d>ホストグループ毎の警報全体\n",REPORT_HOSTGROUP_ALERT_TOTALS);
+		printf("<option value=%d>ホスト毎の警報全体\n",REPORT_HOST_ALERT_TOTALS);
+		printf("<option value=%d>サービスグループ毎の警報全体\n",REPORT_SERVICEGROUP_ALERT_TOTALS);
+		printf("<option value=%d>サービス毎の警報全体\n",REPORT_SERVICE_ALERT_TOTALS);
+		printf("<option value=%d>トップ警報発生元\n",REPORT_TOP_ALERTS);
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
 		printf("<tr>");
-		printf("<td valign=top class='reportSelectSubTitle'>Report Period:</td>\n");
+		printf("<td valign=top class='reportSelectSubTitle'>レポート期間:</td>\n");
 		printf("<td valign=top align=left class='optBoxItem'>\n");
 		printf("<select name='timeperiod'>\n");
-		printf("<option value=today>Today\n");
-		printf("<option value=last24hours>Last 24 Hours\n");
-		printf("<option value=yesterday>Yesterday\n");
-		printf("<option value=thisweek>This Week\n");
-		printf("<option value=last7days SELECTED>Last 7 Days\n");
-		printf("<option value=lastweek>Last Week\n");
-		printf("<option value=thismonth>This Month\n");
-		printf("<option value=last31days>Last 31 Days\n");
-		printf("<option value=lastmonth>Last Month\n");
-		printf("<option value=thisyear>This Year\n");
-		printf("<option value=lastyear>Last Year\n");
-		printf("<option value=custom>* CUSTOM REPORT PERIOD *\n");
+		printf("<option value=today>今日\n");
+		printf("<option value=last24hours>過去24時間\n");
+		printf("<option value=yesterday>昨日\n");
+		printf("<option value=thisweek>今週\n");
+		printf("<option value=last7days SELECTED>過去7日間\n");
+		printf("<option value=lastweek>先週\n");
+		printf("<option value=thismonth>今月\n");
+		printf("<option value=last31days>過去31日間\n");
+		printf("<option value=lastmonth>先月\n");
+		printf("<option value=thisyear>今年\n");
+		printf("<option value=lastyear>去年\n");
+		printf("<option value=custom>* カスタム期間設定 *\n");
 		printf("</select>\n");
 		printf("</td>\n");
 		printf("</tr>\n");
 
-		printf("<tr><td valign=top class='reportSelectSubTitle'>If Custom Report Period...</td></tr>\n");
+		printf("<tr><td valign=top class='reportSelectSubTitle'>期間をカスタマイズ...</td></tr>\n");
 
 		printf("<tr>");
-		printf("<td valign=top class='reportSelectSubTitle'>Start Date (Inclusive):</td>\n");
+		printf("<td valign=top class='reportSelectSubTitle'>開始日(指定日を含む):</td>\n");
 		printf("<td align=left valign=top class='reportSelectItem'>");
+		printf("<input type='text' size='4' maxlength='4' name='syear' value='%d'>",start_year);
+		printf("年");
 		printf("<select name='smon'>\n");
-		printf("<option value='1' %s>January\n",(t->tm_mon==0)?"SELECTED":"");
-		printf("<option value='2' %s>February\n",(t->tm_mon==1)?"SELECTED":"");
-		printf("<option value='3' %s>March\n",(t->tm_mon==2)?"SELECTED":"");
-		printf("<option value='4' %s>April\n",(t->tm_mon==3)?"SELECTED":"");
-		printf("<option value='5' %s>May\n",(t->tm_mon==4)?"SELECTED":"");
-		printf("<option value='6' %s>June\n",(t->tm_mon==5)?"SELECTED":"");
-		printf("<option value='7' %s>July\n",(t->tm_mon==6)?"SELECTED":"");
-		printf("<option value='8' %s>August\n",(t->tm_mon==7)?"SELECTED":"");
-		printf("<option value='9' %s>September\n",(t->tm_mon==8)?"SELECTED":"");
-		printf("<option value='10' %s>October\n",(t->tm_mon==9)?"SELECTED":"");
-		printf("<option value='11' %s>November\n",(t->tm_mon==10)?"SELECTED":"");
-		printf("<option value='12' %s>December\n",(t->tm_mon==11)?"SELECTED":"");
+		printf("<option value='1' %s>1\n",(t->tm_mon==0)?"SELECTED":"");
+		printf("<option value='2' %s>2\n",(t->tm_mon==1)?"SELECTED":"");
+		printf("<option value='3' %s>3\n",(t->tm_mon==2)?"SELECTED":"");
+		printf("<option value='4' %s>4\n",(t->tm_mon==3)?"SELECTED":"");
+		printf("<option value='5' %s>5\n",(t->tm_mon==4)?"SELECTED":"");
+		printf("<option value='6' %s>6\n",(t->tm_mon==5)?"SELECTED":"");
+		printf("<option value='7' %s>7\n",(t->tm_mon==6)?"SELECTED":"");
+		printf("<option value='8' %s>8\n",(t->tm_mon==7)?"SELECTED":"");
+		printf("<option value='9' %s>9\n",(t->tm_mon==8)?"SELECTED":"");
+		printf("<option value='10' %s>10\n",(t->tm_mon==9)?"SELECTED":"");
+		printf("<option value='11' %s>11\n",(t->tm_mon==10)?"SELECTED":"");
+		printf("<option value='12' %s>12\n",(t->tm_mon==11)?"SELECTED":"");
 		printf("</select>\n ");
+		printf("月");
 		printf("<input type='text' size='2' maxlength='2' name='sday' value='%d'> ",start_day);
-		printf("<input type='text' size='4' maxlength='4' name='syear' value='%d'>",start_year);
+		printf("日");
 		printf("<input type='hidden' name='shour' value='0'>\n");
 		printf("<input type='hidden' name='smin' value='0'>\n");
 		printf("<input type='hidden' name='ssec' value='0'>\n");
@@ -557,24 +560,27 @@
 		printf("</tr>\n");
 
 		printf("<tr>");
-		printf("<td valign=top class='reportSelectSubTitle'>End Date (Inclusive):</td>\n");
+		printf("<td valign=top class='reportSelectSubTitle'>終了日(指定日を含む):</td>\n");
 		printf("<td align=left valign=top class='reportSelectItem'>");
+		printf("<input type='text' size='4' maxlength='4' name='eyear' value='%d'>",end_year);
+		printf("年");
 		printf("<select name='emon'>\n");
-		printf("<option value='1' %s>January\n",(t->tm_mon==0)?"SELECTED":"");
-		printf("<option value='2' %s>February\n",(t->tm_mon==1)?"SELECTED":"");
-		printf("<option value='3' %s>March\n",(t->tm_mon==2)?"SELECTED":"");
-		printf("<option value='4' %s>April\n",(t->tm_mon==3)?"SELECTED":"");
-		printf("<option value='5' %s>May\n",(t->tm_mon==4)?"SELECTED":"");
-		printf("<option value='6' %s>June\n",(t->tm_mon==5)?"SELECTED":"");
-		printf("<option value='7' %s>July\n",(t->tm_mon==6)?"SELECTED":"");
-		printf("<option value='8' %s>August\n",(t->tm_mon==7)?"SELECTED":"");
-		printf("<option value='9' %s>September\n",(t->tm_mon==8)?"SELECTED":"");
-		printf("<option value='10' %s>October\n",(t->tm_mon==9)?"SELECTED":"");
-		printf("<option value='11' %s>November\n",(t->tm_mon==10)?"SELECTED":"");
-		printf("<option value='12' %s>December\n",(t->tm_mon==11)?"SELECTED":"");
+		printf("<option value='1' %s>1\n",(t->tm_mon==0)?"SELECTED":"");
+		printf("<option value='2' %s>2\n",(t->tm_mon==1)?"SELECTED":"");
+		printf("<option value='3' %s>3\n",(t->tm_mon==2)?"SELECTED":"");
+		printf("<option value='4' %s>4\n",(t->tm_mon==3)?"SELECTED":"");
+		printf("<option value='5' %s>5\n",(t->tm_mon==4)?"SELECTED":"");
+		printf("<option value='6' %s>6\n",(t->tm_mon==5)?"SELECTED":"");
+		printf("<option value='7' %s>7\n",(t->tm_mon==6)?"SELECTED":"");
+		printf("<option value='8' %s>8\n",(t->tm_mon==7)?"SELECTED":"");
+		printf("<option value='9' %s>9\n",(t->tm_mon==8)?"SELECTED":"");
+		printf("<option value='10' %s>10\n",(t->tm_mon==9)?"SELECTED":"");
+		printf("<option value='11' %s>11\n",(t->tm_mon==10)?"SELECTED":"");
+		printf("<option value='12' %s>12\n",(t->tm_mon==11)?"SELECTED":"");
 		printf("</select>\n ");
+		printf("月");
 		printf("<input type='text' size='2' maxlength='2' name='eday' value='%d'> ",end_day);
-		printf("<input type='text' size='4' maxlength='4' name='eyear' value='%d'>",end_year);
+		printf("日");
 		printf("<input type='hidden' name='ehour' value='24'>\n");
 		printf("<input type='hidden' name='emin' value='0'>\n");
 		printf("<input type='hidden' name='esec' value='0'>\n");
@@ -583,9 +589,9 @@
 
 		printf("<tr><td colspan=2><br></td></tr>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' valign=center>Limit To Hostgroup:</td><td align=left valign=center class='reportSelectItem'>\n");
+		printf("<tr><td class='reportSelectSubTitle' valign=center>対象ホストグループ:</td><td align=left valign=center class='reportSelectItem'>\n");
 		printf("<select name='hostgroup'>\n");
-		printf("<option value='all'>** ALL HOSTGROUPS **\n");
+		printf("<option value='all'>** 全てのホストグループ **\n");
 		for(temp_hostgroup=hostgroup_list;temp_hostgroup!=NULL;temp_hostgroup=temp_hostgroup->next){
 			if(is_authorized_for_hostgroup(temp_hostgroup,&current_authdata)==TRUE)
 				printf("<option value='%s'>%s\n",escape_string(temp_hostgroup->group_name),temp_hostgroup->group_name);
@@ -594,9 +600,9 @@
 		printf("</td></tr>\n");
 
 		/* Opsera patch: Remove servicegroup option
-		printf("<tr><td class='reportSelectSubTitle' valign=center>Limit To Servicegroup:</td><td align=left valign=center class='reportSelectItem'>\n");
+		printf("<tr><td class='reportSelectSubTitle' valign=center>対象サービスグループ:</td><td align=left valign=center class='reportSelectItem'>\n");
 		printf("<select name='servicegroup'>\n");
-		printf("<option value='all'>** ALL SERVICEGROUPS **\n");
+		printf("<option value='all'>** 全てのサービスグループ **\n");
 		for(temp_servicegroup=servicegroup_list;temp_servicegroup!=NULL;temp_servicegroup=temp_servicegroup->next){
 			if(is_authorized_for_servicegroup(temp_servicegroup,&current_authdata)==TRUE)
 				printf("<option value='%s'>%s\n",escape_string(temp_servicegroup->group_name),temp_servicegroup->group_name);
@@ -605,9 +611,9 @@
 		printf("</td></tr>\n");
 		*/
 
-		printf("<tr><td class='reportSelectSubTitle' valign=center>Limit To Host:</td><td align=left valign=center class='reportSelectItem'>\n");
+		printf("<tr><td class='reportSelectSubTitle' valign=center>対象ホスト:</td><td align=left valign=center class='reportSelectItem'>\n");
 		printf("<select name='host'>\n");
-		printf("<option value='all'>** ALL HOSTS **\n");
+		printf("<option value='all'>** 全てのホスト **\n");
 
 		for(temp_host=host_list;temp_host!=NULL;temp_host=temp_host->next){
 			if(is_authorized_for_host(temp_host,&current_authdata)==TRUE)
@@ -616,53 +622,53 @@
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Alert Types:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>警告タイプ:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='alerttypes'>\n");
-		printf("<option value=%d %s>Host and Service Alerts\n",AE_HOST_ALERT+AE_SERVICE_ALERT,(alert_types==AE_HOST_ALERT+AE_SERVICE_ALERT)?"SELECTED":"");
-		printf("<option value=%d %s>Host Alerts\n",AE_HOST_ALERT,(alert_types==AE_HOST_ALERT)?"SELECTED":"");
-		printf("<option value=%d %s>Service Alerts\n",AE_SERVICE_ALERT,(alert_types==AE_SERVICE_ALERT)?"SELECTED":"");
+		printf("<option value=%d %s>ホストとサービス\n",AE_HOST_ALERT+AE_SERVICE_ALERT,(alert_types==AE_HOST_ALERT+AE_SERVICE_ALERT)?"SELECTED":"");
+		printf("<option value=%d %s>ホスト\n",AE_HOST_ALERT,(alert_types==AE_HOST_ALERT)?"SELECTED":"");
+		printf("<option value=%d %s>サービス\n",AE_SERVICE_ALERT,(alert_types==AE_SERVICE_ALERT)?"SELECTED":"");
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>State Types:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>ステートタイプ:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='statetypes'>\n");
-		printf("<option value=%d %s>Hard and Soft States\n",AE_HARD_STATE+AE_SOFT_STATE,(state_types==AE_HARD_STATE+AE_SOFT_STATE)?"SELECTED":"");
-		printf("<option value=%d %s>Hard States\n",AE_HARD_STATE,(state_types==AE_HARD_STATE)?"SELECTED":"");
-		printf("<option value=%d %s>Soft States\n",AE_SOFT_STATE,(state_types==AE_SOFT_STATE)?"SELECTED":"");
+		printf("<option value=%d %s>ハードとソフト\n",AE_HARD_STATE+AE_SOFT_STATE,(state_types==AE_HARD_STATE+AE_SOFT_STATE)?"SELECTED":"");
+		printf("<option value=%d %s>ハード\n",AE_HARD_STATE,(state_types==AE_HARD_STATE)?"SELECTED":"");
+		printf("<option value=%d %s>ソフト\n",AE_SOFT_STATE,(state_types==AE_SOFT_STATE)?"SELECTED":"");
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Host States:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>ホスト状態:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='hoststates'>\n");
-		printf("<option value=%d>All Host States\n",AE_HOST_UP+AE_HOST_DOWN+AE_HOST_UNREACHABLE);
-		printf("<option value=%d>Host Problem States\n",AE_HOST_DOWN+AE_HOST_UNREACHABLE);
-		printf("<option value=%d>Host Up States\n",AE_HOST_UP);
-		printf("<option value=%d>Host Down States\n",AE_HOST_DOWN);
-		printf("<option value=%d>Host Unreachable States\n",AE_HOST_UNREACHABLE);
+		printf("<option value=%d>全ての状態\n",AE_HOST_UP+AE_HOST_DOWN+AE_HOST_UNREACHABLE);
+		printf("<option value=%d>障害(UP以外)\n",AE_HOST_DOWN+AE_HOST_UNREACHABLE);
+		printf("<option value=%d>稼働(UP)\n",AE_HOST_UP);
+		printf("<option value=%d>停止(DOWN)\n",AE_HOST_DOWN);
+		printf("<option value=%d>未到達(UNREACHABLE)\n",AE_HOST_UNREACHABLE);
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Service States:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>サービス状態:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<select name='servicestates'>\n");
-		printf("<option value=%d>All Service States\n",AE_SERVICE_OK+AE_SERVICE_WARNING+AE_SERVICE_UNKNOWN+AE_SERVICE_CRITICAL);
-		printf("<option value=%d>Service Problem States\n",AE_SERVICE_WARNING+AE_SERVICE_UNKNOWN+AE_SERVICE_CRITICAL);
-		printf("<option value=%d>Service Ok States\n",AE_SERVICE_OK);
-		printf("<option value=%d>Service Warning States\n",AE_SERVICE_WARNING);
-		printf("<option value=%d>Service Unknown States\n",AE_SERVICE_UNKNOWN);
-		printf("<option value=%d>Service Critical States\n",AE_SERVICE_CRITICAL);
+		printf("<option value=%d>全ての状態\n",AE_SERVICE_OK+AE_SERVICE_WARNING+AE_SERVICE_UNKNOWN+AE_SERVICE_CRITICAL);
+		printf("<option value=%d>障害(OK以外)\n",AE_SERVICE_WARNING+AE_SERVICE_UNKNOWN+AE_SERVICE_CRITICAL);
+		printf("<option value=%d>正常(OK)\n",AE_SERVICE_OK);
+		printf("<option value=%d>警告(WARNING)\n",AE_SERVICE_WARNING);
+		printf("<option value=%d>不明(UNKNOWN)\n",AE_SERVICE_UNKNOWN);
+		printf("<option value=%d>異常(CRITICAL)\n",AE_SERVICE_CRITICAL);
 		printf("</select>\n");
 		printf("</td></tr>\n");
 
-		printf("<tr><td class='reportSelectSubTitle' align=right>Max List Items:</td>\n");
+		printf("<tr><td class='reportSelectSubTitle' align=right>最大リスト表示:</td>\n");
 		printf("<td class='reportSelectItem'>\n");
 		printf("<input type='text' name='limit' size='3' maxlength='3' value='%d'>\n",item_limit);
 		printf("</td></tr>\n");
 
-		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='Create Summary Report!'></td></tr>\n");
+		printf("<tr><td></td><td align=left class='dateSelectItem'><input type='submit' value='サマリレポート作成'></td></tr>\n");
 
 		printf("</table>\n");
 
@@ -712,8 +718,10 @@
 	printf("<html>\n");
 	printf("<head>\n");
 	printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
+	printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
+	printf("<meta http-equiv='Pragma' content='no-cache'>\n");
 	printf("<title>\n");
-	printf("Nagios Event Summary\n");
+	printf("イベントサマリ\n");
 	printf("</title>\n");
 
 	if(use_stylesheet==TRUE){
@@ -1566,9 +1574,9 @@
 
 #ifdef DEBUG
 	if(event_type==AE_HOST_ALERT)
-		printf("Adding host alert (%s) @ %lu<BR>\n",host_name,(unsigned long)time_stamp);
+		printf("ホスト警報を追加しています(%s) @ %lu<BR>\n",host_name,(unsigned long)time_stamp);
 	else
-		printf("Adding service alert (%s/%s) @ %lu<BR>\n",host_name,svc_description,(unsigned long)time_stamp);
+		printf("サービス警報を追加しています(%s/%s) @ %lu<BR>\n",host_name,svc_description,(unsigned long)time_stamp);
 #endif
 
 	/* allocate memory for the new entry */
@@ -1746,13 +1754,13 @@
 	printf("<BR>\n");
 
 	if(item_limit<=0 || total_items<=item_limit || total_items==0)
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Displaying all %d matching alerts\n",total_items);
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>全 %d 件の警報を表示しています。\n",total_items);
 	else
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Displaying most recent %d of %d total matching alerts\n",item_limit,total_items);
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>%d / %d 件の最近の警報を表示しています。\n",item_limit,total_items);
 
 	printf("<DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
-	printf("<TR><TH CLASS='data'>Time</TH><TH CLASS='data'>Alert Type</TH><TH CLASS='data'>Host</TH><TH CLASS='data'>Service</TH><TH CLASS='data'>State</TH><TH CLASS='data'>State Type</TH><TH CLASS='data'>Information</TH></TR>\n");
+	printf("<TR><TH CLASS='data'>時間</TH><TH CLASS='data'>警報の種類</TH><TH CLASS='data'>ホスト名</TH><TH CLASS='data'>サービス名</TH><TH CLASS='data'>状態</TH><TH CLASS='data'>ステータスタイプ</TH><TH CLASS='data'>ステータス情報</TH></TR>\n");
 
 
 	for(temp_event=event_list;temp_event!=NULL;temp_event=temp_event->next,current_item++){
@@ -1774,7 +1782,7 @@
 		get_time_string(&temp_event->time_stamp,date_time,(int)sizeof(date_time),SHORT_DATE_TIME);
 		printf("<td CLASS='data%s'>%s</td>",bgclass,date_time);
 
-		printf("<td CLASS='data%s'>%s</td>",bgclass,(temp_event->event_type==AE_HOST_ALERT)?"Host Alert":"Service Alert");
+		printf("<td CLASS='data%s'>%s</td>",bgclass,(temp_event->event_type==AE_HOST_ALERT)?"ホスト警報":"サービス警報");
 
 		printf("<td CLASS='data%s'><a href='%s?type=%d&host=%s'>%s</a></td>",bgclass,EXTINFO_CGI,DISPLAY_HOST_INFO,url_encode(temp_event->host_name),temp_event->host_name);
 
@@ -1788,31 +1796,31 @@
 		switch(temp_event->entry_type){
 		case AE_HOST_UP:
 			status_bgclass="hostUP";
-			status="UP";
+			status="稼働(UP)";
 			break;
 		case AE_HOST_DOWN:
 			status_bgclass="hostDOWN";
-			status="DOWN";
+			status="停止(DOWN)";
 			break;
 		case AE_HOST_UNREACHABLE:
 			status_bgclass="hostUNREACHABLE";
-			status="UNREACHABLE";
+			status="未到達(UNREACHABLE)";
 			break;
 		case AE_SERVICE_OK:
 			status_bgclass="serviceOK";
-			status="OK";
+			status="正常(OK)";
 			break;
 		case AE_SERVICE_WARNING:
 			status_bgclass="serviceWARNING";
-			status="WARNING";
+			status="警告(WARNING)";
 			break;
 		case AE_SERVICE_UNKNOWN:
 			status_bgclass="serviceUNKNOWN";
-			status="UNKNOWN";
+			status="不明(UNKNOWN)";
 			break;
 		case AE_SERVICE_CRITICAL:
 			status_bgclass="serviceCRITICAL";
-			status="CRITICAL";
+			status="異常(CRITICAL)";
 			break;
 		default:
 			status_bgclass=bgclass;
@@ -1822,7 +1830,7 @@
 
 		printf("<td CLASS='%s'>%s</td>",status_bgclass,status);
 
-		printf("<td CLASS='data%s'>%s</td>",bgclass,(temp_event->state_type==AE_SOFT_STATE)?"SOFT":"HARD");
+		printf("<td CLASS='data%s'>%s</td>",bgclass,(temp_event->state_type==AE_SOFT_STATE)?"ソフト":"ハード");
 
 		printf("<td CLASS='data%s'>%s</td>",bgclass,temp_event->event_info);
 
@@ -1911,7 +1919,7 @@
 	printf("<BR>\n");
 
 	printf("<DIV ALIGN=CENTER>\n");
-	printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Overall Totals</DIV>\n");
+	printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>総合</DIV>\n");
 	printf("<BR>\n");
 	printf("<TABLE BORDER=1 CELLSPACING=0 CELLPADDING=0 CLASS='reportDataOdd'><TR><TD>\n");
 	printf("<TABLE BORDER=0>\n");
@@ -1921,16 +1929,16 @@
 
 		printf("<TD ALIGN=CENTER VALIGN=TOP>\n");
 
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Host Alerts</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>ホスト警報</DIV>\n");
 
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>State</TH><TH CLASS='data'>Soft Alerts</TH><TH CLASS='data'>Hard Alerts</TH><TH CLASS='data'>Total Alerts</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>状態</TH><TH CLASS='data'>ソフト警報</TH><TH CLASS='data'>ハード警報</TH><TH CLASS='data'>警報全体の状況</TH></TR>\n");
 
-		printf("<TR CLASS='dataOdd'><TD CLASS='hostUP'>UP</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_up_alerts,hard_host_up_alerts,soft_host_up_alerts+hard_host_up_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='hostDOWN'>DOWN</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_host_down_alerts,hard_host_down_alerts,soft_host_down_alerts+hard_host_down_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='hostUNREACHABLE'>UNREACHABLE</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_unreachable_alerts,hard_host_unreachable_alerts,soft_host_unreachable_alerts+hard_host_unreachable_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='dataEven'>All States</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'><B>%d</B></TD></TR>\n",soft_host_up_alerts+soft_host_down_alerts+soft_host_unreachable_alerts,hard_host_up_alerts+hard_host_down_alerts+hard_host_unreachable_alerts,soft_host_up_alerts+hard_host_up_alerts+soft_host_down_alerts+hard_host_down_alerts+soft_host_unreachable_alerts+hard_host_unreachable_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='hostUP'>稼働(UP)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_up_alerts,hard_host_up_alerts,soft_host_up_alerts+hard_host_up_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='hostDOWN'>停止(DOWN)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_host_down_alerts,hard_host_down_alerts,soft_host_down_alerts+hard_host_down_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='hostUNREACHABLE'>未到達(UNREACHABLE)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_unreachable_alerts,hard_host_unreachable_alerts,soft_host_unreachable_alerts+hard_host_unreachable_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='dataEven'>全て</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'><B>%d</B></TD></TR>\n",soft_host_up_alerts+soft_host_down_alerts+soft_host_unreachable_alerts,hard_host_up_alerts+hard_host_down_alerts+hard_host_unreachable_alerts,soft_host_up_alerts+hard_host_up_alerts+soft_host_down_alerts+hard_host_down_alerts+soft_host_unreachable_alerts+hard_host_unreachable_alerts);
 
 		printf("</TABLE>\n");
 		printf("</DIV>\n");
@@ -1942,17 +1950,17 @@
 
 		printf("<TD ALIGN=CENTER VALIGN=TOP>\n");
 
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Service Alerts</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>サービス警報</DIV>\n");
 
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>State</TH><TH CLASS='data'>Soft Alerts</TH><TH CLASS='data'>Hard Alerts</TH><TH CLASS='data'>Total Alerts</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>状態</TH><TH CLASS='data'>ソフト警報</TH><TH CLASS='data'>ハード警報</TH><TH CLASS='data'>警報全体の状況</TH></TR>\n");
 
-		printf("<TR CLASS='dataOdd'><TD CLASS='serviceOK'>OK</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_ok_alerts,hard_service_ok_alerts,soft_service_ok_alerts+hard_service_ok_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='serviceWARNING'>WARNING</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_warning_alerts,hard_service_warning_alerts,soft_service_warning_alerts+hard_service_warning_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='serviceUNKNOWN'>UNKNOWN</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_unknown_alerts,hard_service_unknown_alerts,soft_service_unknown_alerts+hard_service_unknown_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='serviceCRITICAL'>CRITICAL</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_critical_alerts,hard_service_critical_alerts,soft_service_critical_alerts+hard_service_critical_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='dataOdd'>All States</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'><B>%d</B></TD></TR>\n",soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts,hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts,soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts+hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='serviceOK'>正常(OK)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_ok_alerts,hard_service_ok_alerts,soft_service_ok_alerts+hard_service_ok_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='serviceWARNING'>警告(WARNING)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_warning_alerts,hard_service_warning_alerts,soft_service_warning_alerts+hard_service_warning_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='serviceUNKNOWN'>不明(UNKNOWN)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_unknown_alerts,hard_service_unknown_alerts,soft_service_unknown_alerts+hard_service_unknown_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='serviceCRITICAL'>異常(CRITICAL)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_critical_alerts,hard_service_critical_alerts,soft_service_critical_alerts+hard_service_critical_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='dataOdd'>全て</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'><B>%d</B></TD></TR>\n",soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts,hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts,soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts+hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts);
 
 		printf("</TABLE>\n");
 		printf("</DIV>\n");
@@ -1981,7 +1989,7 @@
 	printf("<BR>\n");
 
 	printf("<DIV ALIGN=CENTER>\n");
-	printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Totals By Hostgroup</DIV>\n");
+	printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>ホストグループ毎の全体状況</DIV>\n");
 
 	if(show_all_hostgroups==FALSE)
 		display_specific_hostgroup_alert_totals(target_hostgroup);
@@ -2079,7 +2087,7 @@
 	printf("<TABLE BORDER=1 CELLSPACING=0 CELLPADDING=0 CLASS='reportDataEven'><TR><TD>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<TR><TD COLSPAN=2 ALIGN=CENTER CLASS='dataSubTitle'>Hostgroup '%s' (%s)</TD></TR>\n",grp->group_name,grp->alias);
+	printf("<TR><TD COLSPAN=2 ALIGN=CENTER CLASS='dataSubTitle'>ホストグループ '%s' (%s)</TD></TR>\n",grp->group_name,grp->alias);
 
 	printf("<TR>\n");
 
@@ -2087,16 +2095,16 @@
 
 		printf("<TD ALIGN=CENTER VALIGN=TOP>\n");
 
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Host Alerts</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>ホスト警報</DIV>\n");
 
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>State</TH><TH CLASS='data'>Soft Alerts</TH><TH CLASS='data'>Hard Alerts</TH><TH CLASS='data'>Total Alerts</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>状態</TH><TH CLASS='data'>ソフト警報</TH><TH CLASS='data'>ハード警報</TH><TH CLASS='data'>警報全体の状況</TH></TR>\n");
 
-		printf("<TR CLASS='dataOdd'><TD CLASS='hostUP'>UP</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_up_alerts,hard_host_up_alerts,soft_host_up_alerts+hard_host_up_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='hostDOWN'>DOWN</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_host_down_alerts,hard_host_down_alerts,soft_host_down_alerts+hard_host_down_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='hostUNREACHABLE'>UNREACHABLE</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_unreachable_alerts,hard_host_unreachable_alerts,soft_host_unreachable_alerts+hard_host_unreachable_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='dataEven'>All States</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'><B>%d</B></TD></TR>\n",soft_host_up_alerts+soft_host_down_alerts+soft_host_unreachable_alerts,hard_host_up_alerts+hard_host_down_alerts+hard_host_unreachable_alerts,soft_host_up_alerts+hard_host_up_alerts+soft_host_down_alerts+hard_host_down_alerts+soft_host_unreachable_alerts+hard_host_unreachable_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='hostUP'>稼働(UP)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_up_alerts,hard_host_up_alerts,soft_host_up_alerts+hard_host_up_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='hostDOWN'>停止(DOWN)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_host_down_alerts,hard_host_down_alerts,soft_host_down_alerts+hard_host_down_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='hostUNREACHABLE'>未到達(UNREACHABLE)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_unreachable_alerts,hard_host_unreachable_alerts,soft_host_unreachable_alerts+hard_host_unreachable_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='dataEven'>全て</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'><B>%d</B></TD></TR>\n",soft_host_up_alerts+soft_host_down_alerts+soft_host_unreachable_alerts,hard_host_up_alerts+hard_host_down_alerts+hard_host_unreachable_alerts,soft_host_up_alerts+hard_host_up_alerts+soft_host_down_alerts+hard_host_down_alerts+soft_host_unreachable_alerts+hard_host_unreachable_alerts);
 
 		printf("</TABLE>\n");
 		printf("</DIV>\n");
@@ -2108,17 +2116,17 @@
 
 		printf("<TD ALIGN=CENTER VALIGN=TOP>\n");
 
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Service Alerts</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>サービス警報</DIV>\n");
 
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>State</TH><TH CLASS='data'>Soft Alerts</TH><TH CLASS='data'>Hard Alerts</TH><TH CLASS='data'>Total Alerts</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>状態</TH><TH CLASS='data'>ソフト警報</TH><TH CLASS='data'>ハード警報</TH><TH CLASS='data'>警報全体の状況</TH></TR>\n");
 
-		printf("<TR CLASS='dataOdd'><TD CLASS='serviceOK'>OK</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_ok_alerts,hard_service_ok_alerts,soft_service_ok_alerts+hard_service_ok_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='serviceWARNING'>WARNING</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_warning_alerts,hard_service_warning_alerts,soft_service_warning_alerts+hard_service_warning_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='serviceUNKNOWN'>UNKNOWN</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_unknown_alerts,hard_service_unknown_alerts,soft_service_unknown_alerts+hard_service_unknown_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='serviceCRITICAL'>CRITICAL</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_critical_alerts,hard_service_critical_alerts,soft_service_critical_alerts+hard_service_critical_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='dataOdd'>All States</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'><B>%d</B></TD></TR>\n",soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts,hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts,soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts+hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='serviceOK'>正常(OK)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_ok_alerts,hard_service_ok_alerts,soft_service_ok_alerts+hard_service_ok_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='serviceWARNING'>警告(WARNING)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_warning_alerts,hard_service_warning_alerts,soft_service_warning_alerts+hard_service_warning_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='serviceUNKNOWN'>不明(UNKNOWN)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_unknown_alerts,hard_service_unknown_alerts,soft_service_unknown_alerts+hard_service_unknown_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='serviceCRITICAL'>異常(CRITICAL)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_critical_alerts,hard_service_critical_alerts,soft_service_critical_alerts+hard_service_critical_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='dataOdd'>全て</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'><B>%d</B></TD></TR>\n",soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts,hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts,soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts+hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts);
 
 		printf("</TABLE>\n");
 		printf("</DIV>\n");
@@ -2147,7 +2155,7 @@
 	printf("<BR>\n");
 
 	printf("<DIV ALIGN=CENTER>\n");
-	printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Totals By Host</DIV>\n");
+	printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>ホスト毎の全体状況</DIV>\n");
 
 	if(show_all_hosts==FALSE)
 		display_specific_host_alert_totals(target_host);
@@ -2248,7 +2256,7 @@
 	printf("<TABLE BORDER=1 CELLSPACING=0 CELLPADDING=0 CLASS='reportDataEven'><TR><TD>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<TR><TD COLSPAN=2 ALIGN=CENTER CLASS='dataSubTitle'>Host '%s' (%s)</TD></TR>\n",hst->name,hst->alias);
+	printf("<TR><TD COLSPAN=2 ALIGN=CENTER CLASS='dataSubTitle'>ホスト '%s' (%s)</TD></TR>\n",hst->name,hst->alias);
 
 	printf("<TR>\n");
 
@@ -2256,16 +2264,16 @@
 
 		printf("<TD ALIGN=CENTER VALIGN=TOP>\n");
 
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Host Alerts</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>ホスト警報</DIV>\n");
 
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>State</TH><TH CLASS='data'>Soft Alerts</TH><TH CLASS='data'>Hard Alerts</TH><TH CLASS='data'>Total Alerts</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>状態</TH><TH CLASS='data'>ソフト警報</TH><TH CLASS='data'>ハード警報</TH><TH CLASS='data'>警報全体の状況</TH></TR>\n");
 
-		printf("<TR CLASS='dataOdd'><TD CLASS='hostUP'>UP</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_up_alerts,hard_host_up_alerts,soft_host_up_alerts+hard_host_up_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='hostDOWN'>DOWN</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_host_down_alerts,hard_host_down_alerts,soft_host_down_alerts+hard_host_down_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='hostUNREACHABLE'>UNREACHABLE</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_unreachable_alerts,hard_host_unreachable_alerts,soft_host_unreachable_alerts+hard_host_unreachable_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='dataEven'>All States</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'><B>%d</B></TD></TR>\n",soft_host_up_alerts+soft_host_down_alerts+soft_host_unreachable_alerts,hard_host_up_alerts+hard_host_down_alerts+hard_host_unreachable_alerts,soft_host_up_alerts+hard_host_up_alerts+soft_host_down_alerts+hard_host_down_alerts+soft_host_unreachable_alerts+hard_host_unreachable_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='hostUP'>稼働(UP)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_up_alerts,hard_host_up_alerts,soft_host_up_alerts+hard_host_up_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='hostDOWN'>停止(DOWN)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_host_down_alerts,hard_host_down_alerts,soft_host_down_alerts+hard_host_down_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='hostUNREACHABLE'>未到達(UNREACHABLE)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_unreachable_alerts,hard_host_unreachable_alerts,soft_host_unreachable_alerts+hard_host_unreachable_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='dataEven'>全て</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'><B>%d</B></TD></TR>\n",soft_host_up_alerts+soft_host_down_alerts+soft_host_unreachable_alerts,hard_host_up_alerts+hard_host_down_alerts+hard_host_unreachable_alerts,soft_host_up_alerts+hard_host_up_alerts+soft_host_down_alerts+hard_host_down_alerts+soft_host_unreachable_alerts+hard_host_unreachable_alerts);
 
 		printf("</TABLE>\n");
 		printf("</DIV>\n");
@@ -2277,17 +2285,17 @@
 
 		printf("<TD ALIGN=CENTER VALIGN=TOP>\n");
 
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Service Alerts</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>サービス警報</DIV>\n");
 
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>State</TH><TH CLASS='data'>Soft Alerts</TH><TH CLASS='data'>Hard Alerts</TH><TH CLASS='data'>Total Alerts</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>状態</TH><TH CLASS='data'>ソフト警報</TH><TH CLASS='data'>ハード警報</TH><TH CLASS='data'>警報全体の状況</TH></TR>\n");
 
-		printf("<TR CLASS='dataOdd'><TD CLASS='serviceOK'>OK</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_ok_alerts,hard_service_ok_alerts,soft_service_ok_alerts+hard_service_ok_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='serviceWARNING'>WARNING</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_warning_alerts,hard_service_warning_alerts,soft_service_warning_alerts+hard_service_warning_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='serviceUNKNOWN'>UNKNOWN</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_unknown_alerts,hard_service_unknown_alerts,soft_service_unknown_alerts+hard_service_unknown_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='serviceCRITICAL'>CRITICAL</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_critical_alerts,hard_service_critical_alerts,soft_service_critical_alerts+hard_service_critical_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='dataOdd'>All States</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'><B>%d</B></TD></TR>\n",soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts,hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts,soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts+hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='serviceOK'>正常(OK)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_ok_alerts,hard_service_ok_alerts,soft_service_ok_alerts+hard_service_ok_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='serviceWARNING'>警告(WARNING)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_warning_alerts,hard_service_warning_alerts,soft_service_warning_alerts+hard_service_warning_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='serviceUNKNOWN'>不明(UNKNOWN)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_unknown_alerts,hard_service_unknown_alerts,soft_service_unknown_alerts+hard_service_unknown_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='serviceCRITICAL'>異常(CRITICAL)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_critical_alerts,hard_service_critical_alerts,soft_service_critical_alerts+hard_service_critical_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='dataOdd'>全て</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'><B>%d</B></TD></TR>\n",soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts,hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts,soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts+hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts);
 
 		printf("</TABLE>\n");
 		printf("</DIV>\n");
@@ -2315,7 +2323,7 @@
 	printf("<BR>\n");
 
 	printf("<DIV ALIGN=CENTER>\n");
-	printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Totals By Servicegroup</DIV>\n");
+	printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>サービスグループ毎の全体状況</DIV>\n");
 
 	if(show_all_servicegroups==FALSE)
 		display_specific_servicegroup_alert_totals(target_servicegroup);
@@ -2423,7 +2431,7 @@
 	printf("<TABLE BORDER=1 CELLSPACING=0 CELLPADDING=0 CLASS='reportDataEven'><TR><TD>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<TR><TD COLSPAN=2 ALIGN=CENTER CLASS='dataSubTitle'>Servicegroup '%s' (%s)</TD></TR>\n",grp->group_name,grp->alias);
+	printf("<TR><TD COLSPAN=2 ALIGN=CENTER CLASS='dataSubTitle'>サービスグループ '%s' (%s)</TD></TR>\n",grp->group_name,grp->alias);
 
 	printf("<TR>\n");
 
@@ -2431,16 +2439,16 @@
 
 		printf("<TD ALIGN=CENTER VALIGN=TOP>\n");
 
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Host Alerts</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>ホスト警報</DIV>\n");
 
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>State</TH><TH CLASS='data'>Soft Alerts</TH><TH CLASS='data'>Hard Alerts</TH><TH CLASS='data'>Total Alerts</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>状態</TH><TH CLASS='data'>ソフト警報</TH><TH CLASS='data'>ハード警報</TH><TH CLASS='data'>警報全体の状況</TH></TR>\n");
 
-		printf("<TR CLASS='dataOdd'><TD CLASS='hostUP'>UP</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_up_alerts,hard_host_up_alerts,soft_host_up_alerts+hard_host_up_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='hostDOWN'>DOWN</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_host_down_alerts,hard_host_down_alerts,soft_host_down_alerts+hard_host_down_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='hostUNREACHABLE'>UNREACHABLE</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_unreachable_alerts,hard_host_unreachable_alerts,soft_host_unreachable_alerts+hard_host_unreachable_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='dataEven'>All States</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'><B>%d</B></TD></TR>\n",soft_host_up_alerts+soft_host_down_alerts+soft_host_unreachable_alerts,hard_host_up_alerts+hard_host_down_alerts+hard_host_unreachable_alerts,soft_host_up_alerts+hard_host_up_alerts+soft_host_down_alerts+hard_host_down_alerts+soft_host_unreachable_alerts+hard_host_unreachable_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='hostUP'>稼働(UP)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_up_alerts,hard_host_up_alerts,soft_host_up_alerts+hard_host_up_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='hostDOWN'>停止(DOWN)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_host_down_alerts,hard_host_down_alerts,soft_host_down_alerts+hard_host_down_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='hostUNREACHABLE'>未到達(UNREACHABLE)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_host_unreachable_alerts,hard_host_unreachable_alerts,soft_host_unreachable_alerts+hard_host_unreachable_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='dataEven'>全て</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'><B>%d</B></TD></TR>\n",soft_host_up_alerts+soft_host_down_alerts+soft_host_unreachable_alerts,hard_host_up_alerts+hard_host_down_alerts+hard_host_unreachable_alerts,soft_host_up_alerts+hard_host_up_alerts+soft_host_down_alerts+hard_host_down_alerts+soft_host_unreachable_alerts+hard_host_unreachable_alerts);
 
 		printf("</TABLE>\n");
 		printf("</DIV>\n");
@@ -2452,17 +2460,17 @@
 
 		printf("<TD ALIGN=CENTER VALIGN=TOP>\n");
 
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Service Alerts</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>サービス警報</DIV>\n");
 
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>State</TH><TH CLASS='data'>Soft Alerts</TH><TH CLASS='data'>Hard Alerts</TH><TH CLASS='data'>Total Alerts</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>状態</TH><TH CLASS='data'>ソフト警報</TH><TH CLASS='data'>ハード警報</TH><TH CLASS='data'>警報全体の状況</TH></TR>\n");
 
-		printf("<TR CLASS='dataOdd'><TD CLASS='serviceOK'>OK</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_ok_alerts,hard_service_ok_alerts,soft_service_ok_alerts+hard_service_ok_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='serviceWARNING'>WARNING</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_warning_alerts,hard_service_warning_alerts,soft_service_warning_alerts+hard_service_warning_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='serviceUNKNOWN'>UNKNOWN</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_unknown_alerts,hard_service_unknown_alerts,soft_service_unknown_alerts+hard_service_unknown_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='serviceCRITICAL'>CRITICAL</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_critical_alerts,hard_service_critical_alerts,soft_service_critical_alerts+hard_service_critical_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='dataOdd'>All States</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'><B>%d</B></TD></TR>\n",soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts,hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts,soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts+hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='serviceOK'>正常(OK)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_ok_alerts,hard_service_ok_alerts,soft_service_ok_alerts+hard_service_ok_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='serviceWARNING'>警告(WARNING)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_warning_alerts,hard_service_warning_alerts,soft_service_warning_alerts+hard_service_warning_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='serviceUNKNOWN'>不明(UNKNOWN)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_unknown_alerts,hard_service_unknown_alerts,soft_service_unknown_alerts+hard_service_unknown_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='serviceCRITICAL'>異常(CRITICAL)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_critical_alerts,hard_service_critical_alerts,soft_service_critical_alerts+hard_service_critical_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='dataOdd'>全て</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'><B>%d</B></TD></TR>\n",soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts,hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts,soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts+hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts);
 
 		printf("</TABLE>\n");
 		printf("</DIV>\n");
@@ -2491,7 +2499,7 @@
 	printf("<BR>\n");
 
 	printf("<DIV ALIGN=CENTER>\n");
-	printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Totals By Service</DIV>\n");
+	printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>サービス毎の全体状況</DIV>\n");
 
 	for(temp_service=service_list;temp_service!=NULL;temp_service=temp_service->next)
 		display_specific_service_alert_totals(temp_service);
@@ -2570,7 +2578,7 @@
 	printf("<TABLE BORDER=1 CELLSPACING=0 CELLPADDING=0 CLASS='reportDataEven'><TR><TD>\n");
 	printf("<TABLE BORDER=0>\n");
 
-	printf("<TR><TD COLSPAN=2 ALIGN=CENTER CLASS='dataSubTitle'>Service '%s' on Host '%s'</TD></TR>\n",svc->description,svc->host_name);
+	printf("<TR><TD COLSPAN=2 ALIGN=CENTER CLASS='dataSubTitle'>ホスト '%s' 上の '%s' サービス</TD></TR>\n",svc->host_name,svc->description);
 
 	printf("<TR>\n");
 
@@ -2578,17 +2586,17 @@
 
 		printf("<TD ALIGN=CENTER VALIGN=TOP>\n");
 
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Service Alerts</DIV>\n");
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>サービス警報</DIV>\n");
 
 		printf("<DIV ALIGN=CENTER>\n");
 		printf("<TABLE BORDER=0 CLASS='data'>\n");
-		printf("<TR><TH CLASS='data'>State</TH><TH CLASS='data'>Soft Alerts</TH><TH CLASS='data'>Hard Alerts</TH><TH CLASS='data'>Total Alerts</TH></TR>\n");
+		printf("<TR><TH CLASS='data'>状態</TH><TH CLASS='data'>ソフト警報</TH><TH CLASS='data'>ハード警報</TH><TH CLASS='data'>警報全体の状況</TH></TR>\n");
 
-		printf("<TR CLASS='dataOdd'><TD CLASS='serviceOK'>OK</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_ok_alerts,hard_service_ok_alerts,soft_service_ok_alerts+hard_service_ok_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='serviceWARNING'>WARNING</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_warning_alerts,hard_service_warning_alerts,soft_service_warning_alerts+hard_service_warning_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='serviceUNKNOWN'>UNKNOWN</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_unknown_alerts,hard_service_unknown_alerts,soft_service_unknown_alerts+hard_service_unknown_alerts);
-		printf("<TR CLASS='dataEven'><TD CLASS='serviceCRITICAL'>CRITICAL</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_critical_alerts,hard_service_critical_alerts,soft_service_critical_alerts+hard_service_critical_alerts);
-		printf("<TR CLASS='dataOdd'><TD CLASS='dataOdd'>All States</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'><B>%d</B></TD></TR>\n",soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts,hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts,soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts+hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='serviceOK'>正常(OK)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_ok_alerts,hard_service_ok_alerts,soft_service_ok_alerts+hard_service_ok_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='serviceWARNING'>警告(WARNING)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_warning_alerts,hard_service_warning_alerts,soft_service_warning_alerts+hard_service_warning_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='serviceUNKNOWN'>不明(UNKNOWN)</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD></TR>\n",soft_service_unknown_alerts,hard_service_unknown_alerts,soft_service_unknown_alerts+hard_service_unknown_alerts);
+		printf("<TR CLASS='dataEven'><TD CLASS='serviceCRITICAL'>異常(CRITICAL)</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD><TD CLASS='dataEven'>%d</TD></TR>\n",soft_service_critical_alerts,hard_service_critical_alerts,soft_service_critical_alerts+hard_service_critical_alerts);
+		printf("<TR CLASS='dataOdd'><TD CLASS='dataOdd'>全て</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'>%d</TD><TD CLASS='dataOdd'><B>%d</B></TD></TR>\n",soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts,hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts,soft_service_ok_alerts+soft_service_warning_alerts+soft_service_unknown_alerts+soft_service_critical_alerts+hard_service_ok_alerts+hard_service_warning_alerts+hard_service_unknown_alerts+hard_service_critical_alerts);
 
 		printf("</TABLE>\n");
 		printf("</DIV>\n");
@@ -2756,13 +2764,13 @@
 	printf("<BR>\n");
 
 	if(item_limit<=0 || total_items<=item_limit || total_items==0)
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Displaying all %d matching alert producers\n",total_items);
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>全 %d 件のマッチした警報発信元を表示しています。\n",total_items);
 	else
-		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>Displaying top %d of %d total matching alert producers\n",item_limit,total_items);
+		printf("<DIV ALIGN=CENTER CLASS='dataSubTitle'>上位 %d / %d 件の警報発信元を表示しています。\n",item_limit,total_items);
 
 	printf("<DIV ALIGN=CENTER>\n");
 	printf("<TABLE BORDER=0 CLASS='data'>\n");
-	printf("<TR><TH CLASS='data'>Rank</TH><TH CLASS='data'>Producer Type</TH><TH CLASS='data'>Host</TH><TH CLASS='data'>Service</TH><TH CLASS='data'>Total Alerts</TH></TR>\n");
+	printf("<TR><TH CLASS='data'>ランク</TH><TH CLASS='data'>警報の種類</TH><TH CLASS='data'>ホスト名</TH><TH CLASS='data'>サービス名</TH><TH CLASS='data'>警報全体の状況</TH></TR>\n");
 
 
 
diff -urN nagios-3.2.3.orig/cgi/tac.c nagios-3.2.3/cgi/tac.c
--- nagios-3.2.3.orig/cgi/tac.c	2010-08-06 08:51:28.000000000 +0900
+++ nagios-3.2.3/cgi/tac.c	2010-12-12 19:59:07.000000000 +0900
@@ -187,7 +187,7 @@
 int services_critical=0;
 
 
-/*efine DEBUG 1*/
+/*define DEBUG 1*/
 
 int main(void){
 	int result=OK;
@@ -255,13 +255,12 @@
 		free_memory();
 		return ERROR;
                 }
+	document_header(TRUE);
 
 #ifdef DEBUG
 	time(&t5);
 #endif
 
-	document_header(TRUE);
-
 	/* get authentication information */
 	get_authentication_information(&current_authdata);
 
@@ -273,7 +272,7 @@
 
 		/* left column of top table - info box */
 		printf("<td align=left valign=top width=33%%>\n");
-		display_info_table("Tactical Status Overview",TRUE,&current_authdata);
+		display_info_table("総合監視状況",TRUE,&current_authdata);
 		printf("</td>\n");
 
 		/* middle column of top table - log file navigation options */
@@ -388,9 +387,11 @@
 
 	printf("<HTML>\n");
 	printf("<HEAD>\n");
+	printf("<meta http-equiv='content-type' content='text/html;charset=UTF-8'>\n");
+	printf("<meta http-equiv='Pragma' content='no-cache'>\n");
 	printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
 	printf("<TITLE>\n");
-	printf("Nagios Tactical Monitoring Overview\n");
+	printf("総合監視状況\n");
 	printf("</TITLE>\n");
 
 	if(use_stylesheet==TRUE){
@@ -945,7 +946,7 @@
 	/* left column */
 	printf("<td align=left valign=top width=50%%>\n");
 
-	display_info_table("Tactical Monitoring Overview",TRUE,&current_authdata);
+	display_info_table("総合監視状況",TRUE,&current_authdata);
 
 	printf("</td>\n");
 
@@ -968,7 +969,7 @@
 
 	printf("<table border=0 cellspacing=4 cellspadding=0>\n");
 	printf("<tr>\n");
-	printf("<td class='perfTitle'>&nbsp;<a href='%s?type=%d' class='perfTitle'>Monitoring Performance</a></td>\n",EXTINFO_CGI,DISPLAY_PERFORMANCE);
+	printf("<td class='perfTitle'>&nbsp;<a href='%s?type=%d' class='perfTitle'>パフォーマンス状態</a></td>\n",EXTINFO_CGI,DISPLAY_PERFORMANCE);
 	printf("</tr>\n");
 
 	printf("<tr>\n");
@@ -979,27 +980,27 @@
 	printf("<td class='perfBox'>\n");
 	printf("<table border=0 cellspacing=4 cellspadding=0>\n");
 	printf("<tr>\n");
-	printf("<td align=left valign=center class='perfItem'><a href='%s?type=%d' class='perfItem'>Service Check Execution Time:</a></td>",EXTINFO_CGI,DISPLAY_PERFORMANCE);
-	printf("<td valign=top class='perfValue' nowrap><a href='%s?type=%d' class='perfValue'>%.2f / %.2f / %.3f sec</a></td>\n",EXTINFO_CGI,DISPLAY_PERFORMANCE,min_service_execution_time,max_service_execution_time,average_service_execution_time);
+	printf("<td align=left valign=center class='perfItem'><a href='%s?type=%d' class='perfItem'>サービスチェック実行時間:</a></td>",EXTINFO_CGI,DISPLAY_PERFORMANCE);
+	printf("<td valign=top class='perfValue' nowrap><a href='%s?type=%d' class='perfValue'>%.2f / %.2f / %.3f 秒</a></td>\n",EXTINFO_CGI,DISPLAY_PERFORMANCE,min_service_execution_time,max_service_execution_time,average_service_execution_time);
 	printf("</tr>\n");
 	printf("<tr>\n");
-	printf("<td align=left valign=center class='perfItem'><a href='%s?type=%d' class='perfItem'>Service Check Latency:</a></td>",EXTINFO_CGI,DISPLAY_PERFORMANCE);
-	printf("<td valign=top class='perfValue' nowrap><a href='%s?type=%d' class='perfValue'>%.2f / %.2f / %.3f sec</a></td>\n",EXTINFO_CGI,DISPLAY_PERFORMANCE,min_service_latency,max_service_latency,average_service_latency);
+	printf("<td align=left valign=center class='perfItem'><a href='%s?type=%d' class='perfItem'>サービスチェック遅延:</a></td>",EXTINFO_CGI,DISPLAY_PERFORMANCE);
+	printf("<td valign=top class='perfValue' nowrap><a href='%s?type=%d' class='perfValue'>%.2f / %.2f / %.3f 秒</a></td>\n",EXTINFO_CGI,DISPLAY_PERFORMANCE,min_service_latency,max_service_latency,average_service_latency);
 	printf("</tr>\n");
 	printf("<tr>\n");
-	printf("<td align=left valign=center class='perfItem'><a href='%s?type=%d' class='perfItem'>Host Check Execution Time:</a></td>",EXTINFO_CGI,DISPLAY_PERFORMANCE);
-	printf("<td valign=top class='perfValue' nowrap><a href='%s?type=%d' class='perfValue'>%.2f / %.2f / %.3f sec</a></td>\n",EXTINFO_CGI,DISPLAY_PERFORMANCE,min_host_execution_time,max_host_execution_time,average_host_execution_time);
+	printf("<td align=left valign=center class='perfItem'><a href='%s?type=%d' class='perfItem'>ホストチェック実行時間:</a></td>",EXTINFO_CGI,DISPLAY_PERFORMANCE);
+	printf("<td valign=top class='perfValue' nowrap><a href='%s?type=%d' class='perfValue'>%.2f / %.2f / %.3f 秒</a></td>\n",EXTINFO_CGI,DISPLAY_PERFORMANCE,min_host_execution_time,max_host_execution_time,average_host_execution_time);
 	printf("</tr>\n");
 	printf("<tr>\n");
-	printf("<td align=left valign=center class='perfItem'><a href='%s?type=%d' class='perfItem'>Host Check Latency:</a></td>",EXTINFO_CGI,DISPLAY_PERFORMANCE);
-	printf("<td valign=top class='perfValue' nowrap><a href='%s?type=%d' class='perfValue'>%.2f / %.2f / %2.3f sec</a></td>\n",EXTINFO_CGI,DISPLAY_PERFORMANCE,min_host_latency,max_host_latency,average_host_latency);
+	printf("<td align=left valign=center class='perfItem'><a href='%s?type=%d' class='perfItem'>ホストチェック遅延:</a></td>",EXTINFO_CGI,DISPLAY_PERFORMANCE);
+	printf("<td valign=top class='perfValue' nowrap><a href='%s?type=%d' class='perfValue'>%.2f / %.2f / %2.3f 秒</a></td>\n",EXTINFO_CGI,DISPLAY_PERFORMANCE,min_host_latency,max_host_latency,average_host_latency);
 	printf("</tr>\n");
 	printf("<tr>\n");
-	printf("<td align=left valign=center class='perfItem'><a href='%s?host=all&serviceprops=%d' class='perfItem'># Active Host / Service Checks:</a></td>",STATUS_CGI,SERVICE_ACTIVE_CHECK);
+	printf("<td align=left valign=center class='perfItem'><a href='%s?host=all&serviceprops=%d' class='perfItem'>アクティブ[ホスト/サービス]チェック:</a></td>",STATUS_CGI,SERVICE_ACTIVE_CHECK);
 	printf("<td valign=top class='perfValue' nowrap><a href='%s?hostgroup=all&hostprops=%d&style=hostdetail' class='perfValue'>%d</a> / <a href='%s?host=all&serviceprops=%d' class='perfValue'>%d</a></td>\n",STATUS_CGI,HOST_ACTIVE_CHECK,total_active_host_checks,STATUS_CGI,SERVICE_ACTIVE_CHECK,total_active_service_checks);
 	printf("</tr>\n");
 	printf("<tr>\n");
-	printf("<td align=left valign=center class='perfItem'><a href='%s?host=all&serviceprops=%d' class='perfItem'># Passive Host / Service Checks:</a></td>",STATUS_CGI,SERVICE_PASSIVE_CHECK);
+	printf("<td align=left valign=center class='perfItem'><a href='%s?host=all&serviceprops=%d' class='perfItem'>パッシブ[ホスト/サービス]チェック:</a></td>",STATUS_CGI,SERVICE_PASSIVE_CHECK);
 	printf("<td valign=top class='perfValue' nowrap><a href='%s?hostgroup=all&hostprops=%d&style=hostdetail' class='perfValue'>%d</a> / <a href='%s?host=all&serviceprops=%d' class='perfValue'>%d</a></td>\n",STATUS_CGI,HOST_PASSIVE_CHECK,total_passive_host_checks,STATUS_CGI,SERVICE_PASSIVE_CHECK,total_passive_service_checks);
 	printf("</tr>\n");
 	printf("</table>\n");
@@ -1038,14 +1039,23 @@
 
 	printf("<table class='tac' width=125 cellspacing=4 cellpadding=0 border=0>\n");
 
-	printf("<tr><td colspan=1 height=20 class='outageTitle'>&nbsp;Network Outages</td></tr>\n");
+	printf("<tr><td colspan=1 height=20 class='outageTitle'>&nbsp;ネットワーク障害</td></tr>\n");
 
 	printf("<tr>\n");
 	printf("<td class='outageHeader' width=125><a href='%s' class='outageHeader'>",OUTAGES_CGI);
+	if(total_blocking_outages == 0){
+		printf("<td class='outageHeader' width=125><a href='%s' class='outageHeader'>",OUTAGES_CGI);
+	}else{
+		printf("<td class='outageHeader alert' width=125><a href='%s' class='outageHeader'>",OUTAGES_CGI);
+	}
 	if(is_authorized_for_all_hosts(&current_authdata)==FALSE)
 		printf("N/A");
 	else
-		printf("%d Outages",total_blocking_outages);
+		if(total_blocking_outages == 0){
+			printf("現時点では確認されていません。",total_blocking_outages);
+		}else{
+			printf("%d 箇所で障害が発生しています。",total_blocking_outages);
+		}
 	printf("</a></td>\n");
 	printf("</tr>\n");
 
@@ -1061,7 +1071,7 @@
 	printf("<table border=0 width=100%%>\n");
 
 	if(total_blocking_outages>0)
-		printf("<tr><td width=100%% class='outageImportantProblem'><a href='%s'>%d Blocking Outages</a></td></tr>\n",OUTAGES_CGI,total_blocking_outages);
+		printf("<tr><td width=100%% class='outageImportantProblem'><a href='%s'>%d ネットワーク障害</a></td></tr>\n",OUTAGES_CGI,total_blocking_outages);
 
 	/*
 	if(total_nonblocking_outages>0)
@@ -1109,7 +1119,7 @@
 
 	printf("<table border=0 cellspacing=4 cellspadding=0>\n");
 	printf("<tr>\n");
-	printf("<td class='healthTitle'>&nbsp;Network Health</td>\n");
+	printf("<td class='healthTitle'>&nbsp;ネットワーク診断状態</td>\n");
 	printf("</tr>\n");
 
 	printf("<tr>\n");
@@ -1120,12 +1130,12 @@
 	printf("<td class='healthBox'>\n");
 	printf("<table border=0 cellspacing=4 cellspadding=0>\n");
 	printf("<tr>\n");
-	printf("<td align=left valign=center class='healthItem'>Host Health:</td>");
-	printf("<td valign=top width=100 class='healthBar'><img src='%s%s' border=0 width=%d height=20 alt='%2.1f%% Health' title='%2.1f%% Health'></td>\n",url_images_path,host_health_image,(percent_host_health<5.0)?5:(int)percent_host_health,percent_host_health,percent_host_health);
+	printf("<td align=left valign=center class='healthItem'>ホストの診断状態:</td>");
+	printf("<td valign=top width=100 class='healthBar'><img src='%s%s' border=0 width=%d height=20 alt='正常率: %2.1f%%' title='正常率: %2.1f%%'></td>\n",url_images_path,host_health_image,(percent_host_health<5.0)?5:(int)percent_host_health,percent_host_health,percent_host_health);
 	printf("</tr>\n");
 	printf("<tr>\n");
-	printf("<td align=left valign=center class='healthItem'>Service Health:</td>");
-	printf("<td valign=top width=100 class='healthBar'><img src='%s%s' border=0 width=%d height=20 alt='%2.1f%% Health' title='%2.1f%% Health'></td>\n",url_images_path,service_health_image,(percent_service_health<5.0)?5:(int)percent_service_health,percent_service_health,percent_service_health);
+	printf("<td align=left valign=center class='healthItem'>サービスの診断状態:</td>");
+	printf("<td valign=top width=100 class='healthBar'><img src='%s%s' border=0 width=%d height=20 alt='正常率: %2.1f%%' title='正常率: %2.1f%%'></td>\n",url_images_path,service_health_image,(percent_service_health<5.0)?5:(int)percent_service_health,percent_service_health,percent_service_health);
 	printf("</tr>\n");
 	printf("</table>\n");
 	printf("</td>\n");
@@ -1155,13 +1165,13 @@
 
 	printf("<table class='tac' width=516 cellspacing=4 cellpadding=0 border=0>\n");
 
-	printf("<tr><td colspan=4 height=20 class='hostTitle'>&nbsp;Hosts</td></tr>\n");
+	printf("<tr><td colspan=4 height=20 class='hostTitle'>&nbsp;ホストの稼動状態</td></tr>\n");
 
 	printf("<tr>\n");
-	printf("<td class='hostHeader' width=125><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d' class='hostHeader'>%d Down</a></td>\n",STATUS_CGI,HOST_DOWN,hosts_down);
-	printf("<td class='hostHeader' width=125><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d' class='hostHeader'>%d Unreachable</a></td>\n",STATUS_CGI,HOST_UNREACHABLE,hosts_unreachable);
-	printf("<td class='hostHeader' width=125><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d' class='hostHeader'>%d Up</a></td>\n",STATUS_CGI,HOST_UP,hosts_up);
-	printf("<td class='hostHeader' width=125><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d' class='hostHeader'>%d Pending</a></td>\n",STATUS_CGI,HOST_PENDING,hosts_pending);
+	printf("<td class='hostHeader' width=125><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d' class='hostHeader'>停止状態: %d 件</a></td>\n",STATUS_CGI,HOST_DOWN,hosts_down);
+	printf("<td class='hostHeader' width=125><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d' class='hostHeader'>未到達状態: %d 件</a></td>\n",STATUS_CGI,HOST_UNREACHABLE,hosts_unreachable);
+	printf("<td class='hostHeader' width=125><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d' class='hostHeader'>正常状態: %d 件</a></td>\n",STATUS_CGI,HOST_UP,hosts_up);
+	printf("<td class='hostHeader' width=125><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d' class='hostHeader'>保留状態: %d 件</a></td>\n",STATUS_CGI,HOST_PENDING,hosts_pending);
 	printf("</tr>\n");
 
 	printf("<tr>\n");
@@ -1177,16 +1187,16 @@
 	printf("<table border=0 width=100%%>\n");
 
 	if(hosts_down_unacknowledged>0)
-		printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Unhandled Problems</a></td></tr>\n",STATUS_CGI,HOST_DOWN,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_down_unacknowledged);
+		printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>未認知状態: %d 件</a></td></tr>\n",STATUS_CGI,HOST_DOWN,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_down_unacknowledged);
 
 	if(hosts_down_scheduled>0)
-		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,HOST_DOWN,HOST_SCHEDULED_DOWNTIME,hosts_down_scheduled);
+		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>メンテナンス中: %d 件</a></td></tr>\n",STATUS_CGI,HOST_DOWN,HOST_SCHEDULED_DOWNTIME,hosts_down_scheduled);
 
 	if(hosts_down_acknowledged>0)
-		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,HOST_DOWN,HOST_STATE_ACKNOWLEDGED,hosts_down_acknowledged);
+		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>認知済み: %d 件</a></td></tr>\n",STATUS_CGI,HOST_DOWN,HOST_STATE_ACKNOWLEDGED,hosts_down_acknowledged);
 
 	if(hosts_down_disabled>0)
-		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,HOST_DOWN,HOST_CHECKS_DISABLED,hosts_down_disabled);
+		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>無効設定: %d 件</a></td></tr>\n",STATUS_CGI,HOST_DOWN,HOST_CHECKS_DISABLED,hosts_down_disabled);
 
 	printf("</table>\n");
 	printf("</td>\n");
@@ -1208,16 +1218,16 @@
 	printf("<table border=0 width=100%%>\n");
 
 	if(hosts_unreachable_unacknowledged>0)
-		printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?host=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Unhandled Problems</a></td></tr>\n",STATUS_CGI,HOST_UNREACHABLE,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_unreachable_unacknowledged);
+		printf("<tr><td width=100%% class='hostImportantProblem'><a href='%s?host=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>未認知状態: %d 件</a></td></tr>\n",STATUS_CGI,HOST_UNREACHABLE,HOST_NO_SCHEDULED_DOWNTIME|HOST_STATE_UNACKNOWLEDGED|HOST_CHECKS_ENABLED,hosts_unreachable_unacknowledged);
 
 	if(hosts_unreachable_scheduled>0)
-		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,HOST_UNREACHABLE,HOST_SCHEDULED_DOWNTIME,hosts_unreachable_scheduled);
+		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>メンテナンス中: %d 件</a></td></tr>\n",STATUS_CGI,HOST_UNREACHABLE,HOST_SCHEDULED_DOWNTIME,hosts_unreachable_scheduled);
 
 	if(hosts_unreachable_acknowledged>0)
-		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,HOST_UNREACHABLE,HOST_STATE_ACKNOWLEDGED,hosts_unreachable_acknowledged);
+		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>認知済み: %d 件</a></td></tr>\n",STATUS_CGI,HOST_UNREACHABLE,HOST_STATE_ACKNOWLEDGED,hosts_unreachable_acknowledged);
 
 	if(hosts_unreachable_disabled>0)
-		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,HOST_UNREACHABLE,HOST_CHECKS_DISABLED,hosts_unreachable_disabled);
+		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>無効設定: %d 件</a></td></tr>\n",STATUS_CGI,HOST_UNREACHABLE,HOST_CHECKS_DISABLED,hosts_unreachable_disabled);
 
 	printf("</table>\n");
 	printf("</td>\n");
@@ -1239,7 +1249,7 @@
 	printf("<table border=0 width=100%%>\n");
 
 	if(hosts_up_disabled>0)
-		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,HOST_UP,HOST_CHECKS_DISABLED,hosts_up_disabled);
+		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>無効設定: %d 件</a></td></tr>\n",STATUS_CGI,HOST_UP,HOST_CHECKS_DISABLED,hosts_up_disabled);
 
 	printf("</table>\n");
 	printf("</td>\n");
@@ -1261,7 +1271,7 @@
 	printf("<table border=0 width=100%%>\n");
 
 	if(hosts_pending_disabled>0)
-		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,HOST_PENDING,HOST_CHECKS_DISABLED,hosts_pending_disabled);
+		printf("<tr><td width=100%% class='hostUnimportantProblem'><a href='%s?hostgroup=all&style=hostdetail&hoststatustypes=%d&hostprops=%d'>無効設定: %d 件</a></td></tr>\n",STATUS_CGI,HOST_PENDING,HOST_CHECKS_DISABLED,hosts_pending_disabled);
 
 	printf("</table>\n");
 	printf("</td>\n");
@@ -1297,14 +1307,14 @@
 
 	printf("<table class='tac' width=641 cellspacing=4 cellpadding=0 border=0>\n");
 
-	printf("<tr><td colspan=5 height=20 class='serviceTitle'>&nbsp;Services</td></tr>\n");
+	printf("<tr><td colspan=5 height=20 class='serviceTitle'>&nbsp;サービスの稼動状態</td></tr>\n");
 
 	printf("<tr>\n");
-	printf("<td class='serviceHeader' width=125><a href='%s?host=all&style=detail&servicestatustypes=%d' class='serviceHeader'>%d Critical</a></td>\n",STATUS_CGI,SERVICE_CRITICAL,services_critical);
-	printf("<td class='serviceHeader' width=125><a href='%s?host=all&style=detail&servicestatustypes=%d' class='serviceHeader'>%d Warning</a></td>\n",STATUS_CGI,SERVICE_WARNING,services_warning);
-	printf("<td class='serviceHeader' width=125><a href='%s?host=all&style=detail&servicestatustypes=%d' class='serviceHeader'>%d Unknown</a></td>\n",STATUS_CGI,SERVICE_UNKNOWN,services_unknown);
-	printf("<td class='serviceHeader' width=125><a href='%s?host=all&style=detail&servicestatustypes=%d' class='serviceHeader'>%d Ok</a></td>\n",STATUS_CGI,SERVICE_OK,services_ok);
-	printf("<td class='serviceHeader' width=125><a href='%s?host=all&style=detail&servicestatustypes=%d' class='serviceHeader'>%d Pending</a></td>\n",STATUS_CGI,SERVICE_PENDING,services_pending);
+	printf("<td class='serviceHeader' width=125><a href='%s?host=all&style=detail&servicestatustypes=%d' class='serviceHeader'>異常状態: %d 件</a></td>\n",STATUS_CGI,SERVICE_CRITICAL,services_critical);
+	printf("<td class='serviceHeader' width=125><a href='%s?host=all&style=detail&servicestatustypes=%d' class='serviceHeader'>警告状態: %d 件</a></td>\n",STATUS_CGI,SERVICE_WARNING,services_warning);
+	printf("<td class='serviceHeader' width=125><a href='%s?host=all&style=detail&servicestatustypes=%d' class='serviceHeader'>不明状態: %d 件</a></td>\n",STATUS_CGI,SERVICE_UNKNOWN,services_unknown);
+	printf("<td class='serviceHeader' width=125><a href='%s?host=all&style=detail&servicestatustypes=%d' class='serviceHeader'>正常状態: %d 件</a></td>\n",STATUS_CGI,SERVICE_OK,services_ok);
+	printf("<td class='serviceHeader' width=125><a href='%s?host=all&style=detail&servicestatustypes=%d' class='serviceHeader'>保留状態: %d 件</a></td>\n",STATUS_CGI,SERVICE_PENDING,services_pending);
 	printf("</tr>\n");
 
 	printf("<tr>\n");
@@ -1320,19 +1330,19 @@
 	printf("<table border=0 width=100%%>\n");
 
 	if(services_critical_unacknowledged>0)
-		printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>%d Unhandled Problems</a></td></tr>\n",STATUS_CGI,SERVICE_CRITICAL,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_critical_unacknowledged);
+		printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>未認知状態: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_CRITICAL,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_critical_unacknowledged);
 
 	if(services_critical_host_problem>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d'>%d on Problem Hosts</a></td></tr>\n",STATUS_CGI,SERVICE_CRITICAL,HOST_DOWN|HOST_UNREACHABLE,services_critical_host_problem);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d'>問題のホスト上で %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_CRITICAL,HOST_DOWN|HOST_UNREACHABLE,services_critical_host_problem);
 
 	if(services_critical_scheduled>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,SERVICE_CRITICAL,SERVICE_SCHEDULED_DOWNTIME,services_critical_scheduled);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>メンテナンス中: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_CRITICAL,SERVICE_SCHEDULED_DOWNTIME,services_critical_scheduled);
 
 	if(services_critical_acknowledged>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,SERVICE_CRITICAL,SERVICE_STATE_ACKNOWLEDGED,services_critical_acknowledged);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>認知済み: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_CRITICAL,SERVICE_STATE_ACKNOWLEDGED,services_critical_acknowledged);
 
 	if(services_critical_disabled>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,SERVICE_CRITICAL,SERVICE_CHECKS_DISABLED,services_critical_disabled);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>無効設定: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_CRITICAL,SERVICE_CHECKS_DISABLED,services_critical_disabled);
 
 	printf("</table>\n");
 	printf("</td>\n");
@@ -1355,19 +1365,19 @@
 	printf("<table border=0 width=100%%>\n");
 
 	if(services_warning_unacknowledged>0)
-		printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>%d Unhandled Problems</a></td></tr>\n",STATUS_CGI,SERVICE_WARNING,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_warning_unacknowledged);
+		printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>未認知状態: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_WARNING,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_warning_unacknowledged);
 
 	if(services_warning_host_problem>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d'>%d on Problem Hosts</a></td></tr>\n",STATUS_CGI,SERVICE_WARNING,HOST_DOWN|HOST_UNREACHABLE,services_warning_host_problem);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d'>問題のホスト上で %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_WARNING,HOST_DOWN|HOST_UNREACHABLE,services_warning_host_problem);
 
 	if(services_warning_scheduled>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,SERVICE_WARNING,SERVICE_SCHEDULED_DOWNTIME,services_warning_scheduled);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>メンテナンス中: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_WARNING,SERVICE_SCHEDULED_DOWNTIME,services_warning_scheduled);
 
 	if(services_warning_acknowledged>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,SERVICE_WARNING,SERVICE_STATE_ACKNOWLEDGED,services_warning_acknowledged);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>認知済み: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_WARNING,SERVICE_STATE_ACKNOWLEDGED,services_warning_acknowledged);
 
 	if(services_warning_disabled>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,SERVICE_WARNING,SERVICE_CHECKS_DISABLED,services_warning_disabled);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>無効設定: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_WARNING,SERVICE_CHECKS_DISABLED,services_warning_disabled);
 
 	printf("</table>\n");
 	printf("</td>\n");
@@ -1390,19 +1400,19 @@
 	printf("<table border=0 width=100%%>\n");
 
 	if(services_unknown_unacknowledged>0)
-		printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>%d Unhandled Problems</a></td></tr>\n",STATUS_CGI,SERVICE_UNKNOWN,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_unknown_unacknowledged);
+		printf("<tr><td width=100%% class='serviceImportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d&serviceprops=%d'>未認知状態: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_UNKNOWN,HOST_UP|HOST_PENDING,SERVICE_NO_SCHEDULED_DOWNTIME|SERVICE_STATE_UNACKNOWLEDGED|SERVICE_CHECKS_ENABLED,services_unknown_unacknowledged);
 
 	if(services_unknown_host_problem>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d'>%d on Problem Hosts</a></td></tr>\n",STATUS_CGI,SERVICE_UNKNOWN,HOST_DOWN|HOST_UNREACHABLE,services_unknown_host_problem);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&hoststatustypes=%d'>問題のホスト上で %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_UNKNOWN,HOST_DOWN|HOST_UNREACHABLE,services_unknown_host_problem);
 
 	if(services_unknown_scheduled>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>%d Scheduled</a></td></tr>\n",STATUS_CGI,SERVICE_UNKNOWN,SERVICE_SCHEDULED_DOWNTIME,services_unknown_scheduled);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>メンテナンス中: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_UNKNOWN,SERVICE_SCHEDULED_DOWNTIME,services_unknown_scheduled);
 
 	if(services_unknown_acknowledged>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>%d Acknowledged</a></td></tr>\n",STATUS_CGI,SERVICE_UNKNOWN,SERVICE_STATE_ACKNOWLEDGED,services_unknown_acknowledged);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>認知済み: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_UNKNOWN,SERVICE_STATE_ACKNOWLEDGED,services_unknown_acknowledged);
 
 	if(services_unknown_disabled>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,SERVICE_UNKNOWN,SERVICE_CHECKS_DISABLED,services_unknown_disabled);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>無効設定: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_UNKNOWN,SERVICE_CHECKS_DISABLED,services_unknown_disabled);
 
 	printf("</table>\n");
 	printf("</td>\n");
@@ -1424,7 +1434,7 @@
 	printf("<table border=0 width=100%%>\n");
 
 	if(services_ok_disabled>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,SERVICE_OK,SERVICE_CHECKS_DISABLED,services_ok_disabled);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>無効設定: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_OK,SERVICE_CHECKS_DISABLED,services_ok_disabled);
 
 	printf("</table>\n");
 	printf("</td>\n");
@@ -1445,7 +1455,7 @@
 	printf("<table border=0 width=100%%>\n");
 
 	if(services_pending_disabled>0)
-		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>%d Disabled</a></td></tr>\n",STATUS_CGI,SERVICE_PENDING,SERVICE_CHECKS_DISABLED,services_pending_disabled);
+		printf("<tr><td width=100%% class='serviceUnimportantProblem'><a href='%s?host=all&type=detail&servicestatustypes=%d&serviceprops=%d'>無効設定: %d 件</a></td></tr>\n",STATUS_CGI,SERVICE_PENDING,SERVICE_CHECKS_DISABLED,services_pending_disabled);
 
 	printf("</table>\n");
 	printf("</td>\n");
@@ -1476,14 +1486,14 @@
 
 	printf("<table class='tac' cellspacing=4 cellpadding=0 border=0>\n");
 
-	printf("<tr><td colspan=5 height=20 class='featureTitle'>&nbsp;Monitoring Features</td></tr>\n");
+	printf("<tr><td colspan=5 height=20 class='featureTitle'>&nbsp;監視機能の設定状態</td></tr>\n");
 
 	printf("<tr>\n");
-	printf("<td class='featureHeader' width=135>Flap Detection</td>\n");
-	printf("<td class='featureHeader' width=135>Notifications</td>\n");
-	printf("<td class='featureHeader' width=135>Event Handlers</td>\n");
-	printf("<td class='featureHeader' width=135>Active Checks</td>\n");
-	printf("<td class='featureHeader' width=135>Passive Checks</td>\n");
+	printf("<td class='featureHeader' width=135>フラップ検知</td>\n");
+	printf("<td class='featureHeader' width=135>通知</td>\n");
+	printf("<td class='featureHeader' width=135>イベントハンドラ</td>\n");
+	printf("<td class='featureHeader' width=135>アクティブチェック</td>\n");
+	printf("<td class='featureHeader' width=135>パッシブチェック</td>\n");
 	printf("</tr>\n");
 
 	printf("<tr>\n");
@@ -1491,31 +1501,31 @@
 	printf("<td valign=top>\n");
 	printf("<table border=0 width=135 cellspacing=0 cellpadding=0>\n");
 	printf("<tr>\n");
-	printf("<td valign=top><a href='%s?cmd_typ=%d'><img src='%s%s' border=0 alt='Flap Detection %s' title='Flap Detection %s'></a></td>\n",COMMAND_CGI,(enable_flap_detection==TRUE)?CMD_DISABLE_FLAP_DETECTION:CMD_ENABLE_FLAP_DETECTION,url_images_path,(enable_flap_detection==TRUE)?TAC_ENABLED_ICON:TAC_DISABLED_ICON,(enable_flap_detection==TRUE)?"Enabled":"Disabled",(enable_flap_detection==TRUE)?"Enabled":"Disabled");
+	printf("<td valign=top><a href='%s?cmd_typ=%d'><img src='%s%s' border=0 alt='フラップ検知: %s' title='フラップ検知: %s'></a></td>\n",COMMAND_CGI,(enable_flap_detection==TRUE)?CMD_DISABLE_FLAP_DETECTION:CMD_ENABLE_FLAP_DETECTION,url_images_path,(enable_flap_detection==TRUE)?TAC_ENABLED_ICON:TAC_DISABLED_ICON,(enable_flap_detection==TRUE)?"有効":"無効",(enable_flap_detection==TRUE)?"有効":"無効");
 	printf("<Td width=10>&nbsp;</td>\n");
 	if(enable_flap_detection==TRUE){
 		printf("<Td valign=top width=100%% class='featureEnabledFlapDetection'>\n");
 		printf("<table border=0 width=100%%>\n");
 
 		if(flap_disabled_services>0)
-			printf("<tr><td width=100%% class='featureItemDisabledServiceFlapDetection'><a href='%s?host=all&type=detail&serviceprops=%d'>%d Service%s Disabled</a></td></tr>\n",STATUS_CGI,SERVICE_FLAP_DETECTION_DISABLED,flap_disabled_services,(flap_disabled_services==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemDisabledServiceFlapDetection'><a href='%s?host=all&type=detail&serviceprops=%d'>%d サービスが無効</a></td></tr>\n",STATUS_CGI,SERVICE_FLAP_DETECTION_DISABLED,flap_disabled_services);
 		else
-			printf("<tr><td width=100%% class='featureItemEnabledServiceFlapDetection'>All Services Enabled</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemEnabledServiceFlapDetection'>全サービス有効</td></tr>\n");
 
 		if(flapping_services>0)
-			printf("<tr><td width=100%% class='featureItemServicesFlapping'><a href='%s?host=all&type=detail&serviceprops=%d'>%d Service%s Flapping</a></td></tr>\n",STATUS_CGI,SERVICE_IS_FLAPPING,flapping_services,(flapping_services==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemServicesFlapping'><a href='%s?host=all&type=detail&serviceprops=%d'>%d サービスが有効</a></td></tr>\n",STATUS_CGI,SERVICE_IS_FLAPPING,flapping_services);
 		else
-			printf("<tr><td width=100%% class='featureItemServicesNotFlapping'>No Services Flapping</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemServicesNotFlapping'>設定しているサービスはありません</td></tr>\n");
 
 		if(flap_disabled_hosts>0)
-			printf("<tr><td width=100%% class='featureItemDisabledHostFlapDetection'><a href='%s?host=all&type=detail&hostprops=%d'>%d Host%s Disabled</a></td></tr>\n",STATUS_CGI,HOST_FLAP_DETECTION_DISABLED,flap_disabled_hosts,(flap_disabled_hosts==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemDisabledHostFlapDetection'><a href='%s?host=all&type=detail&hostprops=%d'>%d ホストが無効</a></td></tr>\n",STATUS_CGI,HOST_FLAP_DETECTION_DISABLED,flap_disabled_hosts);
 		else
-			printf("<tr><td width=100%% class='featureItemEnabledHostFlapDetection'>All Hosts Enabled</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemEnabledHostFlapDetection'>全ホスト有効</td></tr>\n");
 
 		if(flapping_hosts>0)
-			printf("<tr><td width=100%% class='featureItemHostsFlapping'><a href='%s?host=all&type=detail&hostprops=%d'>%d Host%s Flapping</a></td></tr>\n",STATUS_CGI,HOST_IS_FLAPPING,flapping_hosts,(flapping_hosts==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemHostsFlapping'><a href='%s?host=all&type=detail&hostprops=%d'>%d ホストが有効</a></td></tr>\n",STATUS_CGI,HOST_IS_FLAPPING,flapping_hosts,(flapping_hosts==1)?"":"s");
 		else
-			printf("<tr><td width=100%% class='featureItemHostsNotFlapping'>No Hosts Flapping</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemHostsNotFlapping'>設定しているホストはありません</td></tr>\n");
 
 		printf("</table>\n");
 		printf("</td>\n");
@@ -1532,21 +1542,21 @@
 	printf("<td valign=top>\n");
 	printf("<table border=0 width=135 cellspacing=0 cellpadding=0>\n");
 	printf("<tr>\n");
-	printf("<td valign=top><a href='%s?cmd_typ=%d'><img src='%s%s' border=0 alt='Notifications %s' title='Notifications %s'></a></td>\n",COMMAND_CGI,(enable_notifications==TRUE)?CMD_DISABLE_NOTIFICATIONS:CMD_ENABLE_NOTIFICATIONS,url_images_path,(enable_notifications==TRUE)?TAC_ENABLED_ICON:TAC_DISABLED_ICON,(enable_notifications==TRUE)?"Enabled":"Disabled",(enable_notifications==TRUE)?"Enabled":"Disabled");
+	printf("<td valign=top><a href='%s?cmd_typ=%d'><img src='%s%s' border=0 alt='通知機能: %s' title='通知機能: %s'></a></td>\n",COMMAND_CGI,(enable_notifications==TRUE)?CMD_DISABLE_NOTIFICATIONS:CMD_ENABLE_NOTIFICATIONS,url_images_path,(enable_notifications==TRUE)?TAC_ENABLED_ICON:TAC_DISABLED_ICON,(enable_notifications==TRUE)?"有効":"無効",(enable_notifications==TRUE)?"有効":"無効");
 	printf("<Td width=10>&nbsp;</td>\n");
 	if(enable_notifications==TRUE){
 		printf("<Td valign=top width=100%% class='featureEnabledNotifications'>\n");
 		printf("<table border=0 width=100%%>\n");
 
 		if(notification_disabled_services>0)
-			printf("<tr><td width=100%% class='featureItemDisabledServiceNotifications'><a href='%s?host=all&type=detail&serviceprops=%d'>%d Service%s Disabled</a></td></tr>\n",STATUS_CGI,SERVICE_NOTIFICATIONS_DISABLED,notification_disabled_services,(notification_disabled_services==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemDisabledServiceNotifications'><a href='%s?host=all&type=detail&serviceprops=%d'>%d サービスが無効</a></td></tr>\n",STATUS_CGI,SERVICE_NOTIFICATIONS_DISABLED,notification_disabled_services);
 		else
-			printf("<tr><td width=100%% class='featureItemEnabledServiceNotifications'>All Services Enabled</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemEnabledServiceNotifications'>全サービス有効</td></tr>\n");
 
 		if(notification_disabled_hosts>0)
-			printf("<tr><td width=100%% class='featureItemDisabledHostNotifications'><a href='%s?host=all&type=detail&hostprops=%d'>%d Host%s Disabled</a></td></tr>\n",STATUS_CGI,HOST_NOTIFICATIONS_DISABLED,notification_disabled_hosts,(notification_disabled_hosts==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemDisabledHostNotifications'><a href='%s?host=all&type=detail&hostprops=%d'>%d ホストが無効</a></td></tr>\n",STATUS_CGI,HOST_NOTIFICATIONS_DISABLED,notification_disabled_hosts);
 		else
-			printf("<tr><td width=100%% class='featureItemEnabledHostNotifications'>All Hosts Enabled</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemEnabledHostNotifications'>全ホスト有効</td></tr>\n");
 
 		printf("</table>\n");
 		printf("</td>\n");
@@ -1564,21 +1574,21 @@
 	printf("<td valign=top>\n");
 	printf("<table border=0 width=135 cellspacing=0 cellpadding=0>\n");
 	printf("<tr>\n");
-	printf("<td valign=top><a href='%s?cmd_typ=%d'><img src='%s%s' border=0 alt='Event Handlers %s' title='Event Handlers %s'></a></td>\n",COMMAND_CGI,(enable_event_handlers==TRUE)?CMD_DISABLE_EVENT_HANDLERS:CMD_ENABLE_EVENT_HANDLERS,url_images_path,(enable_event_handlers==TRUE)?TAC_ENABLED_ICON:TAC_DISABLED_ICON,(enable_event_handlers==TRUE)?"Enabled":"Disabled",(enable_event_handlers==TRUE)?"Enabled":"Disabled");
+	printf("<td valign=top><a href='%s?cmd_typ=%d'><img src='%s%s' border=0 alt='イベントハンドラ: %s' title='イベントハンドラ: %s'></a></td>\n",COMMAND_CGI,(enable_event_handlers==TRUE)?CMD_DISABLE_EVENT_HANDLERS:CMD_ENABLE_EVENT_HANDLERS,url_images_path,(enable_event_handlers==TRUE)?TAC_ENABLED_ICON:TAC_DISABLED_ICON,(enable_event_handlers==TRUE)?"有効":"無効",(enable_event_handlers==TRUE)?"有効":"無効");
 	printf("<Td width=10>&nbsp;</td>\n");
 	if(enable_event_handlers==TRUE){
 		printf("<Td valign=top width=100%% class='featureEnabledHandlers'>\n");
 		printf("<table border=0 width=100%%>\n");
 
 		if(event_handler_disabled_services>0)
-			printf("<tr><td width=100%% class='featureItemDisabledServiceHandlers'><a href='%s?host=all&type=detail&serviceprops=%d'>%d Service%s Disabled</a></td></tr>\n",STATUS_CGI,SERVICE_EVENT_HANDLER_DISABLED,event_handler_disabled_services,(event_handler_disabled_services==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemDisabledServiceHandlers'><a href='%s?host=all&type=detail&serviceprops=%d'>%d サービスが無効</a></td></tr>\n",STATUS_CGI,SERVICE_EVENT_HANDLER_DISABLED,event_handler_disabled_services);
 		else
-			printf("<tr><td width=100%% class='featureItemEnabledServiceHandlers'>All Services Enabled</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemEnabledServiceHandlers'>全サービス有効</td></tr>\n");
 
 		if(event_handler_disabled_hosts>0)
-			printf("<tr><td width=100%% class='featureItemDisabledHostHandlers'><a href='%s?host=all&type=detail&hostprops=%d'>%d Host%s Disabled</a></td></tr>\n",STATUS_CGI,HOST_EVENT_HANDLER_DISABLED,event_handler_disabled_hosts,(event_handler_disabled_hosts==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemDisabledHostHandlers'><a href='%s?host=all&type=detail&hostprops=%d'>%d ホストが無効</a></td></tr>\n",STATUS_CGI,HOST_EVENT_HANDLER_DISABLED,event_handler_disabled_hosts);
 		else
-			printf("<tr><td width=100%% class='featureItemEnabledHostHandlers'>All Hosts Enabled</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemEnabledHostHandlers'>全ホスト有効</td></tr>\n");
 
 		printf("</table>\n");
 		printf("</td>\n");
@@ -1596,21 +1606,21 @@
 	printf("<td valign=top>\n");
 	printf("<table border=0 width=135 cellspacing=0 cellpadding=0>\n");
 	printf("<tr>\n");
-	printf("<td valign=top><a href='%s?type=%d'><img src='%s%s' border='0' alt='Active Checks %s' title='Active Checks %s'></a></td>\n",EXTINFO_CGI,DISPLAY_PROCESS_INFO,url_images_path,(execute_service_checks==TRUE)?TAC_ENABLED_ICON:TAC_DISABLED_ICON,(execute_service_checks==TRUE)?"Enabled":"Disabled",(execute_service_checks==TRUE)?"Enabled":"Disabled");
+	printf("<td valign=top><a href='%s?type=%d'><img src='%s%s' border='0' alt='アクティブチェック: %s' title='アクティブチェック: %s'></a></td>\n",EXTINFO_CGI,DISPLAY_PROCESS_INFO,url_images_path,(execute_service_checks==TRUE)?TAC_ENABLED_ICON:TAC_DISABLED_ICON,(execute_service_checks==TRUE)?"有効":"無効",(execute_service_checks==TRUE)?"有効":"無効");
 	printf("<Td width=10>&nbsp;</td>\n");
 	if(execute_service_checks==TRUE){
 		printf("<Td valign=top width=100%% class='featureEnabledActiveChecks'>\n");
 		printf("<table border=0 width=100%%>\n");
 
 		if(active_checks_disabled_services>0)
-			printf("<tr><td width=100%% class='featureItemDisabledActiveServiceChecks'><a href='%s?host=all&type=detail&serviceprops=%d'>%d Service%s Disabled</a></td></tr>\n",STATUS_CGI,SERVICE_CHECKS_DISABLED,active_checks_disabled_services,(active_checks_disabled_services==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemDisabledActiveServiceChecks'><a href='%s?host=all&type=detail&serviceprops=%d'>%d サービスが無効</a></td></tr>\n",STATUS_CGI,SERVICE_CHECKS_DISABLED,active_checks_disabled_services);
 		else
-			printf("<tr><td width=100%% class='featureItemEnabledActiveServiceChecks'>All Services Enabled</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemEnabledActiveServiceChecks'>全サービス有効</td></tr>\n");
 
 		if(active_checks_disabled_hosts>0)
-			printf("<tr><td width=100%% class='featureItemDisabledActiveHostChecks'><a href='%s?host=all&type=detail&hostprops=%d'>%d Host%s Disabled</a></td></tr>\n",STATUS_CGI,HOST_CHECKS_DISABLED,active_checks_disabled_hosts,(active_checks_disabled_hosts==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemDisabledActiveHostChecks'><a href='%s?host=all&type=detail&hostprops=%d'>%d ホストが無効</a></td></tr>\n",STATUS_CGI,HOST_CHECKS_DISABLED,active_checks_disabled_hosts);
 		else
-			printf("<tr><td width=100%% class='featureItemEnabledActiveHostChecks'>All Hosts Enabled</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemEnabledActiveHostChecks'>全ホスト有効</td></tr>\n");
 
 		printf("</table>\n");
 		printf("</td>\n");
@@ -1628,7 +1638,7 @@
 	printf("<td valign=top>\n");
 	printf("<table border=0 width=135 cellspacing=0 cellpadding=0>\n");
 	printf("<tr>\n");
-	printf("<td valign=top><a href='%s?type=%d'><img src='%s%s' border='0' alt='Passive Checks %s' title='Passive Checks %s'></a></td>\n",EXTINFO_CGI,DISPLAY_PROCESS_INFO,url_images_path,(accept_passive_service_checks==TRUE)?TAC_ENABLED_ICON:TAC_DISABLED_ICON,(accept_passive_service_checks==TRUE)?"Enabled":"Disabled",(accept_passive_service_checks==TRUE)?"Enabled":"Disabled");
+	printf("<td valign=top><a href='%s?type=%d'><img src='%s%s' border='0' alt='パッシブチェック: %s' title='パッシブチェック: %s'></a></td>\n",EXTINFO_CGI,DISPLAY_PROCESS_INFO,url_images_path,(accept_passive_service_checks==TRUE)?TAC_ENABLED_ICON:TAC_DISABLED_ICON,(accept_passive_service_checks==TRUE)?"有効":"無効",(accept_passive_service_checks==TRUE)?"有効":"無効");
 	printf("<Td width=10>&nbsp;</td>\n");
 	if(accept_passive_service_checks==TRUE){
 
@@ -1636,14 +1646,14 @@
 		printf("<table border=0 width=100%%>\n");
 
 		if(passive_checks_disabled_services>0)
-			printf("<tr><td width=100%% class='featureItemDisabledPassiveServiceChecks'><a href='%s?host=all&type=detail&serviceprops=%d'>%d Service%s Disabled</a></td></tr>\n",STATUS_CGI,SERVICE_PASSIVE_CHECKS_DISABLED,passive_checks_disabled_services,(passive_checks_disabled_services==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemDisabledPassiveServiceChecks'><a href='%s?host=all&type=detail&serviceprops=%d'>%d サービスが無効</a></td></tr>\n",STATUS_CGI,SERVICE_PASSIVE_CHECKS_DISABLED,passive_checks_disabled_services);
 		else
-			printf("<tr><td width=100%% class='featureItemEnabledPassiveServiceChecks'>All Services Enabled</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemEnabledPassiveServiceChecks'>全サービス有効</td></tr>\n");
 
 		if(passive_checks_disabled_hosts>0)
-			printf("<tr><td width=100%% class='featureItemDisabledPassiveHostChecks'><a href='%s?host=all&type=detail&hostprops=%d'>%d Host%s Disabled</a></td></tr>\n",STATUS_CGI,HOST_PASSIVE_CHECKS_DISABLED,passive_checks_disabled_hosts,(passive_checks_disabled_hosts==1)?"":"s");
+			printf("<tr><td width=100%% class='featureItemDisabledPassiveHostChecks'><a href='%s?host=all&type=detail&hostprops=%d'>%d ホストが無効</a></td></tr>\n",STATUS_CGI,HOST_PASSIVE_CHECKS_DISABLED,passive_checks_disabled_hosts);
 		else
-			printf("<tr><td width=100%% class='featureItemEnabledPassiveHostChecks'>All Hosts Enabled</td></tr>\n");
+			printf("<tr><td width=100%% class='featureItemEnabledPassiveHostChecks'>全ホスト有効</td></tr>\n");
 
 		printf("</table>\n");
 		printf("</td>\n");
diff -urN nagios-3.2.3.orig/cgi/trends.c nagios-3.2.3/cgi/trends.c
--- nagios-3.2.3.orig/cgi/trends.c	2010-12-12 00:47:55.000000000 +0900
+++ nagios-3.2.3/cgi/trends.c	2010-12-12 19:59:07.000000000 +0900
@@ -31,7 +31,7 @@
 #include "../include/getcgi.h"
 #include "../include/cgiauth.h"
 
-#include <gd.h>			/* Boutell's GD library function */
+#include <gd.h>		/* 	Boutell's GD library function */
 #include <gdfonts.h>		/* GD library small font definition */
 
 
@@ -40,6 +40,7 @@
 
 extern char main_config_file[MAX_FILENAME_LENGTH];
 extern char url_html_path[MAX_FILENAME_LENGTH];
+extern char ttf_file[MAX_FILENAME_LENGTH];
 extern char url_images_path[MAX_FILENAME_LENGTH];
 extern char url_stylesheets_path[MAX_FILENAME_LENGTH];
 extern char physical_images_path[MAX_FILENAME_LENGTH];
@@ -52,6 +53,7 @@
 #include "../include/skiplist.h"
 extern skiplist *object_skiplists[NUM_OBJECT_SKIPLISTS];
 
+
 /* archived state types */
 #define AS_CURRENT_STATE        -1   /* special case for initial assumed state */
 #define AS_NO_DATA		0
@@ -215,6 +217,8 @@
 #define SMALL_SVC_DRAWING_X_OFFSET  0
 #define SMALL_SVC_DRAWING_Y_OFFSET  0
 
+#define SMALL_FONT_SIZE  10
+
 int drawing_width=0;
 int drawing_height=0;
 
@@ -255,6 +259,8 @@
 	int string_height;
 	char start_timestring[MAX_INPUT_BUFFER];
 	char end_timestring[MAX_INPUT_BUFFER];
+	char start_timestring_long[MAX_INPUT_BUFFER];
+	char end_timestring_long[MAX_INPUT_BUFFER];
 	host *temp_host;
 	service *temp_service;
 	int is_authorized=TRUE;
@@ -264,7 +270,7 @@
 	time_t t3;
 	time_t current_time;
 	struct tm *t;
-
+	int brect[8];
 
 	/* reset internal CGI variables */
 	reset_cgi_vars();
@@ -372,11 +378,11 @@
 		printf("<td align=left valign=top width=33%%>\n");
 
 		if(display_type==DISPLAY_HOST_TRENDS)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Host State Trends");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホスト状態の傾向");
 		else if(display_type==DISPLAY_SERVICE_TRENDS)
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Service State Trends");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"サービス状態の傾向");
 		else
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"Host and Service State Trends");
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホスト・サービス状態の傾向");
 		temp_buffer[sizeof(temp_buffer)-1]='\x0';
 		display_info_table(temp_buffer,FALSE,&current_authdata);
 
@@ -386,24 +392,24 @@
 			printf("<TR><TD CLASS='linkBox'>\n");
 
 			if(display_type==DISPLAY_HOST_TRENDS){
-				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&includesoftstates=%s&assumestateretention=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedhoststate=%d&backtrack=%d&show_log_entries'>View Availability Report For This Host</a><BR>\n",AVAIL_CGI,url_encode(host_name),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_host_state,backtrack_archives);
+				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&includesoftstates=%s&assumestateretention=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedhoststate=%d&backtrack=%d&show_log_entries'>このホストの稼働レポートを見る</a><BR>\n",AVAIL_CGI,url_encode(host_name),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_host_state,backtrack_archives);
 #ifdef USE_HISTROGRAM
-				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&assumestateretention=%s'>View Alert Histogram For This Host</a><BR>\n",HISTOGRAM_CGI,url_encode(host_name),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
+				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&assumestateretention=%s'>このホストの警報ヒストグラムを見る</a><BR>\n",HISTOGRAM_CGI,url_encode(host_name),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
 #endif
-				printf("<a href='%s?host=%s'>View Status Detail For This Host</a><BR>\n",STATUS_CGI,url_encode(host_name));
-				printf("<a href='%s?host=%s'>View Alert History For This Host</a><BR>\n",HISTORY_CGI,url_encode(host_name));
-				printf("<a href='%s?host=%s'>View Notifications For This Host</a><BR>\n",NOTIFICATIONS_CGI,url_encode(host_name));
+				printf("<a href='%s?host=%s'>このホストの稼動状態を見る</a><BR>\n",STATUS_CGI,url_encode(host_name));
+				printf("<a href='%s?host=%s'>このホストの警報履歴を見る</a><BR>\n",HISTORY_CGI,url_encode(host_name));
+				printf("<a href='%s?host=%s'>このホストの通知履歴を見る</a><BR>\n",NOTIFICATIONS_CGI,url_encode(host_name));
 		                }
 			else{
-				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&includesoftstates=%s&assumestateretention=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedservicestate=%d&backtrack=%d'>View Trends For This Host</a><BR>\n",TRENDS_CGI,url_encode(host_name),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_service_state,backtrack_archives);
+				printf("<a href='%s?host=%s&t1=%lu&t2=%lu&includesoftstates=%s&assumestateretention=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedservicestate=%d&backtrack=%d'>このホストの傾向を見る</a><BR>\n",TRENDS_CGI,url_encode(host_name),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_service_state,backtrack_archives);
 				printf("<a href='%s?host=%s",AVAIL_CGI,url_encode(host_name));
-				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s&includesoftstates=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedservicestate=%d&backtrack=%d&show_log_entries'>View Availability Report For This Service</a><BR>\n",url_encode(svc_description),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_service_state,backtrack_archives);
+				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s&includesoftstates=%s&assumeinitialstates=%s&assumestatesduringnotrunning=%s&initialassumedservicestate=%d&backtrack=%d&show_log_entries'>このサービスの稼働レポートを見る</a><BR>\n",url_encode(svc_description),t1,t2,(include_soft_states==TRUE)?"yes":"no",(assume_state_retention==TRUE)?"yes":"no",(assume_initial_states==TRUE)?"yes":"no",(assume_states_during_notrunning==TRUE)?"yes":"no",initial_assumed_service_state,backtrack_archives);
 				printf("<a href='%s?host=%s",HISTOGRAM_CGI,url_encode(host_name));
-				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s'>View Alert Histogram For This Service</a><BR>\n",url_encode(svc_description),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
+				printf("&service=%s&t1=%lu&t2=%lu&assumestateretention=%s'>このサービスの警報ヒストグラムを見る</a><BR>\n",url_encode(svc_description),t1,t2,(assume_state_retention==TRUE)?"yes":"no");
 				printf("<A HREF='%s?host=%s&",HISTORY_CGI,url_encode(host_name));
-				printf("service=%s'>View Alert History For This Service</A><BR>\n",url_encode(svc_description));
+				printf("service=%s'>このサービスの警報履歴を見る</A><BR>\n",url_encode(svc_description));
 				printf("<A HREF='%s?host=%s&",NOTIFICATIONS_CGI,url_encode(host_name));
-				printf("service=%s'>View Notifications For This Service</A><BR>\n",url_encode(svc_description));
+				printf("service=%s'>このサービスの通知履歴を見る</A><BR>\n",url_encode(svc_description));
 		                }
 
 			printf("</TD></TR>\n");
@@ -419,23 +425,23 @@
 
 			printf("<DIV ALIGN=CENTER CLASS='dataTitle'>\n");
 			if(display_type==DISPLAY_HOST_TRENDS)
-				printf("Host '%s'",host_name);
+				printf("ホスト '%s'",host_name);
 			else if(display_type==DISPLAY_SERVICE_TRENDS)
-				printf("Service '%s' On Host '%s'",svc_description,host_name);
+				printf("ホスト '%s' 上の '%s' サービス",host_name,svc_description);
 			printf("</DIV>\n");
 
 			printf("<BR>\n");
 
-			printf("<IMG SRC='%s%s' BORDER=0 ALT='%s State Trends' TITLE='%s State Trends'>\n",url_images_path,TRENDS_ICON,(display_type==DISPLAY_HOST_TRENDS)?"Host":"Service",(display_type==DISPLAY_HOST_TRENDS)?"Host":"Service");
+			printf("<IMG SRC='%s%s' BORDER=0 ALT='%sステータス傾向' TITLE='%sステータス傾向'>\n",url_images_path,TRENDS_ICON,(display_type==DISPLAY_HOST_TRENDS)?"ホスト":"サービス",(display_type==DISPLAY_HOST_TRENDS)?"ホスト":"サービス");
 
 			printf("<BR CLEAR=ALL>\n");
 
 			get_time_string(&t1,start_timestring,sizeof(start_timestring)-1,SHORT_DATE_TIME);
 			get_time_string(&t2,end_timestring,sizeof(end_timestring)-1,SHORT_DATE_TIME);
-			printf("<div align=center class='reportRange'>%s to %s</div>\n",start_timestring,end_timestring);
+			printf("<div align=center class='reportRange'>%s から %s</div>\n",start_timestring,end_timestring);
 
 			get_time_breakdown((time_t)(t2-t1),&days,&hours,&minutes,&seconds);
-			printf("<div align=center class='reportDuration'>Duration: %dd %dh %dm %ds</div>\n",days,hours,minutes,seconds);
+			printf("<div align=center class='reportDuration'>期間:%d日間と %d時 %d分 %d秒</div>\n",days,hours,minutes,seconds);
 		        }
 
 		printf("</td>\n");
@@ -463,47 +469,47 @@
 			printf("<input type='hidden' name='assumestatesduringnotrunning' value='%s'>\n",(assume_states_during_notrunning==TRUE)?"yes":"no");
 			printf("<input type='hidden' name='includesoftstates' value='%s'>\n",(include_soft_states==TRUE)?"yes":"no");
 
-			printf("<tr><td CLASS='optBoxItem' valign=top align=left>First assumed %s state:</td><td CLASS='optBoxItem' valign=top align=left>Backtracked archives:</td></tr>\n",(display_type==DISPLAY_HOST_TRENDS)?"host":"service");
+			printf("<tr><td CLASS='optBoxItem' valign=top align=left>考慮する%sの初期状態:</td><td CLASS='optBoxItem' valign=top align=left>過去のアーカイブ数:</td></tr>\n",(display_type==DISPLAY_HOST_TRENDS)?"ホスト":"サービス");
 			printf("<tr><td CLASS='optBoxItem' valign=top align=left>");
 			if(display_type==DISPLAY_HOST_TRENDS){
 				printf("<input type='hidden' name='initialassumedservicestate' value='%d'>",initial_assumed_service_state);
 				printf("<select name='initialassumedhoststate'>\n");
-				printf("<option value=%d %s>Unspecified\n",AS_NO_DATA,(initial_assumed_host_state==AS_NO_DATA)?"SELECTED":"");
-				printf("<option value=%d %s>Current State\n",AS_CURRENT_STATE,(initial_assumed_host_state==AS_CURRENT_STATE)?"SELECTED":"");
-				printf("<option value=%d %s>Host Up\n",AS_HOST_UP,(initial_assumed_host_state==AS_HOST_UP)?"SELECTED":"");
-				printf("<option value=%d %s>Host Down\n",AS_HOST_DOWN,(initial_assumed_host_state==AS_HOST_DOWN)?"SELECTED":"");
-				printf("<option value=%d %s>Host Unreachable\n",AS_HOST_UNREACHABLE,(initial_assumed_host_state==AS_HOST_UNREACHABLE)?"SELECTED":"");
+				printf("<option value=%d %s>指定しない\n",AS_NO_DATA,(initial_assumed_host_state==AS_NO_DATA)?"SELECTED":"");
+				printf("<option value=%d %s>現在の状態\n",AS_CURRENT_STATE,(initial_assumed_host_state==AS_CURRENT_STATE)?"SELECTED":"");
+				printf("<option value=%d %s>ホスト稼働(UP)\n",AS_HOST_UP,(initial_assumed_host_state==AS_HOST_UP)?"SELECTED":"");
+				printf("<option value=%d %s>ホスト停止(DOWN)\n",AS_HOST_DOWN,(initial_assumed_host_state==AS_HOST_DOWN)?"SELECTED":"");
+				printf("<option value=%d %s>ホスト未到達(UNREACHABLE)\n",AS_HOST_UNREACHABLE,(initial_assumed_host_state==AS_HOST_UNREACHABLE)?"SELECTED":"");
 			        }
 			else{
 				printf("<input type='hidden' name='initialassumedhoststate' value='%d'>",initial_assumed_host_state);
 				printf("<select name='initialassumedservicestate'>\n");
-				printf("<option value=%d %s>Unspecified\n",AS_NO_DATA,(initial_assumed_service_state==AS_NO_DATA)?"SELECTED":"");
-				printf("<option value=%d %s>Current State\n",AS_CURRENT_STATE,(initial_assumed_service_state==AS_CURRENT_STATE)?"SELECTED":"");
-				printf("<option value=%d %s>Service Ok\n",AS_SVC_OK,(initial_assumed_service_state==AS_SVC_OK)?"SELECTED":"");
-				printf("<option value=%d %s>Service Warning\n",AS_SVC_WARNING,(initial_assumed_service_state==AS_SVC_WARNING)?"SELECTED":"");
-				printf("<option value=%d %s>Service Unknown\n",AS_SVC_UNKNOWN,(initial_assumed_service_state==AS_SVC_UNKNOWN)?"SELECTED":"");
-				printf("<option value=%d %s>Service Critical\n",AS_SVC_CRITICAL,(initial_assumed_service_state==AS_SVC_CRITICAL)?"SELECTED":"");
+				printf("<option value=%d %s>指定しない\n",AS_NO_DATA,(initial_assumed_service_state==AS_NO_DATA)?"SELECTED":"");
+				printf("<option value=%d %s>現在の状態\n",AS_CURRENT_STATE,(initial_assumed_service_state==AS_CURRENT_STATE)?"SELECTED":"");
+				printf("<option value=%d %s>サービス正常(OK)\n",AS_SVC_OK,(initial_assumed_service_state==AS_SVC_OK)?"SELECTED":"");
+				printf("<option value=%d %s>サービス警告(WARNING)\n",AS_SVC_WARNING,(initial_assumed_service_state==AS_SVC_WARNING)?"SELECTED":"");
+				printf("<option value=%d %s>サービス不明(UNKNOWN)\n",AS_SVC_UNKNOWN,(initial_assumed_service_state==AS_SVC_UNKNOWN)?"SELECTED":"");
+				printf("<option value=%d %s>サービス異常(CRITICAL)\n",AS_SVC_CRITICAL,(initial_assumed_service_state==AS_SVC_CRITICAL)?"SELECTED":"");
 			        }
 			printf("</select>\n");
 			printf("</td><td CLASS='optBoxItem' valign=top align=left>\n");
 			printf("<input type='text' name='backtrack' size='2' maxlength='2' value='%d'>\n",backtrack_archives);
 			printf("</td></tr>\n");
 
-			printf("<tr><td CLASS='optBoxItem' valign=top align=left>Report period:</td><td CLASS='optBoxItem' valign=top align=left>Zoom factor:</td></tr>\n");
+			printf("<tr><td CLASS='optBoxItem' valign=top align=left>レポート期間:</td><td CLASS='optBoxItem' valign=top align=left>拡大縮小:</td></tr>\n");
 			printf("<tr><td CLASS='optBoxItem' valign=top align=left>\n");
 			printf("<select name='timeperiod'>\n");
-			printf("<option>[ Current time range ]\n");
-			printf("<option value=today %s>Today\n",(timeperiod_type==TIMEPERIOD_TODAY)?"SELECTED":"");
-			printf("<option value=last24hours %s>Last 24 Hours\n",(timeperiod_type==TIMEPERIOD_LAST24HOURS)?"SELECTED":"");
-			printf("<option value=yesterday %s>Yesterday\n",(timeperiod_type==TIMEPERIOD_YESTERDAY)?"SELECTED":"");
-			printf("<option value=thisweek %s>This Week\n",(timeperiod_type==TIMEPERIOD_THISWEEK)?"SELECTED":"");
-			printf("<option value=last7days %s>Last 7 Days\n",(timeperiod_type==TIMEPERIOD_LAST7DAYS)?"SELECTED":"");
-			printf("<option value=lastweek %s>Last Week\n",(timeperiod_type==TIMEPERIOD_LASTWEEK)?"SELECTED":"");
-			printf("<option value=thismonth %s>This Month\n",(timeperiod_type==TIMEPERIOD_THISMONTH)?"SELECTED":"");
-			printf("<option value=last31days %s>Last 31 Days\n",(timeperiod_type==TIMEPERIOD_LAST31DAYS)?"SELECTED":"");
-			printf("<option value=lastmonth %s>Last Month\n",(timeperiod_type==TIMEPERIOD_LASTMONTH)?"SELECTED":"");
-			printf("<option value=thisyear %s>This Year\n",(timeperiod_type==TIMEPERIOD_THISYEAR)?"SELECTED":"");
-			printf("<option value=lastyear %s>Last Year\n",(timeperiod_type==TIMEPERIOD_LASTYEAR)?"SELECTED":"");
+			printf("<option>[ 現在の期間 ]\n");
+			printf("<option value=today %s>今日\n",(timeperiod_type==TIMEPERIOD_TODAY)?"SELECTED":"");
+			printf("<option value=last24hours %s>過去24時間\n",(timeperiod_type==TIMEPERIOD_LAST24HOURS)?"SELECTED":"");
+			printf("<option value=yesterday %s>昨日\n",(timeperiod_type==TIMEPERIOD_YESTERDAY)?"SELECTED":"");
+			printf("<option value=thisweek %s>今週\n",(timeperiod_type==TIMEPERIOD_THISWEEK)?"SELECTED":"");
+			printf("<option value=last7days %s>過去7日間\n",(timeperiod_type==TIMEPERIOD_LAST7DAYS)?"SELECTED":"");
+			printf("<option value=lastweek %s>先週\n",(timeperiod_type==TIMEPERIOD_LASTWEEK)?"SELECTED":"");
+			printf("<option value=thismonth %s>今月\n",(timeperiod_type==TIMEPERIOD_THISMONTH)?"SELECTED":"");
+			printf("<option value=last31days %s>過去31日間\n",(timeperiod_type==TIMEPERIOD_LAST31DAYS)?"SELECTED":"");
+			printf("<option value=lastmonth %s>先月\n",(timeperiod_type==TIMEPERIOD_LASTMONTH)?"SELECTED":"");
+			printf("<option value=thisyear %s>今年\n",(timeperiod_type==TIMEPERIOD_THISYEAR)?"SELECTED":"");
+			printf("<option value=lastyear %s>去年\n",(timeperiod_type==TIMEPERIOD_LASTYEAR)?"SELECTED":"");
 			printf("</select>\n");
 			printf("</td><td CLASS='optBoxItem' valign=top align=left>\n");
 			printf("<select name='zoom'>\n");
@@ -519,7 +525,7 @@
 
 			printf("<tr><td CLASS='optBoxItem' valign=top align=left>\n");
 			printf("</td><td CLASS='optBoxItem' valign=top align=left>\n");
-			printf("<input type='submit' value='Update'>\n");
+			printf("<input type='submit' value='更新'>\n");
 			printf("</td></tr>\n");
 
 			printf("</form>\n");
@@ -573,7 +579,7 @@
 	if(is_authorized==FALSE){
 
 		if(mode==CREATE_HTML)
-			printf("<P><DIV ALIGN=CENTER CLASS='errorMessage'>It appears as though you are not authorized to view information for the specified %s...</DIV></P>\n",(display_type==DISPLAY_HOST_TRENDS)?"host":"service");
+			printf("<P><DIV ALIGN=CENTER CLASS='errorMessage'>この%sを見る権限が無いようです...</DIV></P>\n",(display_type==DISPLAY_HOST_TRENDS)?"ホスト":"サービス");
 
 		document_footer();
 		free_memory();
@@ -635,7 +641,7 @@
 			trends_image=gdImageCreate(image_width,image_height);
 			if(trends_image==NULL){
 #ifdef DEBUG
-				printf("Error: Could not allocate memory for image\n");
+				printf("エラー: 画像を表示するためのメモリの割り当てが出来ませんでした。\n");
 #endif
 				return ERROR;
 	                        }
@@ -660,7 +666,7 @@
 				trends_image=gdImageCreate(image_width,image_height);
 			if(trends_image==NULL){
 #ifdef DEBUG
-				printf("Error: Could not allocate memory for image\n");
+				printf("エラー: 画像を表示するためのメモリの割り当てが出来ませんでした。\n");
 #endif
 				return ERROR;
 	                        }
@@ -685,27 +691,53 @@
 		if(small_image==FALSE){
 
 			/* title */
-			snprintf(start_time,sizeof(start_time)-1,"%s",ctime(&t1));
-			start_time[sizeof(start_time)-1]='\x0';
-			start_time[strlen(start_time)-1]='\x0';
-			snprintf(end_time,sizeof(end_time)-1,"%s",ctime(&t2));
-			end_time[sizeof(end_time)-1]='\x0';
-			end_time[strlen(end_time)-1]='\x0';
+			get_time_string(&t1, start_timestring_long, sizeof(start_timestring)-1, LONG_DATE_TIME);
+			get_time_string(&t2, end_timestring_long, sizeof(end_timestring)-1, LONG_DATE_TIME);
+			get_time_string(&t1, start_time, sizeof(start_time)-1, SHORT_DATE_TIME);
+			get_time_string(&t2, end_time, sizeof(end_time)-1, SHORT_DATE_TIME);
+
+//			snprintf(start_time,sizeof(start_time)-1,"%s",ctime(&t1));
+//			start_time[sizeof(start_time)-1]='\x0';
+//			start_time[strlen(start_time)-1]='\x0';
+//			snprintf(end_time,sizeof(end_time)-1,"%s",ctime(&t2));
+//			end_time[sizeof(end_time)-1]='\x0';
+//			end_time[strlen(end_time)-1]='\x0';
+
 			
 			string_height=gdFontSmall->h;
 
-			if(display_type==DISPLAY_HOST_TRENDS)
-				snprintf(temp_buffer,sizeof(temp_buffer)-1,"State History For Host '%s'",host_name);
-			else
-				snprintf(temp_buffer,sizeof(temp_buffer)-1,"State History For Service '%s' On Host '%s'",svc_description,host_name);
-			temp_buffer[sizeof(temp_buffer)-1]='\x0';
-			string_width=gdFontSmall->w*strlen(temp_buffer);
-			gdImageString(trends_image,gdFontSmall,(drawing_width/2)-(string_width/2)+drawing_x_offset,string_height,(unsigned char *)temp_buffer,color_black);
+			/*** TrueTypeFont ***/
+			if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+				if(display_type==DISPLAY_HOST_TRENDS)
+					snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホスト '%s' のステータス履歴",host_name);
+				else
+					snprintf(temp_buffer,sizeof(temp_buffer)-1,"ホスト '%s' 上の '%s' サービスのステータス履歴",host_name,svc_description);
 
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s to %s",start_time,end_time);
-			temp_buffer[sizeof(temp_buffer)-1]='\x0';
-			string_width=gdFontSmall->w*strlen(temp_buffer);
-			gdImageString(trends_image,gdFontSmall,(drawing_width/2)-(string_width/2)+drawing_x_offset,(string_height*2)+5,(unsigned char *)temp_buffer,color_black);
+				temp_buffer[sizeof(temp_buffer)-1]='\x0';
+				string_width=gdFontSmall->w*strlen(temp_buffer);
+				gdImageStringTTF(trends_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, (drawing_width/2)-(string_width/2)+drawing_x_offset, string_height, (unsigned char *)temp_buffer);
+
+
+				snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s から %s",start_timestring_long,end_timestring_long);
+				temp_buffer[sizeof(temp_buffer)-1]='\x0';
+				string_width=gdFontSmall->w*strlen(temp_buffer);
+				gdImageStringTTF(trends_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, (drawing_width/2)-(string_width/2)+drawing_x_offset, (string_height*2)+5, (unsigned char *)temp_buffer);
+			}else{
+				if(display_type==DISPLAY_HOST_TRENDS)
+					snprintf(temp_buffer,sizeof(temp_buffer)-1,"State History For Host '%s'",host_name);
+				else
+					snprintf(temp_buffer,sizeof(temp_buffer)-1,"State History For Service '%s' On Host '%s'",svc_description,host_name);
+
+				temp_buffer[sizeof(temp_buffer)-1]='\x0';
+				string_width=gdFontSmall->w*strlen(temp_buffer);
+				gdImageString(trends_image,gdFontSmall,(drawing_width/2)-(string_width/2)+drawing_x_offset,string_height,(unsigned char *)temp_buffer,color_black);
+
+
+				snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s to %s",start_time,end_time);
+				temp_buffer[sizeof(temp_buffer)-1]='\x0';
+				string_width=gdFontSmall->w*strlen(temp_buffer);
+				gdImageString(trends_image,gdFontSmall,(drawing_width/2)-(string_width/2)+drawing_x_offset,(string_height*2)+5,(unsigned char *)temp_buffer,color_black);
+			}
 
 
 			/* first time stamp */
@@ -773,7 +805,7 @@
 #ifdef DEBUG
 			image_file=fopen("trends.png","w");
 			if(image_file==NULL)
-				printf("Could not open trends.png for writing!\n");
+				printf("'trends.png'を作成することが出来ませんでした。\n");
 			else{
 				gdImagePng(trends_image,image_file);
 				fclose(image_file);
@@ -793,7 +825,7 @@
 		if(input_type==GET_INPUT_HOST_TARGET){
 
 			printf("<P><DIV ALIGN=CENTER>\n");
-			printf("<DIV CLASS='reportSelectTitle'>Step 2: Select Host</DIV>\n");
+			printf("<DIV CLASS='reportSelectTitle'>ステップ２: ホストの選択</DIV>\n");
 			printf("</DIV></P>\n");
 
 			printf("<P><DIV ALIGN=CENTER>\n");
@@ -802,7 +834,7 @@
 			printf("<form method=\"GET\" action=\"%s\">\n",TRENDS_CGI);
 			printf("<input type='hidden' name='input' value='getoptions'>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' valign=center>Host:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' valign=center>ホスト:</td>\n");
 			printf("<td class='reportSelectItem' valign=center>\n");
 			printf("<select name='host'>\n");
 
@@ -815,7 +847,7 @@
 			printf("</td></tr>\n");
 
 			printf("<tr><td></td><td class='reportSelectItem'>\n");
-			printf("<input type='submit' value='Continue to Step 3'>\n");
+			printf("<input type='submit' value='ステップ３へ'>\n");
 			printf("</td></tr>\n");
 
 			printf("</form>\n");
@@ -849,7 +881,7 @@
 
 
 			printf("<P><DIV ALIGN=CENTER>\n");
-			printf("<DIV CLASS='reportSelectTitle'>Step 2: Select Service</DIV>\n");
+			printf("<DIV CLASS='reportSelectTitle'>ステップ２: サービスの選択</DIV>\n");
 			printf("</DIV></P>\n");
 
 			printf("<P><DIV ALIGN=CENTER>\n");
@@ -859,7 +891,7 @@
 			printf("<input type='hidden' name='input' value='getoptions'>\n");
 			printf("<input type='hidden' name='host' value='%s'>\n",(first_service==NULL)?"unknown":(char *)escape_string(first_service));
 
-			printf("<tr><td class='reportSelectSubTitle'>Service:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle'>サービス:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='service' onFocus='document.serviceform.host.value=gethostname(this.selectedIndex);' onChange='document.serviceform.host.value=gethostname(this.selectedIndex);'>\n");
 
@@ -872,7 +904,7 @@
 			printf("</td></tr>\n");
 
 			printf("<tr><td></td><td class='reportSelectItem'>\n");
-			printf("<input type='submit' value='Continue to Step 3'>\n");
+			printf("<input type='submit' value='ステップ３へ'>\n");
 			printf("</td></tr>\n");
 
 			printf("</form>\n");
@@ -893,7 +925,7 @@
 			end_year=t->tm_year+1900;
 
 			printf("<P><DIV ALIGN=CENTER>\n");
-			printf("<DIV CLASS='reportSelectTitle'>Step 3: Select Report Options</DIV>\n");
+			printf("<DIV CLASS='reportSelectTitle'>ステップ３: レポートオプションの選択</DIV>\n");
 			printf("</DIV></P>\n");
 
 			printf("<P><DIV ALIGN=CENTER>\n");
@@ -904,45 +936,48 @@
 			if(display_type==DISPLAY_SERVICE_TRENDS)
 				printf("<input type='hidden' name='service' value='%s'>\n",escape_string(svc_description));
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Report period:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>レポート期間:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='timeperiod'>\n");
-			printf("<option value=today>Today\n");
-			printf("<option value=last24hours>Last 24 Hours\n");
-			printf("<option value=yesterday>Yesterday\n");
-			printf("<option value=thisweek>This Week\n");
-			printf("<option value=last7days SELECTED>Last 7 Days\n");
-			printf("<option value=lastweek>Last Week\n");
-			printf("<option value=thismonth>This Month\n");
-			printf("<option value=last31days>Last 31 Days\n");
-			printf("<option value=lastmonth>Last Month\n");
-			printf("<option value=thisyear>This Year\n");
-			printf("<option value=lastyear>Last Year\n");
-			printf("<option value=custom>* CUSTOM REPORT PERIOD *\n");
+			printf("<option value=today>今日\n");
+			printf("<option value=last24hours>過去24時間\n");
+			printf("<option value=yesterday>昨日\n");
+			printf("<option value=thisweek>今週\n");
+			printf("<option value=last7days SELECTED>過去7日間\n");
+			printf("<option value=lastweek>先週\n");
+			printf("<option value=thismonth>今月\n");
+			printf("<option value=last31days>過去31日間\n");
+			printf("<option value=lastmonth>先月\n");
+			printf("<option value=thisyear>今年\n");
+			printf("<option value=lastyear>去年\n");
+			printf("<option value=custom>* カスタム期間設定 *\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td valign=top class='reportSelectSubTitle'>If Custom Report Period...</td></tr>\n");
+			printf("<tr><td valign=top class='reportSelectSubTitle'>期間をカスタマイズ...</td></tr>\n");
 
 			printf("<tr>");
-			printf("<td valign=top class='reportSelectSubTitle'>Start Date (Inclusive):</td>\n");
+			printf("<td valign=top class='reportSelectSubTitle'>開始日(指定日を含む):</td>\n");
 			printf("<td align=left valign=top class='reportSelectItem'>");
+			printf("<input type='text' size='4' maxlength='4' name='syear' value='%d'>",start_year);
+			printf("年");
 			printf("<select name='smon'>\n");
-			printf("<option value='1' %s>January\n",(t->tm_mon==0)?"SELECTED":"");
-			printf("<option value='2' %s>February\n",(t->tm_mon==1)?"SELECTED":"");
-			printf("<option value='3' %s>March\n",(t->tm_mon==2)?"SELECTED":"");
-			printf("<option value='4' %s>April\n",(t->tm_mon==3)?"SELECTED":"");
-			printf("<option value='5' %s>May\n",(t->tm_mon==4)?"SELECTED":"");
-			printf("<option value='6' %s>June\n",(t->tm_mon==5)?"SELECTED":"");
-			printf("<option value='7' %s>July\n",(t->tm_mon==6)?"SELECTED":"");
-			printf("<option value='8' %s>August\n",(t->tm_mon==7)?"SELECTED":"");
-			printf("<option value='9' %s>September\n",(t->tm_mon==8)?"SELECTED":"");
-			printf("<option value='10' %s>October\n",(t->tm_mon==9)?"SELECTED":"");
-			printf("<option value='11' %s>November\n",(t->tm_mon==10)?"SELECTED":"");
-			printf("<option value='12' %s>December\n",(t->tm_mon==11)?"SELECTED":"");
+			printf("<option value='1' %s>1\n",(t->tm_mon==0)?"SELECTED":"");
+			printf("<option value='2' %s>2\n",(t->tm_mon==1)?"SELECTED":"");
+			printf("<option value='3' %s>3\n",(t->tm_mon==2)?"SELECTED":"");
+			printf("<option value='4' %s>4\n",(t->tm_mon==3)?"SELECTED":"");
+			printf("<option value='5' %s>5\n",(t->tm_mon==4)?"SELECTED":"");
+			printf("<option value='6' %s>6\n",(t->tm_mon==5)?"SELECTED":"");
+			printf("<option value='7' %s>7\n",(t->tm_mon==6)?"SELECTED":"");
+			printf("<option value='8' %s>8\n",(t->tm_mon==7)?"SELECTED":"");
+			printf("<option value='9' %s>9\n",(t->tm_mon==8)?"SELECTED":"");
+			printf("<option value='10' %s>10\n",(t->tm_mon==9)?"SELECTED":"");
+			printf("<option value='11' %s>11\n",(t->tm_mon==10)?"SELECTED":"");
+			printf("<option value='12' %s>12\n",(t->tm_mon==11)?"SELECTED":"");
 			printf("</select>\n ");
+			printf("月");
 			printf("<input type='text' size='2' maxlength='2' name='sday' value='%d'> ",start_day);
-			printf("<input type='text' size='4' maxlength='4' name='syear' value='%d'>",start_year);
+			printf("日");
 			printf("<input type='hidden' name='shour' value='0'>\n");
 			printf("<input type='hidden' name='smin' value='0'>\n");
 			printf("<input type='hidden' name='ssec' value='0'>\n");
@@ -950,24 +985,27 @@
 			printf("</tr>\n");
 
 			printf("<tr>");
-			printf("<td valign=top class='reportSelectSubTitle'>End Date (Inclusive):</td>\n");
+			printf("<td valign=top class='reportSelectSubTitle'>終了日(指定日を含む):</td>\n");
 			printf("<td align=left valign=top class='reportSelectItem'>");
+			printf("<input type='text' size='4' maxlength='4' name='eyear' value='%d'>",end_year);
+			printf("年");
 			printf("<select name='emon'>\n");
-			printf("<option value='1' %s>January\n",(t->tm_mon==0)?"SELECTED":"");
-			printf("<option value='2' %s>February\n",(t->tm_mon==1)?"SELECTED":"");
-			printf("<option value='3' %s>March\n",(t->tm_mon==2)?"SELECTED":"");
-			printf("<option value='4' %s>April\n",(t->tm_mon==3)?"SELECTED":"");
-			printf("<option value='5' %s>May\n",(t->tm_mon==4)?"SELECTED":"");
-			printf("<option value='6' %s>June\n",(t->tm_mon==5)?"SELECTED":"");
-			printf("<option value='7' %s>July\n",(t->tm_mon==6)?"SELECTED":"");
-			printf("<option value='8' %s>August\n",(t->tm_mon==7)?"SELECTED":"");
-			printf("<option value='9' %s>September\n",(t->tm_mon==8)?"SELECTED":"");
-			printf("<option value='10' %s>October\n",(t->tm_mon==9)?"SELECTED":"");
-			printf("<option value='11' %s>November\n",(t->tm_mon==10)?"SELECTED":"");
-			printf("<option value='12' %s>December\n",(t->tm_mon==11)?"SELECTED":"");
+			printf("<option value='1' %s>1\n",(t->tm_mon==0)?"SELECTED":"");
+			printf("<option value='2' %s>2\n",(t->tm_mon==1)?"SELECTED":"");
+			printf("<option value='3' %s>3\n",(t->tm_mon==2)?"SELECTED":"");
+			printf("<option value='4' %s>4\n",(t->tm_mon==3)?"SELECTED":"");
+			printf("<option value='5' %s>5\n",(t->tm_mon==4)?"SELECTED":"");
+			printf("<option value='6' %s>6\n",(t->tm_mon==5)?"SELECTED":"");
+			printf("<option value='7' %s>7\n",(t->tm_mon==6)?"SELECTED":"");
+			printf("<option value='8' %s>8\n",(t->tm_mon==7)?"SELECTED":"");
+			printf("<option value='9' %s>9\n",(t->tm_mon==8)?"SELECTED":"");
+			printf("<option value='10' %s>10\n",(t->tm_mon==9)?"SELECTED":"");
+			printf("<option value='11' %s>11\n",(t->tm_mon==10)?"SELECTED":"");
+			printf("<option value='12' %s>12\n",(t->tm_mon==11)?"SELECTED":"");
 			printf("</select>\n ");
+			printf("月");
 			printf("<input type='text' size='2' maxlength='2' name='eday' value='%d'> ",end_day);
-			printf("<input type='text' size='4' maxlength='4' name='eyear' value='%d'>",end_year);
+			printf("日");
 			printf("<input type='hidden' name='ehour' value='24'>\n");
 			printf("<input type='hidden' name='emin' value='0'>\n");
 			printf("<input type='hidden' name='esec' value='0'>\n");
@@ -976,69 +1014,69 @@
 
 			printf("<tr><td colspan=2><br></td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Assume Initial States:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>初期状態を考慮:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='assumeinitialstates'>\n");
-			printf("<option value=yes>Yes\n");
-			printf("<option value=no>No\n");
+			printf("<option value=yes>する\n");
+			printf("<option value=no>しない\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Assume State Retention:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>保存状態を考慮:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='assumestateretention'>\n");
-			printf("<option value=yes>Yes\n");
-			printf("<option value=no>No\n");
+			printf("<option value=yes>する\n");
+			printf("<option value=no>しない\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Assume States During Program Downtime:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>プログラムのダウンタイム期間を考慮:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='assumestatesduringnotrunning'>\n");
-			printf("<option value=yes>Yes\n");
-			printf("<option value=no>No\n");
+			printf("<option value=yes>する\n");
+			printf("<option value=no>しない\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Include Soft States:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>ソフトウェアの状態:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='includesoftstates'>\n");
-			printf("<option value=yes>Yes\n");
-			printf("<option value=no SELECTED>No\n");
+			printf("<option value=yes>含める\n");
+			printf("<option value=no SELECTED>含めない\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>First Assumed %s State:</td>\n",(display_type==DISPLAY_HOST_TRENDS)?"Host":"Service");
+			printf("<tr><td class='reportSelectSubTitle' align=right>考慮する%sの初期状態:</td>\n",(display_type==DISPLAY_HOST_TRENDS)?"ホスト":"サービス");
 			printf("<td class='reportSelectItem'>\n");
 			if(display_type==DISPLAY_HOST_TRENDS){
 				printf("<select name='initialassumedhoststate'>\n");
-				printf("<option value=%d>Unspecified\n",AS_NO_DATA);
-				printf("<option value=%d>Current State\n",AS_CURRENT_STATE);
-				printf("<option value=%d>Host Up\n",AS_HOST_UP);
-				printf("<option value=%d>Host Down\n",AS_HOST_DOWN);
-				printf("<option value=%d>Host Unreachable\n",AS_HOST_UNREACHABLE);
+				printf("<option value=%d>指定しない\n",AS_NO_DATA);
+				printf("<option value=%d>現在の状態\n",AS_CURRENT_STATE);
+				printf("<option value=%d>ホスト稼働(UP)\n",AS_HOST_UP);
+				printf("<option value=%d>ホスト停止(DOWN)\n",AS_HOST_DOWN);
+				printf("<option value=%d>ホスト未到達(UNREACHABLE)\n",AS_HOST_UNREACHABLE);
 			        }
 			else{
 				printf("<select name='initialassumedservicestate'>\n");
-				printf("<option value=%d>Unspecified\n",AS_NO_DATA);
-				printf("<option value=%d>Current State\n",AS_CURRENT_STATE);
-				printf("<option value=%d>Service Ok\n",AS_SVC_OK);
-				printf("<option value=%d>Service Warning\n",AS_SVC_WARNING);
-				printf("<option value=%d>Service Unknown\n",AS_SVC_UNKNOWN);
-				printf("<option value=%d>Service Critical\n",AS_SVC_CRITICAL);
+				printf("<option value=%d>指定しない\n",AS_NO_DATA);
+				printf("<option value=%d>現在の状態\n",AS_CURRENT_STATE);
+				printf("<option value=%d>サービス正常(OK)\n",AS_SVC_OK);
+				printf("<option value=%d>サービス警告(WARNING)\n",AS_SVC_WARNING);
+				printf("<option value=%d>サービス不明(UNKNOWN)\n",AS_SVC_UNKNOWN);
+				printf("<option value=%d>サービス異常(CRITICAL)\n",AS_SVC_CRITICAL);
 			        }
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Backtracked Archives (To Scan For Initial States):</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>過去のアーカイブ数(初期ステータスを調べるためのもの):</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<input type='text' name='backtrack' size='2' maxlength='2' value='%d'>\n",backtrack_archives);
 			printf("</td></tr>\n");
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Suppress image map:</td><td class='reportSelectItem'><input type='checkbox' name='nomap'></td></tr>");
-			printf("<tr><td class='reportSelectSubTitle' align=right>Suppress popups:</td><td class='reportSelectItem'><input type='checkbox' name='nopopups'></td></tr>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>イメージマップを非表示:</td><td class='reportSelectItem'><input type='checkbox' name='nomap'></td></tr>");
+			printf("<tr><td class='reportSelectSubTitle' align=right>ポップアップを非表示:</td><td class='reportSelectItem'><input type='checkbox' name='nopopups'></td></tr>\n");
 
-			printf("<tr><td></td><td class='reportSelectItem'><input type='submit' value='Create Report'></td></tr>\n");
+			printf("<tr><td></td><td class='reportSelectItem'><input type='submit' value='レポート作成'></td></tr>\n");
 
 			printf("</form>\n");
 			printf("</TABLE>\n");
@@ -1047,7 +1085,7 @@
 
 			/*
 			printf("<P><DIV ALIGN=CENTER CLASS='helpfulHint'>\n");
-			printf("Note: Choosing the 'suppress image map' option will make the report run approximately twice as fast as it would otherwise, but it will prevent you from being able to zoom in on specific time periods.\n");
+			printf("注)'イメージマップ非表示'を選択するとおおよそ2倍レポート作成が早くなります。ただし、特定の時間帯を拡大することが出来なくなります。\n");
 			printf("</DIV></P>\n");
 			*/
 		        }
@@ -1055,7 +1093,7 @@
 		/* as the user whether they want a graph for a host or service */
 		else{
 			printf("<P><DIV ALIGN=CENTER>\n");
-			printf("<DIV CLASS='reportSelectTitle'>Step 1: Select Report Type</DIV>\n");
+			printf("<DIV CLASS='reportSelectTitle'>ステップ１: レポートタイプの選択</DIV>\n");
 			printf("</DIV></P>\n");
 
 			printf("<P><DIV ALIGN=CENTER>\n");
@@ -1063,16 +1101,16 @@
 			printf("<TABLE BORDER=0 cellpadding=5>\n");
 			printf("<form method=\"GET\" action=\"%s\">\n",TRENDS_CGI);
 
-			printf("<tr><td class='reportSelectSubTitle' align=right>Type:</td>\n");
+			printf("<tr><td class='reportSelectSubTitle' align=right>タイプ:</td>\n");
 			printf("<td class='reportSelectItem'>\n");
 			printf("<select name='input'>\n");
-			printf("<option value=gethost>Host\n");
-			printf("<option value=getservice>Service\n");
+			printf("<option value=gethost>ホスト\n");
+			printf("<option value=getservice>サービス\n");
 			printf("</select>\n");
 			printf("</td></tr>\n");
 
 			printf("<tr><td></td><td class='reportSelectItem'>\n");
-			printf("<input type='submit' value='Continue to Step 2'>\n");
+			printf("<input type='submit' value='ステップ２へ'>\n");
 			printf("</td></tr>\n");
 
 			printf("</form>\n");
@@ -1122,7 +1160,7 @@
 		printf("<head>\n");
 		printf("<link rel=\"shortcut icon\" href=\"%sfavicon.ico\" type=\"image/ico\">\n",url_images_path);
 		printf("<title>\n");
-		printf("Nagios Trends\n");
+		printf("傾向の分析\n");
 		printf("</title>\n");
 
 		if(use_stylesheet==TRUE){
@@ -1855,14 +1893,14 @@
 		if((temp_as->time_stamp<=t1 || temp_as==as_list) && (temp_as->entry_type!=AS_NO_DATA && temp_as->entry_type!=AS_PROGRAM_END && temp_as->entry_type!=AS_PROGRAM_START)){
 			last_known_state=temp_as->entry_type;
 #ifdef DEBUG
-			printf("SETTING LAST KNOWN STATE=%d<br>\n",last_known_state);
+			printf("最終状態を設定しました=%d<br>\n",last_known_state);
 #endif
 		        }
 
 		/* skip this entry if it occurs before the starting point of the graph */
 		if(temp_as->time_stamp<=t1){
 #ifdef DEBUG
-			printf("SKIPPING PRE-EVENT: %d @ %lu<br>\n",temp_as->entry_type,temp_as->time_stamp);
+			printf("イベントをスキップしました: %d @ %lu<br>\n",temp_as->entry_type,temp_as->time_stamp);
 #endif
 			last_as=temp_as;
 			continue;
@@ -2001,21 +2039,21 @@
 	/* special case if first entry was program start */
 	if(first_state==AS_PROGRAM_START){
 #ifdef DEBUG
-		printf("First state=program start!\n");
+		printf("初期状態でプログラム開始\n");
 #endif
 		if(assume_initial_states==TRUE){
 #ifdef DEBUG
-			printf("\tWe are assuming initial states...\n");
+			printf("\t初期状態を考慮します...\n");
 #endif
 			if(assume_state_retention==TRUE){
 				start_state=last_known_state;
 #ifdef DEBUG
-				printf("\tWe are assuming state retention (%d)...\n",start_state);
+				printf("\t状態の維持を考慮します (%d)...\n",start_state);
 #endif
 			        }
 			else{
 #ifdef DEBUG
-				printf("\tWe are NOT assuming state retention...\n");
+				printf("\t状態の維持を考慮しません...\n");
 #endif
 				if(display_type==DISPLAY_HOST_TRENDS)
 					start_state=AS_HOST_UP;
@@ -2025,7 +2063,7 @@
 		        }
 		else{
 #ifdef DEBUG
-			printf("We ARE NOT assuming initial states!\n");
+			printf("初期状態を考慮しません。\n");
 #endif
 			return;
 		        }
@@ -2042,9 +2080,10 @@
 		end_state=last_state;
 
 #ifdef DEBUG
-	printf("Graphing state %d\n",start_state);
-	printf("\tfrom %s",ctime(&start_time));
-	printf("\tto %s",ctime(&end_time));
+	printf("%d 状態をグラフ化します。\n",start_state);
+	printf("\t%s",ctime(&start_time));
+	printf("\t から %s",ctime(&end_time));
+	printf("まで");
 #endif
 
 	if(start_time<t1)
@@ -2069,7 +2108,7 @@
 	        }
 
 #ifdef DEBUG
-	printf("\tPixel %d to %d\n\n",start_pixel,end_pixel);
+	printf("\tPixel %d から %d\n\n",start_pixel,end_pixel);
 #endif
 
 
@@ -2124,35 +2163,35 @@
 		/* figure out the the state string to use */
 		switch(start_state){
 		case AS_HOST_UP:
-			strcpy(state_string,"UP");
+			strcpy(state_string,"稼動(UP)");
 			height=60;
 			break;
 		case AS_HOST_DOWN:
-			strcpy(state_string,"DOWN");
+			strcpy(state_string,"停止(DOWN)");
 			height=40;
 			break;
 		case AS_HOST_UNREACHABLE:
-			strcpy(state_string,"UNREACHABLE");
+			strcpy(state_string,"未到達(UNREACHABLE)");
 			height=20;
 			break;
 		case AS_SVC_OK:
-			strcpy(state_string,"OK");
+			strcpy(state_string,"正常(OK)");
 			height=80;
 			break;
 		case AS_SVC_WARNING:
-			strcpy(state_string,"WARNING");
+			strcpy(state_string,"警告(WARNING)");
 			height=60;
 			break;
 		case AS_SVC_UNKNOWN:
-			strcpy(state_string,"UNKNOWN");
+			strcpy(state_string,"不明(UNKNOWN)");
 			height=40;
 			break;
 		case AS_SVC_CRITICAL:
-			strcpy(state_string,"CRITICAL");
+			strcpy(state_string,"異常(CRITICAL)");
 			height=20;
 			break;
 		default:
-			strcpy(state_string,"?");
+			strcpy(state_string,"未知の状態");
 			height=5;
 			break;
 	                }
@@ -2207,7 +2246,7 @@
 			sanitize_plugin_output(state_info);
 
 			printf("onMouseOver='showPopup(\"");
-			snprintf(temp_buffer,sizeof(temp_buffer)-1,"<B><U>%s</U></B><BR><B>Time Range</B>: <I>%s</I> to <I>%s</I><BR><B>Duration</B>: <I>%dd %dh %dm %ds</I><BR><B>State Info</B>: <I>%s</I>",state_string,start_timestring,end_timestring,days,hours,minutes,seconds,(state_info==NULL)?"N/A":state_info);
+			snprintf(temp_buffer,sizeof(temp_buffer)-1,"<B><U>%s</U></B><BR><B>期間</B>: <I>%s</I> から <I>%s</I><BR><B>経過時間</B>: <I>%dd %dh %dm %ds</I><BR><B>ステータス情報</B>: <I>%s</I>",state_string,start_timestring,end_timestring,days,hours,minutes,seconds,(state_info==NULL)?"N/A":state_info);
 			temp_buffer[sizeof(temp_buffer)-1]='\x0';
 			printf("%s",temp_buffer);
 			printf("\",event)' onMouseOut='hidePopup()'");
@@ -2288,7 +2327,7 @@
 	archived_state *new_as=NULL;
 
 #ifdef DEBUG
-	printf("Added state %d @ %s",state_type,ctime(&time_stamp));
+	printf("%d の状態を追加しました。:%s",state_type,ctime(&time_stamp));
 #endif
 
 	/* allocate memory for the new entry */
@@ -2363,7 +2402,7 @@
 	int current_archive;
 
 #ifdef DEBUG
-	printf("Determining archives to use...\n");
+	printf("使用するアーカイブを決定しています...\n");
 #endif
 
 	/* determine earliest archive to use */
@@ -2378,8 +2417,8 @@
 		oldest_archive=newest_archive;
 
 #ifdef DEBUG
-	printf("Oldest archive: %d\n",oldest_archive);
-	printf("Newest archive: %d\n",newest_archive);
+	printf("最も古いアーカイブ: %d\n",oldest_archive);
+	printf("最も新しいアーカイブ: %d\n",newest_archive);
 #endif
 
 	/* read in all the necessary archived logs */
@@ -2389,7 +2428,7 @@
 		get_log_archive_to_use(current_archive,filename,sizeof(filename)-1);
 
 #ifdef DEBUG	
-		printf("\tCurrent archive: %d (%s)\n",current_archive,filename);
+		printf("\t現在のアーカイブ: %d (%s)\n",current_archive,filename);
 #endif
 
 		/* scan the log file for archived state data */
@@ -2421,13 +2460,13 @@
 
 	if((thefile=mmap_fopen(filename))==NULL){
 #ifdef DEBUG
-		printf("Could not open file '%s' for reading.\n",filename);
+		printf("'%s'を開くことが出来なかったため読み込めませんでした。\n",filename);
 #endif
 		return;
 	        }
 
 #ifdef DEBUG
-	printf("Scanning log file '%s' for archived state data...\n",filename);
+	printf("ステータスデータをアーカイブするためにログファイル '%s' を調べています...\n",filename);
 #endif
 
 	while(1){
@@ -2700,9 +2739,10 @@
 	int string_height;
 	int string_width;
 
-	snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s",ctime(&ts_time));
-	temp_buffer[sizeof(temp_buffer)-1]='\x0';
-	temp_buffer[strlen(temp_buffer)-1]='\x0';
+	get_time_string(&ts_time, temp_buffer, sizeof(temp_buffer)-1, SHORT_DATE_TIME);
+//	snprintf(temp_buffer,sizeof(temp_buffer)-1,"%s",ctime(&ts_time));
+//	temp_buffer[sizeof(temp_buffer)-1]='\x0';
+//	temp_buffer[strlen(temp_buffer)-1]='\x0';
 
 	string_height=gdFontSmall->h;
 	string_width=gdFontSmall->w*strlen(temp_buffer);
@@ -2726,6 +2766,7 @@
 	unsigned long total_state_time;
 	unsigned long time_indeterminate=0L;
 	int string_height;
+	int brect[8];
 
 	if(mode==CREATE_HTML)
 		return;
@@ -2749,42 +2790,83 @@
 
 	if(display_type==DISPLAY_HOST_TRENDS){
 
-		get_time_breakdown_string(total_time,time_up,"Up",&temp_buffer[0],sizeof(temp_buffer));
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+5,(unsigned char *)temp_buffer,color_darkgreen);
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*2),drawing_y_offset+5,(unsigned char *)"Up",color_darkgreen);
-
-		get_time_breakdown_string(total_time,time_down,"Down",&temp_buffer[0],sizeof(temp_buffer));
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+25,(unsigned char *)temp_buffer,color_red);
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*4),drawing_y_offset+25,(unsigned char *)"Down",color_red);
-
-		get_time_breakdown_string(total_time,time_unreachable,"Unreachable",&temp_buffer[0],sizeof(temp_buffer));
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+45,(unsigned char *)temp_buffer,color_darkred);
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*11),drawing_y_offset+45,(unsigned char *)"Unreachable",color_darkred);
-
-		get_time_breakdown_string(total_time,time_indeterminate,"Indeterminate",&temp_buffer[0],sizeof(temp_buffer));
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+65,(unsigned char *)temp_buffer,color_black);
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*13),drawing_y_offset+65,(unsigned char *)"Indeterminate",color_black);
+		/*** TrueTypeFont ***/
+		if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+			get_time_breakdown_string(total_time,time_up,"稼動",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageStringTTF(trends_image, &brect[0], color_darkgreen, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset+drawing_width+20,drawing_y_offset+15,(unsigned char *)temp_buffer);
+			gdImageStringTTF(trends_image, &brect[0], color_darkgreen, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset-10-(gdFontSmall->w*5),drawing_y_offset+15,(unsigned char *)"稼動");
+
+			get_time_breakdown_string(total_time,time_down,"停止",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageStringTTF(trends_image, &brect[0], color_red, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset+drawing_width+20,drawing_y_offset+35,(unsigned char *)temp_buffer);
+			gdImageStringTTF(trends_image, &brect[0], color_red, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset-10-(gdFontSmall->w*5),drawing_y_offset+35,(unsigned char *)"停止");
+
+			get_time_breakdown_string(total_time,time_unreachable,"未到達",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageStringTTF(trends_image, &brect[0], color_darkred, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset+drawing_width+20,drawing_y_offset+55,(unsigned char *)temp_buffer);
+			gdImageStringTTF(trends_image, &brect[0], color_darkred, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset-10-(gdFontSmall->w*7),drawing_y_offset+55,(unsigned char *)"未到達");
+
+			get_time_breakdown_string(total_time,time_indeterminate,"未確定",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageStringTTF(trends_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset+drawing_width+20,drawing_y_offset+75,(unsigned char *)temp_buffer);
+			gdImageStringTTF(trends_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset-10-(gdFontSmall->w*7),drawing_y_offset+75,(unsigned char *)"未確定");
+		}else{
+			get_time_breakdown_string(total_time,time_up,"Up",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+5,(unsigned char *)temp_buffer,color_darkgreen);
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*2),drawing_y_offset+5,(unsigned char *)"Up",color_darkgreen);
+
+			get_time_breakdown_string(total_time,time_down,"Down",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+25,(unsigned char *)temp_buffer,color_red);
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*4),drawing_y_offset+25,(unsigned char *)"Down",color_red);
+
+			get_time_breakdown_string(total_time,time_unreachable,"Unreachable",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+45,(unsigned char *)temp_buffer,color_darkred);
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*11),drawing_y_offset+45,(unsigned char *)"Unreachable",color_darkred);
+
+			get_time_breakdown_string(total_time,time_indeterminate,"Indeterminate",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+65,(unsigned char *)temp_buffer,color_black);
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*13),drawing_y_offset+65,(unsigned char *)"Indeterminate",color_black);
+		}
+
 	        }
 	else{
-		get_time_breakdown_string(total_time,time_ok,"Ok",&temp_buffer[0],sizeof(temp_buffer));
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+5,(unsigned char *)temp_buffer,color_darkgreen);
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*2),drawing_y_offset+5,(unsigned char *)"Ok",color_darkgreen);
-
-		get_time_breakdown_string(total_time,time_warning,"Warning",&temp_buffer[0],sizeof(temp_buffer));
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+25,(unsigned char *)temp_buffer,color_yellow);
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*7),drawing_y_offset+25,(unsigned char *)"Warning",color_yellow);
-
-		get_time_breakdown_string(total_time,time_unknown,"Unknown",&temp_buffer[0],sizeof(temp_buffer));
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+45,(unsigned char *)temp_buffer,color_orange);
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*7),drawing_y_offset+45,(unsigned char *)"Unknown",color_orange);
-
-		get_time_breakdown_string(total_time,time_critical,"Critical",&temp_buffer[0],sizeof(temp_buffer));
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+65,(unsigned char *)temp_buffer,color_red);
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*8),drawing_y_offset+65,(unsigned char *)"Critical",color_red);
-
-		get_time_breakdown_string(total_time,time_indeterminate,"Indeterminate",&temp_buffer[0],sizeof(temp_buffer));
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+85,(unsigned char *)temp_buffer,color_black);
-		gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*13),drawing_y_offset+85,(unsigned char *)"Indeterminate",color_black);
+		/*** TrueTypeFont ***/
+		if( (strlen(ttf_file) > 5) && (access(ttf_file, F_OK) == 0) ){
+			get_time_breakdown_string(total_time,time_ok,"正常",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageStringTTF(trends_image, &brect[0], color_darkgreen, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset+drawing_width+20,drawing_y_offset+15,(unsigned char *)temp_buffer);
+			gdImageStringTTF(trends_image, &brect[0], color_darkgreen, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset-10-(gdFontSmall->w*5),drawing_y_offset+15,(unsigned char *)"正常");
+
+			get_time_breakdown_string(total_time,time_warning,"警告",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageStringTTF(trends_image, &brect[0], color_yellow, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset+drawing_width+20,drawing_y_offset+35,(unsigned char *)temp_buffer);
+			gdImageStringTTF(trends_image, &brect[0], color_yellow, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset-10-(gdFontSmall->w*5),drawing_y_offset+35,(unsigned char *)"警告");
+
+			get_time_breakdown_string(total_time,time_unknown,"不明",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageStringTTF(trends_image, &brect[0], color_orange, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset+drawing_width+20,drawing_y_offset+55,(unsigned char *)temp_buffer);
+			gdImageStringTTF(trends_image, &brect[0], color_orange, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset-10-(gdFontSmall->w*5),drawing_y_offset+55,(unsigned char *)"不明");
+
+			get_time_breakdown_string(total_time,time_critical,"異常",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageStringTTF(trends_image, &brect[0], color_red, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset+drawing_width+20,drawing_y_offset+75,(unsigned char *)temp_buffer);
+			gdImageStringTTF(trends_image, &brect[0], color_red, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset-10-(gdFontSmall->w*5),drawing_y_offset+75,(unsigned char *)"異常");
+
+			get_time_breakdown_string(total_time,time_indeterminate,"不確定",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageStringTTF(trends_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset+drawing_width+20,drawing_y_offset+95,(unsigned char *)temp_buffer);
+			gdImageStringTTF(trends_image, &brect[0], color_black, ttf_file, SMALL_FONT_SIZE, 0.0, drawing_x_offset-10-(gdFontSmall->w*7),drawing_y_offset+95,(unsigned char *)"不確定");
+		}else{
+			get_time_breakdown_string(total_time,time_ok,"Ok",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+5,(unsigned char *)temp_buffer,color_darkgreen);
+
+			get_time_breakdown_string(total_time,time_warning,"Warning",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+25,(unsigned char *)temp_buffer,color_yellow);
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*7),drawing_y_offset+25,(unsigned char *)"Warning",color_yellow);
+
+			get_time_breakdown_string(total_time,time_unknown,"Unknown",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+45,(unsigned char *)temp_buffer,color_orange);
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*7),drawing_y_offset+45,(unsigned char *)"Unknown",color_orange);
+
+			get_time_breakdown_string(total_time,time_critical,"Critical",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+65,(unsigned char *)temp_buffer,color_red);
+
+			get_time_breakdown_string(total_time,time_indeterminate,"Indeterminate",&temp_buffer[0],sizeof(temp_buffer));
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset+drawing_width+20,drawing_y_offset+85,(unsigned char *)temp_buffer,color_black);
+			gdImageString(trends_image,gdFontSmall,drawing_x_offset-10-(gdFontSmall->w*13),drawing_y_offset+85,(unsigned char *)"Indeterminate",color_black);
+		}
 	        }
 
 	return;
diff -urN nagios-3.2.3.orig/common/downtime.c nagios-3.2.3/common/downtime.c
--- nagios-3.2.3.orig/common/downtime.c	2010-12-12 00:47:55.000000000 +0900
+++ nagios-3.2.3/common/downtime.c	2010-12-12 19:59:07.000000000 +0900
@@ -270,9 +270,9 @@
 	else
 		type_string="service";
 	if(temp_downtime->fixed==TRUE)
-		asprintf(&temp_buffer,"This %s has been scheduled for fixed downtime from %s to %s.  Notifications for the %s will not be sent out during that time period.",type_string,start_time_string,end_time_string,type_string);
+		asprintf(&temp_buffer,"この %s は %s から %s まで固定した故障時間としてスケジュールされました。また、%s に関する通知はその期間には送られません。",type_string,start_time_string,end_time_string,type_string);
 	else
-		asprintf(&temp_buffer,"This %s has been scheduled for flexible downtime starting between %s and %s and lasting for a period of %d hours and %d minutes.  Notifications for the %s will not be sent out during that time period.",type_string,start_time_string,end_time_string,hours,minutes,type_string);
+		asprintf(&temp_buffer,"この %s は %s から %s までの間に障害が発生し %d 時間 %d 分 継続してるためフレキシブルな故障時間としてスケジュールされました。また、%s に関する通知はその期間には送られません。",type_string,start_time_string,end_time_string,hours,minutes,type_string);
 
 
 	log_debug_info(DEBUGL_DOWNTIME,0,"Scheduled Downtime Details:\n");
diff -urN nagios-3.2.3.orig/common/statusdata.c nagios-3.2.3/common/statusdata.c
--- nagios-3.2.3.orig/common/statusdata.c	2008-12-01 02:22:59.000000000 +0900
+++ nagios-3.2.3/common/statusdata.c	2010-12-12 19:59:07.000000000 +0900
@@ -423,17 +423,17 @@
 			my_free(new_svcstatus->plugin_output);
 			if(new_svcstatus->should_be_scheduled==TRUE){
 				get_time_string(&new_svcstatus->next_check,date_string,sizeof(date_string),LONG_DATE_TIME);
-				asprintf(&new_svcstatus->plugin_output,"Service check scheduled for %s",date_string);
+				asprintf(&new_svcstatus->plugin_output,"%s にスケジュールされました。",date_string);
 			        }
 			else{
 				/* passive-only services that have just been scheduled for a forced check */
 				if(new_svcstatus->checks_enabled==FALSE && new_svcstatus->next_check!=(time_t)0L && (new_svcstatus->check_options & CHECK_OPTION_FORCE_EXECUTION)){
 					get_time_string(&new_svcstatus->next_check,date_string,sizeof(date_string),LONG_DATE_TIME);
-					asprintf(&new_svcstatus->plugin_output,"Forced service check scheduled for %s",date_string);
+					asprintf(&new_svcstatus->plugin_output,"%s に強制チェックとしてスケジュールされました。",date_string);
 					}
 				/* passive-only services not scheduled to be checked */
 				else
-					new_svcstatus->plugin_output=(char *)strdup("Service is not scheduled to be checked...");
+					new_svcstatus->plugin_output=(char *)strdup("このサービスはチェックするようにはスケジュールされていません。");
 				}
 		        }
 	        }
diff -urN nagios-3.2.3.orig/html/index.php nagios-3.2.3/html/index.php
--- nagios-3.2.3.orig/html/index.php	2010-08-29 01:46:46.000000000 +0900
+++ nagios-3.2.3/html/index.php	2010-12-12 19:59:07.000000000 +0900
@@ -2,6 +2,7 @@
 
 <html>
 <head>
+<META HTTP-EQUIV='content-type' CONTENT='text/html;charset=UTF-8'>
 <meta name="ROBOTS" content="NOINDEX, NOFOLLOW">
 <title>Nagios Core</title>
 <link rel="shortcut icon" href="images/favicon.ico" type="image/ico">
@@ -46,14 +47,14 @@
 <frame src="<?php echo $corewindow;?>" name="main" frameborder="0">
 
 <noframes>
-<!-- This page requires a web browser which supports frames. --> 
-<h2>Nagios</h2>
+<!-- このページを表示するには、フレームをサポートしているブラウザが必要です。 --> 
+<h2>Nagios 日本語化</h2>
 <p align="center">
 <a href="http://www.nagios.org/">www.nagios.org</a><br>
 Copyright (c) 1999-2010 Ethan Galstad<br>
 </p>
 <p>
-<i>Note: These pages require a browser which supports frames</i>
+<i>※このページを表示するには、フレームをサポートしているブラウザが必要です。</i>
 </p>
 </noframes>
 
diff -urN nagios-3.2.3.orig/html/side.php nagios-3.2.3/html/side.php
--- nagios-3.2.3.orig/html/side.php	2009-03-11 05:05:43.000000000 +0900
+++ nagios-3.2.3/html/side.php	2010-12-12 19:59:07.000000000 +0900
@@ -10,6 +10,7 @@
 
 <head>
 <meta name="ROBOTS" content="NOINDEX, NOFOLLOW">
+<META HTTP-EQUIV='content-type' CONTENT='text/html;charset=UTF-8'>
 <TITLE>Nagios</TITLE>
 <link href="stylesheets/common.css" type="text/css" rel="stylesheet">
 </head>
@@ -23,48 +24,48 @@
 </div>
 
 <div class="navsection">
-<div class="navsectiontitle">General</div>
+<div class="navsectiontitle">一般</div>
 <div class="navsectionlinks">
 <ul class="navsectionlinks">
-<li><a href="main.php" target="<?php echo $link_target;?>">Home</a></li>
-<li><a href="docs/" target="<?php echo $link_target;?>">Documentation</a></li>
+<li><a href="main.php" target="<?php echo $link_target;?>">ホーム</a></li>
+<li><a href="docs/" target="<?php echo $link_target;?>">ドキュメント</a></li>
 </ul>
 </div>
 </div>
 
 
 <div class="navsection">
-<div class="navsectiontitle">Current Status</div>
+<div class="navsectiontitle">現在の状態</div>
 <div class="navsectionlinks">
 <ul class="navsectionlinks">
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/tac.cgi" target="<?php echo $link_target;?>">Tactical Overview</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/statusmap.cgi?host=all" target="<?php echo $link_target;?>">Map</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=hostdetail" target="<?php echo $link_target;?>">Hosts</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?host=all" target="<?php echo $link_target;?>">Services</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/tac.cgi" target="<?php echo $link_target;?>">総合監視状態</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/statusmap.cgi?host=all" target="<?php echo $link_target;?>">マップ</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=hostdetail" target="<?php echo $link_target;?>">ホスト</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?host=all" target="<?php echo $link_target;?>">サービス</a></li>
 <li>
-<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=overview" target="<?php echo $link_target;?>">Host Groups</a>
+<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=overview" target="<?php echo $link_target;?>">ホストグループ</a>
 <ul>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=summary" target="<?php echo $link_target;?>">Summary</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=grid" target="<?php echo $link_target;?>">Grid</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=summary" target="<?php echo $link_target;?>">サマリ</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=grid" target="<?php echo $link_target;?>">グリッド</a></li>
 </ul>
 </li>
 <li>
-<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?servicegroup=all&amp;style=overview" target="<?php echo $link_target;?>">Service Groups</a>
+<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?servicegroup=all&amp;style=overview" target="<?php echo $link_target;?>">サービスグループ</a>
 <ul>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?servicegroup=all&amp;style=summary" target="<?php echo $link_target;?>">Summary</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?servicegroup=all&amp;style=grid" target="<?php echo $link_target;?>">Grid</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?servicegroup=all&amp;style=summary" target="<?php echo $link_target;?>">サマリ</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?servicegroup=all&amp;style=grid" target="<?php echo $link_target;?>">グリッド</a></li>
 </ul>
 </li>
 <li>
-<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?host=all&amp;servicestatustypes=28" target="<?php echo $link_target;?>">Problems</a>
+<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?host=all&amp;servicestatustypes=28" target="<?php echo $link_target;?>">障害</a>
 <ul>
 <li>
-<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?host=all&amp;servicestatustypes=28" target="<?php echo $link_target;?>">Services</a> (<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?host=all&amp;type=detail&amp;hoststatustypes=3&amp;serviceprops=42&amp;servicestatustypes=28" target="<?php echo $link_target;?>">Unhandled</a>)
+<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?host=all&amp;servicestatustypes=28" target="<?php echo $link_target;?>">サービス</a> (<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?host=all&amp;type=detail&amp;hoststatustypes=3&amp;serviceprops=42&amp;servicestatustypes=28" target="<?php echo $link_target;?>">未処理の障害</a>)
 </li>
 <li>
-<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=hostdetail&amp;hoststatustypes=12" target="<?php echo $link_target;?>">Hosts</a> (<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=hostdetail&amp;hoststatustypes=12&amp;hostprops=42" target="<?php echo $link_target;?>">Unhandled</a>)
+<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=hostdetail&amp;hoststatustypes=12" target="<?php echo $link_target;?>">ホスト</a> (<a href="<?php echo $cfg["cgi_base_url"];?>/status.cgi?hostgroup=all&amp;style=hostdetail&amp;hoststatustypes=12&amp;hostprops=42" target="<?php echo $link_target;?>">未処理の障害</a>)
 </li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/outages.cgi" target="<?php echo $link_target;?>">Network Outages</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/outages.cgi" target="<?php echo $link_target;?>">ネットワーク障害</a></li>
 </ul>
 </li>
 </ul>
@@ -74,7 +75,7 @@
 <div class="navbarsearch">
 <form method="get" action="<?php echo $cfg["cgi_base_url"];?>/status.cgi" target="<?php echo $link_target;?>">
 <fieldset>
-<legend>Quick Search:</legend>
+<legend>クイック検索:</legend>
 <input type='hidden' name='navbarsearch' value='1'>
 <input type='text' name='host' size='15' class="NavBarSearchItem">
 </fieldset>
@@ -85,37 +86,37 @@
 
 
 <div class="navsection">
-<div class="navsectiontitle">Reports</div>
+<div class="navsectiontitle">レポート</div>
 <div class="navsectionlinks">
 <ul class="navsectionlinks">
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/avail.cgi" target="<?php echo $link_target;?>">Availability</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/trends.cgi" target="<?php echo $link_target;?>">Trends</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/avail.cgi" target="<?php echo $link_target;?>">稼動状況</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/trends.cgi" target="<?php echo $link_target;?>">傾向</a></li>
 
 <li>
-<a href="<?php echo $cfg["cgi_base_url"];?>/history.cgi?host=all" target="<?php echo $link_target;?>">Alerts</a>
+<a href="<?php echo $cfg["cgi_base_url"];?>/history.cgi?host=all" target="<?php echo $link_target;?>">警報</a>
 <ul>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/history.cgi?host=all" target="<?php echo $link_target;?>">History</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/summary.cgi" target="<?php echo $link_target;?>">Summary</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/histogram.cgi" target="<?php echo $link_target;?>">Histogram</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/history.cgi?host=all" target="<?php echo $link_target;?>">履歴</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/summary.cgi" target="<?php echo $link_target;?>">サマリ</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/histogram.cgi" target="<?php echo $link_target;?>">ヒストグラム</a></li>
 </ul>
 </li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/notifications.cgi?contact=all" target="<?php echo $link_target;?>">Notifications</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/showlog.cgi" target="<?php echo $link_target;?>">Event Log</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/notifications.cgi?contact=all" target="<?php echo $link_target;?>">通知</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/showlog.cgi" target="<?php echo $link_target;?>">イベントログ</a></li>
 </ul>
 </div>
 </div>
 
 
 <div class="navsection">
-<div class="navsectiontitle">System</div>
+<div class="navsectiontitle">システム</div>
 <div class="navsectionlinks">
 <ul class="navsectionlinks">
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/extinfo.cgi?type=3" target="<?php echo $link_target;?>">Comments</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/extinfo.cgi?type=6" target="<?php echo $link_target;?>">Downtime</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/extinfo.cgi?type=0" target="<?php echo $link_target;?>">Process Info</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/extinfo.cgi?type=4" target="<?php echo $link_target;?>">Performance Info</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/extinfo.cgi?type=7" target="<?php echo $link_target;?>">Scheduling Queue</a></li>
-<li><a href="<?php echo $cfg["cgi_base_url"];?>/config.cgi" target="<?php echo $link_target;?>">Configuration</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/extinfo.cgi?type=3" target="<?php echo $link_target;?>">コメント</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/extinfo.cgi?type=6" target="<?php echo $link_target;?>">ダウンタイム</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/extinfo.cgi?type=0" target="<?php echo $link_target;?>">プロセス情報</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/extinfo.cgi?type=4" target="<?php echo $link_target;?>">パフォーマンス情報</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/extinfo.cgi?type=7" target="<?php echo $link_target;?>">スケジュール</a></li>
+<li><a href="<?php echo $cfg["cgi_base_url"];?>/config.cgi" target="<?php echo $link_target;?>">設定内容の確認</a></li>
 </ul>
 </div>
 </div>
diff -urN nagios-3.2.3.orig/include/cgiutils.h.in nagios-3.2.3/include/cgiutils.h.in
--- nagios-3.2.3.orig/include/cgiutils.h.in	2010-12-12 00:47:54.000000000 +0900
+++ nagios-3.2.3/include/cgiutils.h.in	2010-12-12 20:11:35.000000000 +0900
@@ -96,27 +96,27 @@
 #define STATUS_ICON_HEIGHT		20
 
 #define INFO_ICON			"info.png"
-#define INFO_ICON_ALT			"Informational Message"
+#define INFO_ICON_ALT			"情報"
 #define START_ICON			"start.png"
-#define START_ICON_ALT			"Program Start"
+#define START_ICON_ALT			"プログラム起動"
 #define STOP_ICON			"stop.png"
-#define STOP_ICON_ALT			"Program End"
+#define STOP_ICON_ALT			"プログラム停止"
 #define RESTART_ICON			"restart.png" 
-#define RESTART_ICON_ALT		"Program Restart"
+#define RESTART_ICON_ALT		"プログラム再起動"
 #define OK_ICON				"recovery.png" 
-#define OK_ICON_ALT			"Service Ok"
+#define OK_ICON_ALT			"サービス正常(OK)"
 #define CRITICAL_ICON			"critical.png" 
-#define CRITICAL_ICON_ALT		"Service Critical"
+#define CRITICAL_ICON_ALT		"サービス異常(CRITICAL)"
 #define WARNING_ICON			"warning.png" 
-#define WARNING_ICON_ALT		"Service Warning"
+#define WARNING_ICON_ALT		"サービス警告(WARNING)"
 #define UNKNOWN_ICON			"unknown.png" 
-#define UNKNOWN_ICON_ALT		"Service Unknown"
+#define UNKNOWN_ICON_ALT		"サービス不明(UNKNOWN)"
 #define NOTIFICATION_ICON		"notify.png" 
-#define NOTIFICATION_ICON_ALT		"Service Notification"
+#define NOTIFICATION_ICON_ALT		"サービス警報通知(NOTIFICATION)"
 #define LOG_ROTATION_ICON		"logrotate.png" 
-#define LOG_ROTATION_ICON_ALT		"Log Rotation"
+#define LOG_ROTATION_ICON_ALT		"ログローテーション"
 #define EXTERNAL_COMMAND_ICON		"command.png" 
-#define EXTERNAL_COMMAND_ICON_ALT	"External Command"
+#define EXTERNAL_COMMAND_ICON_ALT	"外部コマンド"
 
 #define STATUS_DETAIL_ICON		"status2.png"
 #define STATUS_OVERVIEW_ICON		"status.png"
@@ -147,23 +147,23 @@
 #define EMPTY_ICON			"empty.png"
 
 #define ACTIVE_ICON			"active.png"
-#define ACTIVE_ICON_ALT                 "Active Mode"
+#define ACTIVE_ICON_ALT                 "アクティブモード"
 #define STANDBY_ICON			"standby.png"
-#define STANDBY_ICON_ALT                "Standby Mode"
+#define STANDBY_ICON_ALT                "スタンバイモード"
 
 #define HOST_DOWN_ICON			"critical.png"
-#define HOST_DOWN_ICON_ALT		"Host Down"
+#define HOST_DOWN_ICON_ALT		"ホスト停止(DOWN)"
 #define HOST_UNREACHABLE_ICON		"critical.png"
-#define HOST_UNREACHABLE_ICON_ALT	"Host Unreachable"
+#define HOST_UNREACHABLE_ICON_ALT	"ホスト未到達(UNREACHABLE)"
 #define HOST_UP_ICON			"recovery.png"
-#define HOST_UP_ICON_ALT		"Host Up"
+#define HOST_UP_ICON_ALT		"ホスト稼働(UP)"
 #define HOST_NOTIFICATION_ICON		"notify.png"
-#define HOST_NOTIFICATION_ICON_ALT	"Host Notification"
+#define HOST_NOTIFICATION_ICON_ALT	"ホスト警報通知(NOTIFICATION)"
 
 #define SERVICE_EVENT_ICON		"serviceevent.png"
-#define SERVICE_EVENT_ICON_ALT		"Service Event Handler"
+#define SERVICE_EVENT_ICON_ALT		"サービスイベントハンドラ"
 #define HOST_EVENT_ICON			"hostevent.png"
-#define HOST_EVENT_ICON_ALT		"Host Event Handler"
+#define HOST_EVENT_ICON_ALT		"ホストイベントハンドラ"
 
 #define THERM_OK_IMAGE			"thermok.png"
 #define THERM_WARNING_IMAGE		"thermwarn.png"
diff -urN nagios-3.2.3.orig/sample-config/cgi.cfg.in nagios-3.2.3/sample-config/cgi.cfg.in
--- nagios-3.2.3.orig/sample-config/cgi.cfg.in	2009-06-18 00:13:52.000000000 +0900
+++ nagios-3.2.3/sample-config/cgi.cfg.in	2010-12-12 19:59:07.000000000 +0900
@@ -355,3 +355,11 @@
 
 
 
+
+
+# TRUE TYPE FONT FILE (JAPANESE FONT ONLY)
+# The font file used for the text of the image outputted by GD 
+# is specified. The path of the file to specify is absolutely 
+# performed by specification. 
+
+#ttf_file=@sysconfdir@/font/font.ttf
diff -urN nagios-3.2.3.orig/t/610cgistatus.t nagios-3.2.3/t/610cgistatus.t
--- nagios-3.2.3.orig/t/610cgistatus.t	2010-12-12 00:47:55.000000000 +0900
+++ nagios-3.2.3/t/610cgistatus.t	2010-12-12 20:43:04.000000000 +0900
@@ -29,11 +29,11 @@
 
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg REMOTE_USER=nagiosadmin REQUEST_METHOD=GET QUERY_STRING=host=host1 $cgi`;
 like( $output, '/status.cgi\?host=host1&sorttype=1&sortoption=1/', "Host value should be set to specific host if passed in" );
-like( $output, '/1 Matching Service Entries Displayed/', "Found the one host" );
+like( $output, '/条件にあった 1 個のサービスを表示しています/', "Found the one host" );
 
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg REMOTE_USER=nagiosadmin REQUEST_METHOD=GET QUERY_STRING=host= $cgi`;
 like( $output, '/status.cgi\?host=&sorttype=1&sortoption=1/', "Host value kept as blank if set to blank" );
-like( $output, '/0 Matching Service Entries Displayed/', "Got no hosts because looking for a blank name" );
+like( $output, '/条件にあった 0 個のサービスを表示しています/', "Got no hosts because looking for a blank name" );
 
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg REMOTE_USER=nagiosadmin REQUEST_METHOD=GET $cgi`;
 like( $output, '/status.cgi\?host=all&sorttype=1&sortoption=1/', "Host value should be set to all if nothing set initially" );
diff -urN nagios-3.2.3.orig/t/615cgierror.t nagios-3.2.3/t/615cgierror.t
--- nagios-3.2.3.orig/t/615cgierror.t	2009-05-13 07:34:34.000000000 +0900
+++ nagios-3.2.3/t/615cgierror.t	2010-12-12 20:45:58.000000000 +0900
@@ -26,12 +26,12 @@
 	foreach my $cgi (@todos) {
 		delete $cgis{$cgi};
 		my $output = `NAGIOS_CGI_CONFIG=etc/cgi.nonexistant REQUEST_METHOD=GET $cgi_dir/$cgi`;
-		like( $output, "/Error: Could not open CGI config file 'etc/cgi.nonexistant' for reading/", "Found error for $cgi" );
+		like( $output, "/エラー: CGI設定ファイル 'etc/cgi.nonexistant' が読めません/", "Found error for $cgi" );
 	}
 }
 		
 foreach my $cgi (sort keys %cgis) {
 	my $output = `NAGIOS_CGI_CONFIG=etc/cgi.nonexistant REQUEST_METHOD=GET $cgi_dir/$cgi`;
-	like( $output, "/Error: Could not open CGI config file 'etc/cgi.nonexistant' for reading/", "Found error for $cgi" );
+	like( $output, "/エラー: CGI設定ファイル 'etc/cgi.nonexistant' が読めません/", "Found error for $cgi" );
 }
 
diff -urN nagios-3.2.3.orig/t/617statuswml.t nagios-3.2.3/t/617statuswml.t
--- nagios-3.2.3.orig/t/617statuswml.t	2009-08-21 16:04:57.000000000 +0900
+++ nagios-3.2.3/t/617statuswml.t	2010-12-12 20:49:45.000000000 +0900
@@ -31,7 +31,7 @@
 like( $output, qr%<p>Invalid host name/ip</p>% );
 
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg REQUEST_METHOD=GET QUERY_STRING="ping=127.0.0.1" $statuswml`;
-like( $output, qr%<b>Results For Ping Of 127.0.0.1:</b><br/>%, "Works correctly for valid address for ping" );
+like( $output, qr%<b>127.0.0.1へのPing結果:</b><br/>%, "Works correctly for valid address for ping" );
 
 # Don't run this test below, because it actually invokes traceroute
 #$output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg REQUEST_METHOD=GET QUERY_STRING="traceroute=127.0.0.1" $statuswml`;
diff -urN nagios-3.2.3.orig/t/622extinfo-local.t nagios-3.2.3/t/622extinfo-local.t
--- nagios-3.2.3.orig/t/622extinfo-local.t	2010-06-18 23:25:30.000000000 +0900
+++ nagios-3.2.3/t/622extinfo-local.t	2010-12-12 20:55:11.000000000 +0900
@@ -19,8 +19,8 @@
 plan tests => 2;
 
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg REQUEST_METHOD=GET $remote_user $extinfo_cgi`;
-like( $output, "/Process Information/", "extinfo.cgi without params show the process information" );
+like( $output, "/プロセス情報/", "extinfo.cgi without params show the process information" );
 
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg REQUEST_METHOD=GET $remote_user QUERY_STRING='&type=1&host=host1' $extinfo_cgi`;
-like( $output, "/Schedule downtime for all services on this host/", "extinfo.cgi allows us to set downtime for a host and all of his services" );
+like( $output, "/このホストと全サービスのダウンタイムをスケジュール/", "extinfo.cgi allows us to set downtime for a host and all of his services" );
 
diff -urN nagios-3.2.3.orig/t/623cmd-local.t nagios-3.2.3/t/623cmd-local.t
--- nagios-3.2.3.orig/t/623cmd-local.t	2010-03-06 07:16:30.000000000 +0900
+++ nagios-3.2.3/t/623cmd-local.t	2010-12-13 00:14:18.000000000 +0900
@@ -21,7 +21,7 @@
 
 
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET $local_cgi`;
-like( $output, "/<P><DIV CLASS='errorMessage'>Error: No command was specified</DIV></P>/", "$local_cgi without params shows an error" );
+like( $output, "/<P><DIV CLASS='errorMessage'>エラー: コマンドが選択されていません。</DIV></P>/", "$local_cgi without params shows an error" );
 
 
 # Run many tests against commands which are not supportet by cmd.cgi
@@ -34,137 +34,137 @@
 # Tests against command type '1'
 $cmd_typ=1;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to add a host comment/", "$local_cgi with cmd_typ=$cmd_typ shows host comment form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/リクエストしたコマンド: ホストにコメントを追加する/", "$local_cgi with cmd_typ=$cmd_typ shows host comment form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '2'
 $cmd_typ=2;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to delete a host comment/", "$local_cgi with cmd_typ=$cmd_typ shows host comment form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment ID:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment ID field" );
+like( $output, "/リクエストしたコマンド:ホストのコメントを削除する/", "$local_cgi with cmd_typ=$cmd_typ shows host comment form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメントID:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment ID field" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '3'
 $cmd_typ=3;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to add a service comment/", "$local_cgi with cmd_typ=$cmd_typ shows service comment form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/リクエストしたコマンド: サービスにコメントを追加する/", "$local_cgi with cmd_typ=$cmd_typ shows service comment form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '4'
 $cmd_typ=4;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to delete a service comment/", "$local_cgi with cmd_typ=$cmd_typ shows service comment delete form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment ID:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment ID field" );
+like( $output, "/リクエストしたコマンド:サービスのコメントを削除する/", "$local_cgi with cmd_typ=$cmd_typ shows service comment delete form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメントID:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment ID field" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '5'
 $cmd_typ=5;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable active checks of a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows enable active service checks form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスチェックを有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows enable active service checks form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '6'
 $cmd_typ=6;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable active checks of a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows disable active service checks form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスチェックを無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows disable active service checks form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '7'
 $cmd_typ=7;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to schedule a service check/", "$local_cgi with cmd_typ=$cmd_typ shows request service check form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Check Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Time in form" );
+like( $output, "/リクエストしたコマンド:次回のサービスチェックを再スケジュール/", "$local_cgi with cmd_typ=$cmd_typ shows request service check form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>チェック時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Time in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '9'
 $cmd_typ=9;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to delay a service notification/", "$local_cgi with cmd_typ=$cmd_typ shows request to delay service notification" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Notification Delay \\(minutes from now\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Notification Delay form" );
+like( $output, "/リクエストしたコマンド:サービスの通知を遅らせる/", "$local_cgi with cmd_typ=$cmd_typ shows request to delay service notification" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>通知を遅らせる時間\\(現在からの分数\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Notification Delay form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '10'
 $cmd_typ=10;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to delay a host notification/", "$local_cgi with cmd_typ=$cmd_typ shows request to delay host notification" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Notification Delay \\(minutes from now\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Notification Delay form" );
+like( $output, "/リクエストしたコマンド:ホストの通知を遅らせる/", "$local_cgi with cmd_typ=$cmd_typ shows request to delay host notification" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>通知を遅らせる時間\\(現在からの分数\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Notification Delay form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '11'
 $cmd_typ=11;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable notification/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notification" );
+like( $output, "/リクエストしたコマンド:通知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notification" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '12'
 $cmd_typ=12;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable notification/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notification" );
+like( $output, "/リクエストしたコマンド:通知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notification" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '13'
 $cmd_typ=13;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to restart the Nagios process/", "$local_cgi with cmd_typ=$cmd_typ shows request to restart Nagios" );
+like( $output, "/リクエストしたコマンド:Nagiosの再起動/", "$local_cgi with cmd_typ=$cmd_typ shows request to restart Nagios" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '14'
 $cmd_typ=14;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to shutdown the Nagios process/", "$local_cgi with cmd_typ=$cmd_typ shows request to shutdown Nagios" );
+like( $output, "/リクエストしたコマンド:Nagiosの停止/", "$local_cgi with cmd_typ=$cmd_typ shows request to shutdown Nagios" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '15'
 $cmd_typ=15;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable active checks of all services on a host/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable active checks of all services on a host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストの全サービスを有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable active checks of all services on a host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '16'
 $cmd_typ=16;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable active checks of all services on a host/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable active checks of all services on a host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストの全サービスを無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable active checks of all services on a host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '17'
 $cmd_typ=17;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to schedule a check of all services for a host/", "$local_cgi with cmd_typ=$cmd_typ shows request check all services on a host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Check Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Time in form" );
+like( $output, "/リクエストしたコマンド:ホストの全てのサービスチェックを遅らせる/", "$local_cgi with cmd_typ=$cmd_typ shows request check all services on a host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>チェック時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Time in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
@@ -172,94 +172,94 @@
 # Tests against command type '20'
 $cmd_typ=20;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to delete all comments for a host/", "$local_cgi with cmd_typ=$cmd_typ shows request to delete all comments for a host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストの全てのコメントを削除する/", "$local_cgi with cmd_typ=$cmd_typ shows request to delete all comments for a host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '21'
 $cmd_typ=21;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to delete all comments for a service/", "$local_cgi with cmd_typ=$cmd_typ shows request to delete all comments for a service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:サービスの全てのコメントを削除する/", "$local_cgi with cmd_typ=$cmd_typ shows request to delete all comments for a service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '22'
 $cmd_typ=22;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable notifications for a service/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for a service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:サービスの通知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for a service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '23'
 $cmd_typ=23;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable notifications for a service/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for a service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:サービスの通知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for a service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '24'
 $cmd_typ=24;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable notifications for a host/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for a host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストの通知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for a host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '25'
 $cmd_typ=25;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable notifications for a host/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for a host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストの通知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for a host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '26'
 $cmd_typ=26;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable notifications for all hosts and services beyond a host/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all hosts and services beyond a host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストの向こう側にある全ホストとサービスの通知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all hosts and services beyond a host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '27'
 $cmd_typ=27;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable notifications for all hosts and services beyond a host/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all hosts and services beyond a host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストの向こう側にある全ホストとサービスの通知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all hosts and services beyond a host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '28'
 $cmd_typ=28;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable notifications for all services on a host/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all services on a host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホスト上の全サービスの通知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all services on a host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '29'
 $cmd_typ=29;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable notifications for all services on a host/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all services on a host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホスト上の全サービスの通知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all services on a host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '30'
 $cmd_typ=30;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to submit a passive check result for a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows request to submit passive check result for a particular service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Check Result:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Result in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Check Output:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Output in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスのパッシブチェックの結果を登録する/", "$local_cgi with cmd_typ=$cmd_typ shows request to submit passive check result for a particular service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>チェック結果:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Result in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>チェック出力:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Output in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
@@ -267,311 +267,311 @@
 # Tests against command type '33'
 $cmd_typ=33;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to acknowledge a host problem/", "$local_cgi with cmd_typ=$cmd_typ shows request to acknowledge a host problem" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
-like( $output, "/<td CLASS='optBoxItem'>Sticky Acknowledgement:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows Sticky Acknowledge in form" );
-like( $output, "/<td CLASS='optBoxItem'>Send Notification:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows to send notification in form" );
-like( $output, "/<td CLASS='optBoxItem'>Persistent Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows to set Persistent Comment in form" );
+like( $output, "/リクエストしたコマンド:ホストの問題を既知にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to acknowledge a host problem" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/<td CLASS='optBoxItem'>スティッキー:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows Sticky Acknowledge in form" );
+like( $output, "/<td CLASS='optBoxItem'>警報を通知:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows to send notification in form" );
+like( $output, "/<td CLASS='optBoxItem'>再起動後も Comment保持させる:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows to set Persistent Comment in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '34'
 $cmd_typ=34;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to acknowledge a service problem/", "$local_cgi with cmd_typ=$cmd_typ shows request to acknowledge a service problem" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
-like( $output, "/<td CLASS='optBoxItem'>Sticky Acknowledgement:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows Sticky Acknowledge in form" );
-like( $output, "/<td CLASS='optBoxItem'>Send Notification:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows to send notification in form" );
-like( $output, "/<td CLASS='optBoxItem'>Persistent Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows to set Persistent Comment in form" );
+like( $output, "/リクエストしたコマンド:サービスの問題を既知にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to acknowledge a service problem" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/<td CLASS='optBoxItem'>スティッキー:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows Sticky Acknowledge in form" );
+like( $output, "/<td CLASS='optBoxItem'>警報を通知:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows to send notification in form" );
+like( $output, "/<td CLASS='optBoxItem'>再起動後も Comment保持させる:</td>/", "$local_cgi with cmd_typ=$cmd_typ allows to set Persistent Comment in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '35'
 $cmd_typ=35;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to start executing active service checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to start executing system wide active service checks" );
+like( $output, "/リクエストしたコマンド:サービスチェックを開始する/", "$local_cgi with cmd_typ=$cmd_typ shows request to start executing system wide active service checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '36'
 $cmd_typ=36;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to stop executing active service checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop executing system wide active service checks" );
+like( $output, "/リクエストしたコマンド:サービスチェックを停止する/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop executing system wide active service checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '37'
 $cmd_typ=37;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to start accepting passive service checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to start accepting executing system wide passive service checks" );
+like( $output, "/リクエストしたコマンド:パッシブサービスチェックを開始する/", "$local_cgi with cmd_typ=$cmd_typ shows request to start accepting executing system wide passive service checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '38'
 $cmd_typ=38;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to stop accepting passive service checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop accepting system wide passive service checks" );
+like( $output, "/リクエストしたコマンド:パッシブサービスチェックを停止する/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop accepting system wide passive service checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '39'
 $cmd_typ=39;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to start accepting passive service checks for a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows request to start accepting passive service checks for a particular service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスのパッシブチェックを開始する/", "$local_cgi with cmd_typ=$cmd_typ shows request to start accepting passive service checks for a particular service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '40'
 $cmd_typ=40;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to stop accepting passive service checks for a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop accepting passive service checks for a particular service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスのパッシブチェックを停止する/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop accepting passive service checks for a particular service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '41'
 $cmd_typ=41;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable event handlers/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable system wide event handlers" );
+like( $output, "/リクエストしたコマンド:イベントハンドラを有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable system wide event handlers" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '42'
 $cmd_typ=42;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable event handlers/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable system wide event handlers" );
+like( $output, "/リクエストしたコマンド:イベントハンドラを無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable system wide event handlers" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '43'
 $cmd_typ=43;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable the event handler for a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable event handler of a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストのイベントハンドラを有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable event handler of a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '44'
 $cmd_typ=44;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable the event handler for a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable event handler of a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストのイベントハンドラを無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable event handler of a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '45'
 $cmd_typ=45;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable the event handler for a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable event handler of  a particular service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスのイベントハンドラを有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable event handler of  a particular service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '46'
 $cmd_typ=46;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable the event handler for a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable event handler   of a particular service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service Name in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスのイベントハンドラを無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable event handler   of a particular service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '47'
 $cmd_typ=47;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable active checks of a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable active checks of a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストチェックを有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable active checks of a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '48'
 $cmd_typ=48;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable active checks of a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable active checks of a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストチェックを無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable active checks of a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '49'
 $cmd_typ=49;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to start obsessing over service checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to start obsessing over service checks" );
+like( $output, "/リクエストしたコマンド:Obsessing Overサービスチェックを開始する/", "$local_cgi with cmd_typ=$cmd_typ shows request to start obsessing over service checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '50'
 $cmd_typ=50;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to stop obsessing over service checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop obsessing over service checks" );
+like( $output, "/リクエストしたコマンド:Obsessing Overサービスチェックを停止する/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop obsessing over service checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '51'
 $cmd_typ=51;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to remove a host acknowledgement/", "$local_cgi with cmd_typ=$cmd_typ shows request to remove a host acknowledgement" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストの既知の問題を削除する/", "$local_cgi with cmd_typ=$cmd_typ shows request to remove a host acknowledgement" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 # Tests against command type '52'
 $cmd_typ=52;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to remove a service acknowledgement/", "$local_cgi with cmd_typ=$cmd_typ shows request to remove a service acknowledgement" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:サービスの既知の問題を削除する/", "$local_cgi with cmd_typ=$cmd_typ shows request to remove a service acknowledgement" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '55'
 $cmd_typ=55;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to schedule downtime for a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for a particular Host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Start Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>End Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
+like( $output, "/リクエストしたコマンド:ホストのダウンタイムをスケジュールに追加する/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for a particular Host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>開始時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>終了時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '56'
 $cmd_typ=56;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to schedule downtime for a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for a particular Service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Start Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>End Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
+like( $output, "/リクエストしたコマンド:サービスのダウンタイムをスケジュールに追加する/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for a particular Service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>開始時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>終了時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '57'
 $cmd_typ=57;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable flap detection for a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable flap detection for a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストのフラップ検知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable flap detection for a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '58'
 $cmd_typ=58;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable flap detection for a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable flap detection for a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:ホストのフラップ検知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable flap detection for a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '59'
 $cmd_typ=59;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable flap detection for a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable flap detection for a particular service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:サービスのフラップ検知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable flap detection for a particular service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '60'
 $cmd_typ=60;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable flap detection for a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable flap detection for a particular service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:サービスのフラップ検知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable flap detection for a particular service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '61'
 $cmd_typ=61;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable flap detection for hosts and services/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable flap detection for hosts and services" );
+like( $output, "/リクエストしたコマンド:ホストとサービスのフラップ検知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable flap detection for hosts and services" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '62'
 $cmd_typ=62;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable flap detection for hosts and services/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable flap detection for hosts and services" );
+like( $output, "/リクエストしたコマンド:ホストとサービスのフラップ検知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable flap detection for hosts and services" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '63'
 $cmd_typ=63;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable notifications for all services in a particular hostgroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all services in a particular hostgroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Hostgroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストグループ上の全サービスの通知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all services in a particular hostgroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホストグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '64'
 $cmd_typ=64;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable notifications for all services in a particular hostgroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all services in a particular hostgroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Hostgroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストグループ上の全サービスの通知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all services in a particular hostgroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホストグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '65'
 $cmd_typ=65;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable notifications for all hosts in a particular hostgroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all hosts in a particular hostgroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Hostgroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストグループ上の全ホストの通知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all hosts in a particular hostgroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホストグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '66'
 $cmd_typ=66;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable notifications for all hosts in a particular hostgroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all hosts in a particular hostgroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Hostgroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストグループ上の全ホストの通知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all hosts in a particular hostgroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホストグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '67'
 $cmd_typ=67;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable active checks of all services in a particular hostgroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable active checks of all services in a particular hostgroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Hostgroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストグループ上の全てのサービスチェックを有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable active checks of all services in a particular hostgroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホストグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '68'
 $cmd_typ=68;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable active checks of all services in a particular hostgroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable active checks of all services in a particular hostgroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Hostgroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストグループ上の全てのサービスチェックを無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable active checks of all services in a particular hostgroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホストグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '78'
 $cmd_typ=78;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to cancel scheduled downtime for a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to cancel scheduled downtime for a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Scheduled Downtime ID:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Scheduled Downtime ID in form" );
+like( $output, "/リクエストしたコマンド:ホストのダウンタイムをキャンセルする/", "$local_cgi with cmd_typ=$cmd_typ shows request to cancel scheduled downtime for a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ダウンタイムID:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Scheduled Downtime ID in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '79'
 $cmd_typ=79;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to cancel scheduled downtime for a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows request to cancel scheduled downtime for a particular service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Scheduled Downtime ID:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Scheduled Downtime ID in form" );
+like( $output, "/リクエストしたコマンド:サービスのダウンタイムをキャンセルする/", "$local_cgi with cmd_typ=$cmd_typ shows request to cancel scheduled downtime for a particular service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ダウンタイムID:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Scheduled Downtime ID in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '80'
 $cmd_typ=80;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable failure prediction for hosts and service/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable failure prediction for hosts and service" );
+like( $output, "/リクエストしたコマンド:ホストとサービスの予測機能を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable failure prediction for hosts and service" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
@@ -579,261 +579,259 @@
 # Tests against command type '81'
 $cmd_typ=81;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable failure prediction for hosts and service/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable failure prediction for hosts and service" );
+like( $output, "/リクエストしたコマンド:ホストとサービスの予測機能を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable failure prediction for hosts and service" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '82'
 $cmd_typ=82;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable performance data processing for hosts and services/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable performance data processing for hosts and services" );
+like( $output, "/リクエストしたコマンド:ホストとサービスのパフォーマンスデータを有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable performance data processing for hosts and services" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '83'
 $cmd_typ=83;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable performance data processing for hosts and services/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable performance data processing for hosts and services" );
+like( $output, "/リクエストしたコマンド:ホストとサービスのパフォーマンスデータを無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable performance data processing for hosts and services" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '84'
 $cmd_typ=84;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to schedule downtime for all hosts in a particular hostgroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for all hosts in a particular hostgroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Hostgroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Start Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>End Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
+like( $output, "/リクエストしたコマンド:指定したホストグループ上のホストのダウンタイムをスケジュールに追加する/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for all hosts in a particular hostgroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホストグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>開始時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>終了時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '85'
 $cmd_typ=85;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to schedule downtime for all services in a particular hostgroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for all services in a particular hostgroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Hostgroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Start Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>End Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
+like( $output, "/リクエストしたコマンド:指定したホストグループ上のサービスのダウンタイムをスケジュールに追加する/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for all services in a particular hostgroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホストグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Hostgroup Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>開始時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>終了時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '86'
 $cmd_typ=86;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to schedule downtime for all services for a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for all services for a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Start Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>End Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
+like( $output, "/リクエストしたコマンド:ホストの全サービスのダウンタイムをスケジュールに追加する/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for all services for a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>開始時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>終了時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '87'
 $cmd_typ=87;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to submit a passive check result for a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to submit a passive check result for a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Check Result:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Result in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Check Output:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Output in form" );
+like( $output, "/リクエストしたコマンド:指定したホストのパッシブチェックの結果を登録する/", "$local_cgi with cmd_typ=$cmd_typ shows request to submit a passive check result for a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>チェック結果:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Result in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>チェック出力:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Output in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '88'
 $cmd_typ=88;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to start executing host checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to start executing host checks" );
+like( $output, "/リクエストしたコマンド:ホストチェックを開始する/", "$local_cgi with cmd_typ=$cmd_typ shows request to start executing host checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '89'
 $cmd_typ=89;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to stop executing host checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop executing host checks" );
+like( $output, "/リクエストしたコマンド:ホストチェックを停止する/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop executing host checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '90'
 $cmd_typ=90;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to start accepting passive host checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to start accepting passive host checks" );
+like( $output, "/リクエストしたコマンド:パッシブホストのチェックを開始する/", "$local_cgi with cmd_typ=$cmd_typ shows request to start accepting passive host checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '91'
 $cmd_typ=91;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to stop accepting passive host checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop accepting passive host checks" );
+like( $output, "/リクエストしたコマンド:パッシブホストのチェックを停止する/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop accepting passive host checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '92'
 $cmd_typ=92;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to start accepting passive checks for a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to start accepting passive checks for a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストのパッシブチェックを開始する/", "$local_cgi with cmd_typ=$cmd_typ shows request to start accepting passive checks for a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '93'
 $cmd_typ=93;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to stop accepting passive checks for a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop accepting passive checks for a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストのパッシブチェックを停止する/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop accepting passive checks for a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '94'
 $cmd_typ=94;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to start obsessing over host checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to start obsessing over host checks" );
+like( $output, "/リクエストしたコマンド:Obsessing Overホストのチェックを開始する/", "$local_cgi with cmd_typ=$cmd_typ shows request to start obsessing over host checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '95'
 $cmd_typ=95;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to stop obsessing over host checks/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop obsessing over host checks" );
+like( $output, "/リクエストしたコマンド:Obsessing Overホストのチェックを停止する/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop obsessing over host checks" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '96'
 $cmd_typ=96;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to schedule a host check/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule a host check" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Check Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Time in form" );
+like( $output, "/リクエストしたコマンド:ホストチェックをスケジュールに追加する/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule a host check" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>チェック時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Check Time in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '99'
 $cmd_typ=99;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to start obsessing over a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows request to start obsessing over a particular service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスのObsessing Overを開始する/", "$local_cgi with cmd_typ=$cmd_typ shows request to start obsessing over a particular service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '100'
 $cmd_typ=100;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to stop obsessing over a particular service/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop obsessing over a particular service" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスのObsessing Overを停止する/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop obsessing over a particular service" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '101'
 $cmd_typ=101;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to start obsessing over a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to start obsessing over a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストのObsessing Overを開始する/", "$local_cgi with cmd_typ=$cmd_typ shows request to start obsessing over a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '102'
 $cmd_typ=102;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to stop obsessing over a particular host/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop obsessing over a particular host" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/リクエストしたコマンド:指定したホストのObsessing Overを停止する/", "$local_cgi with cmd_typ=$cmd_typ shows request to stop obsessing over a particular host" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '109'
 $cmd_typ=109;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable notifications for all services in a particular servicegroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all services in a particular servicegroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Servicegroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスグループ上の全サービスの通知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all services in a particular servicegroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービスグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '110'
 $cmd_typ=110;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable notifications for all services in a particular servicegroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all services in a particular servicegroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Servicegroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスグループ上の全サービスの通知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all services in a particular servicegroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービスグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '111'
 $cmd_typ=111;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable notifications for all hosts in a particular servicegroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all hosts in a particular servicegroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Servicegroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスグループ上の全ホストの通知を有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable notifications for all hosts in a particular servicegroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービスグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '112'
 $cmd_typ=112;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable notifications for all hosts in a particular servicegroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all hosts in a particular servicegroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Servicegroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスグループ上の全ホストの通知を無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable notifications for all hosts in a particular servicegroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービスグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '113'
 $cmd_typ=113;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to enable active checks of all services in a particular servicegroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable active checks of all services in a particular servicegroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Servicegroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスグループ上の全てのサービスチェックを有効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to enable active checks of all services in a particular servicegroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービスグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '114'
 $cmd_typ=114;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to disable active checks of all services in a particular servicegroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable active checks of all services in a particular servicegroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Servicegroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスグループ上の全てのサービスチェックを無効にする/", "$local_cgi with cmd_typ=$cmd_typ shows request to disable active checks of all services in a particular servicegroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービスグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '121'
 $cmd_typ=121;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to schedule downtime for all hosts in a particular servicegroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for all hosts in a particular servicegroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Servicegroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Start Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>End Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスグループ上のホストのダウンタイムをスケジュールに追加する/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for all hosts in a particular servicegroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービスグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>開始時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>終了時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '122'
 $cmd_typ=122;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to schedule downtime for all services in a particular servicegroup/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for all services in a particular servicegroup" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Servicegroup Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Start Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>End Time:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/リクエストしたコマンド:指定したサービスグループ上のサービスのダウンタイムをスケジュールに追加する/", "$local_cgi with cmd_typ=$cmd_typ shows request to schedule downtime for all services in a particular servicegroup" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービスグループ名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Servicegroup Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>開始時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Start Time in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>終了時刻:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires End Time in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '159'
 $cmd_typ=159;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to send a custom host notification/", "$local_cgi with cmd_typ=$cmd_typ shows request to send a custom host notification" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
 # Tests against command type '160'
 $cmd_typ=160;
 $output = `NAGIOS_CGI_CONFIG=etc/cgi.cfg $remote_user REQUEST_METHOD=GET QUERY_STRING='cmd_typ=$cmd_typ' $local_cgi`;
-like( $output, "/You are requesting to send a custom service notification/", "$local_cgi with cmd_typ=$cmd_typ shows request to send a custom service notification" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Host Name:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Service:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Author \\(Your Name\\):</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
-like( $output, "/<td CLASS='optBoxRequiredItem'>Comment:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>ホスト名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Host Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>サービス名:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Service in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>作成者:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Author Name in form" );
+like( $output, "/<td CLASS='optBoxRequiredItem'>コメント:</td>/", "$local_cgi with cmd_typ=$cmd_typ requires Comment in form" );
 unlike( $output, "/Sorry, but no information is available for this command./", "$local_cgi with cmd_typ=$cmd_typ has a command description" );
 
 
diff -urN nagios-3.2.3.orig/t/660status-downtimes-comments.t nagios-3.2.3/t/660status-downtimes-comments.t
--- nagios-3.2.3.orig/t/660status-downtimes-comments.t	2010-01-07 10:03:01.000000000 +0900
+++ nagios-3.2.3/t/660status-downtimes-comments.t	2010-12-13 00:15:51.000000000 +0900
@@ -37,7 +37,7 @@
 	my $start = time;
 	$output = `NAGIOS_CGI_CONFIG=etc/cgi-with-generated-status.cfg REQUEST_METHOD=GET REMOTE_USER=nagiosadmin QUERY_STRING="host=host1" $status_cgi`;
 	my $duration = time-$start;
-	like( $output, "/This service has $num_comments comments associated with it/", "Found $num_comments comments in HTML output from status.dat. Took $duration seconds" );
+	like( $output, "/このサービスには $num_comments 個のコメントがあります/", "Found $num_comments comments in HTML output from status.dat. Took $duration seconds" );
 
 	# This test is invalid - the comments displayed are in the order they are read
 	# As the test status.dat generator is in a random order, the output will also be in the same
